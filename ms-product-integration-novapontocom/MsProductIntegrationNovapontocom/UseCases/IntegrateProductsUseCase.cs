using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using Ms.Api.Utilities.Contracts.DTOs;
using MsProductIntegrationNovapontocom.Contracts.DTOs;
using MsProductIntegrationNovapontocom.Contracts.Enums;
using MsProductIntegrationNovapontocom.Contracts.Service;
using MsProductIntegrationNovapontocom.Contracts.UseCases;
using MsProductIntegrationNovapontocom.Extensions;
using Newtonsoft.Json;
using Platform.Events.Core.Contracts.Enums;
using Platform.Events.Core.Contracts.Product;
using System.Diagnostics;

namespace MsProductIntegrationNovapontocom.UseCases
{
    public class IntegrateProductsUseCase : IIntegrateProductsUseCase
    {
        readonly IConfiguration _configuration;
        readonly IIntegrationService _integrationService;
        readonly ISendMessageToQueueUseCase _sendMessageToQueueUseCase;
        public readonly string _urlProductsDb;
        public readonly string _urlCategoryDb;
        public readonly string _store;
        public readonly string _storeName;
        public readonly string _typeProductSku;
        readonly ILogger<IntegrateProductsUseCase> _logger;
        public IntegrateProductsUseCase(IConfiguration configuration,
            ISendMessageToQueueUseCase sendMessageToQueueUseCase,
            IIntegrationService integrationService,
            ILogger<IntegrateProductsUseCase> logger)
        {
            _configuration = configuration;
            _integrationService = integrationService;
            _sendMessageToQueueUseCase = sendMessageToQueueUseCase;
            _logger = logger;

            _store = _configuration.GetValue<string>("StoreId");
            _storeName = _configuration.GetValue<string>("Store");
            _typeProductSku = _configuration.GetValue<string>("TypeProductSku");
            _urlProductsDb = String.Format(_configuration.GetValue<string>("DatabaseProducts"), _store, _typeProductSku);
            _urlCategoryDb = _configuration.GetValue<string>("DatabaseCategory");

        }

        public async Task IntegrateProducts(IntegrationType integrationType)
        {
            try
            {
                _logger.LogInformation($"Initializing Importation...{DateTime.Now}");

                Stopwatch s = new Stopwatch();
                s.Start();

                CreateProductSkuPreDefinedPriceEventV1Image[] images;
                string hash;
                ProductsDB product;
                ProductSkuDB sku;

                _logger.LogInformation("Getting products data from Database... ");
                _logger.LogInformation($"Url products data from Database: {_urlProductsDb}");
                var products = await GetProductsDB();
                _logger.LogInformation($"Totals products database in returning: {products.Count()}");

                _logger.LogInformation("Getting categories data from Database...");
                _logger.LogInformation($"Url categories data from Database: {_urlCategoryDb}");
                var categories = await GetCategoriesDB();
                _logger.LogInformation($"Totals categories database in returning: {categories.Count()}");

                // load partner categories
                _logger.LogInformation("Getting categories from partner...");
                var partnerCategories = await _integrationService.GetCategories();
                _logger.LogInformation($"Totals categories in returning: {partnerCategories.Count()}");

                IEnumerable<ProductPartner> partnerProducts = null;

                // load partner products
                switch (integrationType)
                {
                    case IntegrationType.FULL:
                        partnerProducts = await _integrationService.GetProducts();
                        break;
                    case IntegrationType.PARTIAL:
                        partnerProducts = await _integrationService.GetProductsPartial();
                        break;
                    default:
                        throw new Exception("Integration type is not defined");
                        break;
                }

                _logger.LogInformation($"Totals partner products in returning: {partnerProducts.Count()}");

                _logger.LogInformation($"Reading products {integrationType} from partner");

                foreach (var productPartner in partnerProducts)
                {
                    var productCode = productPartner.Codigo.ToString();
                    var partnerCategory = partnerCategories.FirstOrDefault(c => c.Id == productPartner.Categoria);
                    if (partnerCategory == null) continue;

                    // map partner category to a valid category
                    var categoryDefault = MapCategory(categories, partnerCategory);
                    if (categoryDefault == null) continue;

                    images = new CreateProductSkuPreDefinedPriceEventV1Image[]
                    {
                        new()
                        {
                            Size = ProductImageSize.MOBILE,
                            Url = productPartner.Skus[0].Imagens[0].UrlImagemMenor
                        },
                        new()
                        {
                            Size = ProductImageSize.DESKTOP_M,
                            Url = productPartner.Skus[0].Imagens[0].UrlImagemMaior
                        },
                        new()
                        {
                            Size = ProductImageSize.DESKTOP_L,
                            Url = productPartner.Skus[0].Imagens[0].UrlImagemZoom
                        }
                    };

                    List<Atribute_Generic> AttributeProducts = new();

                    if (productPartner?.Grupos != null)
                    {
                        foreach (var obj in productPartner?.Grupos)
                        {
                            if (obj?.Codigo == 740)
                            {
                                if (obj?.Itens != null)
                                {
                                    foreach (var obj2 in obj?.Itens)
                                    {
                                        Atribute_Generic oED_AttributeNew = new Atribute_Generic();
                                        oED_AttributeNew.Type = Convert.ToString(Atribute_Generic_Type.SKU_Caracteristica);
                                        oED_AttributeNew.Description = obj2?.Descricao;
                                        oED_AttributeNew.Value = obj2?.Valor;
                                        AttributeProducts.Add(oED_AttributeNew);
                                    }
                                }
                            }
                            else
                            {
                                if (obj?.Itens != null)
                                {
                                    foreach (var obj2 in obj?.Itens)
                                    {
                                        Atribute_Generic oED_AttributeNew = new Atribute_Generic();
                                        oED_AttributeNew.Type = Convert.ToString(Atribute_Generic_Type.Produto_EspecificacaoTecnica);
                                        oED_AttributeNew.Description = obj2?.Descricao;
                                        oED_AttributeNew.Value = obj2?.Valor;
                                        AttributeProducts.Add(oED_AttributeNew);
                                    }
                                }
                            }
                        }
                    }

                    // if product does not exists
                    if (!products.ContainsKey(productCode))
                    {
                        _logger.LogInformation($"Sending creating product {productPartner.DisplayName}");

                        // create product
                        await _sendMessageToQueueUseCase.Queue(new CreateProductSkuPreDefinedPriceEventV1()
                        {
                            Code = productCode,
                            DisplayName = productPartner.DisplayName,
                            Description = productPartner.DescricaoLonga,
                            CategoryId = categoryDefault,
                            StoreId = _store,
                            Images = images,
                            Attributes = AttributeProducts
                        });
                        continue;
                    }

                    // check if the product was alter since last sync
                    product = products[productCode];
                    hash = JsonConvert.SerializeObject(new
                    {
                        DisplayName = productPartner.DisplayName,
                        Description = productPartner.DescricaoLonga,
                        CategoryId = categoryDefault,
                        Active = true,
                        Images = images,
                        Attributes = AttributeProducts
                    }).Sha256();

                    // different hash's will indicate that a product has modification(s)
                    if (product.Hash != hash)
                    {
                        _logger.LogInformation($"Sending updating product {productPartner.DisplayName}");

                        // update product
                        await _sendMessageToQueueUseCase.Queue(new UpdateProductSkuPreDefinedPriceEventV1()
                        {
                            Id = product.Id,
                            StoreId = _store,
                            Code = productCode,
                            DisplayName = productPartner.DisplayName,
                            Description = productPartner.DescricaoLonga,
                            CategoryId = categoryDefault,
                            Active = true,
                            Images = images,
                            Attributes = AttributeProducts
                        });
                    }

                    foreach (var partnerSku in productPartner.Skus ?? new List<SkuPartner>())
                    {
                        List<Atribute_Generic> AttributeSkus = new();

                        if (partnerSku?.GruposSku != null)
                        {
                            foreach (var obj in partnerSku?.GruposSku)
                            {

                                if (obj.Itens != null)
                                {
                                    foreach (var obj2 in obj.Itens)
                                    {
                                        Atribute_Generic oED_AttributeNew = new Atribute_Generic();
                                        oED_AttributeNew.Type = Convert.ToString(Atribute_Generic_Type.SKU_Caracteristica);
                                        oED_AttributeNew.Description = obj2.Descricao;
                                        oED_AttributeNew.Value = obj2.Valor;
                                        AttributeSkus.Add(oED_AttributeNew);
                                    }
                                }

                            }
                        }

                        // if product does not exists
                        if (!product.Skus.ContainsKey(partnerSku.Codigo.ToString()))
                        {
                            _logger.LogInformation($"Sending creating product sku {productPartner.DisplayName}");

                            // create sku
                            await _sendMessageToQueueUseCase.Queue(new CreateSkuPreDefinedPriceEventV1()
                            {
                                Code = partnerSku?.Codigo.ToString(),
                                ProductId = product?.Id,
                                ListPrice = 0,
                                SalePrice = Convert.ToDecimal(partnerSku?.Preco),
                                Availability = false,
                                Model = partnerSku?.Modelo,
                                Attributes = AttributeSkus
                            });
                            continue;
                        }

                        sku = product?.Skus[partnerSku?.Codigo.ToString()];

                        // check if the product was alter since last sync
                        hash = JsonConvert.SerializeObject(new
                        {
                            Code = partnerSku?.Codigo,
                            ListPrice = 0,
                            SalePrice = partnerSku?.Preco,
                            Attributes = AttributeSkus,
                            Tags = (string[]?)null,
                            Active = true,
                            Availability = false,
                            Model = partnerSku?.Modelo
                        }).Sha256();

                        // different hash's will indicate that a product has modification(s)
                        if (sku.Hash == hash) continue;

                        _logger.LogInformation($"Sending updating product sku {productPartner.DisplayName}");
                        // update sku
                        await _sendMessageToQueueUseCase.Queue(new UpdateSkuPreDefinedPriceEventV1()
                        {
                            Id = sku.Id,
                            Code = partnerSku.Codigo.ToString(),
                            ProductId = product.Id,
                            ListPrice = 0,
                            SalePrice = Convert.ToDecimal(partnerSku?.Preco),
                            Active = true,
                            Availability = false,
                            Attributes = AttributeSkus,
                            Model = partnerSku.Modelo
                        });
                    }
                }

                _logger.LogInformation($"Products imported successfully...{DateTime.Now}");

                TimeSpan elapse = s.Elapsed;
                s.Stop();

                _logger.LogInformation($"Time taken to import the store {_storeName}: {elapse.ToString(@"hh\:mm\:ss")} ");
            }
            catch (Exception ex)
            {
                _logger.LogError($"Error when trying import products {integrationType} from store {_storeName}");
                throw ex;
            }
        }

        public async Task IntegratePrices()
        {
            try
            {
                string hash;
                ProductSkuDB sku;

                var products = await GetProductsDB();

                var availabilityPartner = await _integrationService.GetAvailabilities();

                foreach (var availability in availabilityPartner)
                {
                    var produto = products.Values.Where(x => x.Skus.ContainsKey(availability.Codigo.ToString())).FirstOrDefault();

                    if (produto == null) continue;

                    sku = produto.Skus[availability.Codigo.ToString()];

                    await _sendMessageToQueueUseCase.Queue(new UpdateSkuPreDefinedPriceEventV1()
                    {
                        SkuId = sku.Id,
                        ProductId = produto.Id,
                        ListPrice = Convert.ToDecimal(availability.PrecoDe),
                        SalePrice = Convert.ToDecimal(availability.PrecoPor),
                    });
                }

                _logger.LogInformation($"Prices imported successfully...");
            }
            catch (Exception ex)
            {
                _logger.LogError($"Error when trying import products availability from store {_storeName}");
                throw ex;
            }
        }

        public async Task IntegrateAvailability()
        {
            try
            {
                var products = await GetProductsDB();

                var availabilityPartner = await _integrationService.GetAvailabilities();

                string hash;
                ProductSkuDB sku;

                foreach (var availability in availabilityPartner)
                {
                    var produto = products.Values.Where(x => x.Skus.ContainsKey(availability.Codigo.ToString())).FirstOrDefault();

                    if (produto == null) continue;

                    sku = produto.Skus[availability.Codigo.ToString()];

                    await _sendMessageToQueueUseCase.Queue(new AvailabilitySkuPreDefinedPriceEventV1()
                    {
                        SkuId = sku.Id,
                        ProductId = produto.Id,
                        Availability = Convert.ToBoolean(availability.Disponibilidade)
                    });
                }

                _logger.LogInformation($"Avaiabilities importeds successfully...");
            }
            catch (Exception ex)
            {
                _logger.LogError($"Error when trying import products availability from store {_storeName}");
                throw ex;
            }
        }

        async Task<Dictionary<string, ProductsDB>> GetProductsDB()
        {
            try
            {
                HttpClient client = new();

                client.Timeout = TimeSpan.FromMinutes(5);
                var response = await client.GetAsync($"{_urlProductsDb}");
                var content = await response.Content.ReadAsStringAsync();

                if (!response.IsSuccessStatusCode)
                    throw new Exception("unexpected return", new Exception(content));

                return JsonConvert.DeserializeObject<Dictionary<string, ProductsDB>>(content);
            }
            catch (Exception ex)
            {
                _logger.LogError($"Error when trying get products from Database");
                throw ex;
            }
        }

        async Task<IEnumerable<CategoryDB>> GetCategoriesDB()
        {
            try
            {
                HttpClient client = new();

                var response = await client.GetAsync($"{_urlCategoryDb}");
                var content = await response.Content.ReadAsStringAsync();

                if (!response.IsSuccessStatusCode)
                    throw new Exception("unexpected return", new Exception(content));


                List<CategoryDB> lstCategoriesComplete = new();
                var lstLevel1 = JsonConvert.DeserializeObject<IEnumerable<CategoryDB>>(content);

                if (lstLevel1 != null && lstLevel1.Any())
                {
                    lstCategoriesComplete.AddRange(lstLevel1);

                    foreach (var level1 in lstLevel1)
                    {
                        if (level1.Children != null && level1.Children.Any())
                            lstCategoriesComplete.AddRange(level1.Children);

                        foreach (var level2 in level1.Children)
                        {
                            if (level2.Children != null && level2.Children.Any())
                                lstCategoriesComplete.AddRange(level2.Children);
                        }
                    }
                }

                return lstCategoriesComplete.ToList();
            }
            catch (Exception ex)
            {
                _logger.LogError($"Error when trying get categories from Database");
                throw ex;
            }
        }

        string? MapCategory(IEnumerable<CategoryDB> categoriesDb, CategoryPartner partnerCategory)
        {
            return partnerCategory.Nome?.Trim() switch
            {
                "Acessórios e Inovações" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios e Inovações")?.Id,
                "Acessórios e Periféricos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios e Periféricos")?.Id,
                "Acessórios Apple" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Apple")?.Id,
                "Acessórios para Notebook" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Notebook")?.Id,
                "Apoios Ergométricos" => categoriesDb.FirstOrDefault(x => x.Name == "Apoios Ergométricos")?.Id,
                "Cabos e Adaptadores" => categoriesDb.FirstOrDefault(x => x.Name == "Cabos e Adaptadores")?.Id,
                "Carregadores e Baterias" => categoriesDb.FirstOrDefault(x => x.Name == "Carregadores e Baterias")?.Id,
                "Case e Gaveta para HD" => categoriesDb.FirstOrDefault(x => x.Name == "Case e Gaveta para HD")?.Id,
                "Limpeza e Conservação de PC" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza e Conservação de PC")?.Id,
                "Mesas Digitalizadoras" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas Digitalizadoras")?.Id,
                "Microfone para PC" => categoriesDb.FirstOrDefault(x => x.Name == "Microfone para PC")?.Id,
                "Mouse Pad" => categoriesDb.FirstOrDefault(x => x.Name == "Mouse Pad")?.Id,
                "Mouses" => categoriesDb.FirstOrDefault(x => x.Name == "Mouses")?.Id,
                "Receptores de TV Digital" => categoriesDb.FirstOrDefault(x => x.Name == "Receptores de TV Digital")?.Id,
                "Suporte para Notebooks" => categoriesDb.FirstOrDefault(x => x.Name == "Suporte para Notebooks")?.Id,
                "Teclados" => categoriesDb.FirstOrDefault(x => x.Name == "Teclados")?.Id,
                "Trava e Cabo de Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Trava e Cabo de Segurança")?.Id,
                "Ventilador USB" => categoriesDb.FirstOrDefault(x => x.Name == "Ventilador USB")?.Id,
                "Webcam" => categoriesDb.FirstOrDefault(x => x.Name == "Webcam")?.Id,
                "Acessórios para Celulares" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Celulares")?.Id,
                "Ampliador de Tela e Controles" => categoriesDb.FirstOrDefault(x => x.Name == "Ampliador de Tela e Controles")?.Id,
                "Bastão de Selfie" => categoriesDb.FirstOrDefault(x => x.Name == "Bastão de Selfie")?.Id,
                "Bateria de celular" => categoriesDb.FirstOrDefault(x => x.Name == "Bateria de celular")?.Id,
                "Braçadeiras e Pulseiras para celular" => categoriesDb.FirstOrDefault(x => x.Name == "Braçadeiras e Pulseiras para celular")?.Id,
                "Cabo para celular" => categoriesDb.FirstOrDefault(x => x.Name == "Cabo para celular")?.Id,
                "Caneta touch" => categoriesDb.FirstOrDefault(x => x.Name == "Caneta touch")?.Id,
                "Capa para celular" => categoriesDb.FirstOrDefault(x => x.Name == "Capa para celular")?.Id,
                "Carregador de celular" => categoriesDb.FirstOrDefault(x => x.Name == "Carregador de celular")?.Id,
                "Flash e Lente" => categoriesDb.FirstOrDefault(x => x.Name == "Flash e Lente")?.Id,
                "Óculos de Realidade Virtual" => categoriesDb.FirstOrDefault(x => x.Name == "Óculos de Realidade Virtual")?.Id,
                "Peças de Reposição" => categoriesDb.FirstOrDefault(x => x.Name == "Peças de Reposição")?.Id,
                "Películas e Adesivos de celular" => categoriesDb.FirstOrDefault(x => x.Name == "Películas e Adesivos de celular")?.Id,
                "Suporte" => categoriesDb.FirstOrDefault(x => x.Name == "Suporte")?.Id,
                "Acessórios para TVs" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para TVs")?.Id,
                "Antenas e Receptores para TVs" => categoriesDb.FirstOrDefault(x => x.Name == "Antenas e Receptores para TVs")?.Id,
                "Cabos e Conectores para TVs" => categoriesDb.FirstOrDefault(x => x.Name == "Cabos e Conectores para TVs")?.Id,
                "Câmera para TV" => categoriesDb.FirstOrDefault(x => x.Name == "Câmera para TV")?.Id,
                "Controles Remoto para TVs" => categoriesDb.FirstOrDefault(x => x.Name == "Controles Remoto para TVs")?.Id,
                "Conversores Digitais" => categoriesDb.FirstOrDefault(x => x.Name == "Conversores Digitais")?.Id,
                "Limpeza de Tela para TVs" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza de Tela para TVs")?.Id,
                "Óculos 3D" => categoriesDb.FirstOrDefault(x => x.Name == "Óculos 3D")?.Id,
                "Streaming Media Player" => categoriesDb.FirstOrDefault(x => x.Name == "Streaming Media Player")?.Id,
                "Suportes para Tv" => categoriesDb.FirstOrDefault(x => x.Name == "Suportes para Tv")?.Id,
                "Automação Comercial" => categoriesDb.FirstOrDefault(x => x.Name == "Automação Comercial")?.Id,
                "Impressoras de Automação Comercial" => categoriesDb.FirstOrDefault(x => x.Name == "Impressoras de Automação Comercial")?.Id,
                "Cartões de Memória" => categoriesDb.FirstOrDefault(x => x.Name == "Cartões de Memória")?.Id,
                "Componentes e Peças" => categoriesDb.FirstOrDefault(x => x.Name == "Componentes e Peças")?.Id,
                "Fontes" => categoriesDb.FirstOrDefault(x => x.Name == "Fontes")?.Id,
                "Gabinetes" => categoriesDb.FirstOrDefault(x => x.Name == "Gabinetes")?.Id,
                "Gravadores de DVD e Blu-Ray" => categoriesDb.FirstOrDefault(x => x.Name == "Gravadores de DVD e Blu-Ray")?.Id,
                "HD Interno" => categoriesDb.FirstOrDefault(x => x.Name == "HD Interno")?.Id,
                "Memórias" => categoriesDb.FirstOrDefault(x => x.Name == "Memórias")?.Id,
                "Placa para PC" => categoriesDb.FirstOrDefault(x => x.Name == "Placa para PC")?.Id,
                "Placas de Captura de Vídeo" => categoriesDb.FirstOrDefault(x => x.Name == "Placas de Captura de Vídeo")?.Id,
                "Placas de Som" => categoriesDb.FirstOrDefault(x => x.Name == "Placas de Som")?.Id,
                "Placas de Vídeo" => categoriesDb.FirstOrDefault(x => x.Name == "Placas de Vídeo")?.Id,
                "Processadores" => categoriesDb.FirstOrDefault(x => x.Name == "Processadores")?.Id,
                "Ventiladores e Coolers" => categoriesDb.FirstOrDefault(x => x.Name == "Ventiladores e Coolers")?.Id,
                "E-Reader" => categoriesDb.FirstOrDefault(x => x.Name == "E-Reader")?.Id,
                "Acessórios para Leitor Digital" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Leitor Digital")?.Id,
                "Leitor de Livros Digitais" => categoriesDb.FirstOrDefault(x => x.Name == "Leitor de Livros Digitais")?.Id,
                "Equipamentos de Rede" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos de Rede")?.Id,
                "Adaptador de Rede" => categoriesDb.FirstOrDefault(x => x.Name == "Adaptador de Rede")?.Id,
                "Modems" => categoriesDb.FirstOrDefault(x => x.Name == "Modems")?.Id,
                "Roteadores" => categoriesDb.FirstOrDefault(x => x.Name == "Roteadores")?.Id,
                "Servidores de Impressão" => categoriesDb.FirstOrDefault(x => x.Name == "Servidores de Impressão")?.Id,
                "Switch e Hub" => categoriesDb.FirstOrDefault(x => x.Name == "Switch e Hub")?.Id,
                "Fones de Ouvido" => categoriesDb.FirstOrDefault(x => x.Name == "Fones de Ouvido")?.Id,
                "Monitores" => categoriesDb.FirstOrDefault(x => x.Name == "Monitores")?.Id,
                "Pen Drives" => categoriesDb.FirstOrDefault(x => x.Name == "Pen Drives")?.Id,
                "Projetores e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Projetores e Acessórios")?.Id,
                "Apresentador Multimídia" => categoriesDb.FirstOrDefault(x => x.Name == "Apresentador Multimídia")?.Id,
                "Projetores" => categoriesDb.FirstOrDefault(x => x.Name == "Projetores")?.Id,
                "Suporte de Projetores" => categoriesDb.FirstOrDefault(x => x.Name == "Suporte de Projetores")?.Id,
                "Proteção Elétrica" => categoriesDb.FirstOrDefault(x => x.Name == "Proteção Elétrica")?.Id,
                "Estabilizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Estabilizadores")?.Id,
                "Filtros de linha" => categoriesDb.FirstOrDefault(x => x.Name == "Filtros de linha")?.Id,
                "Nobreaks" => categoriesDb.FirstOrDefault(x => x.Name == "Nobreaks")?.Id,
                "Transformador, Conversor e Inversor" => categoriesDb.FirstOrDefault(x => x.Name == "Transformador, Conversor e Inversor")?.Id,
                "Smart Home" => categoriesDb.FirstOrDefault(x => x.Name == "Smart Home")?.Id,
                "Assistente Virtual" => categoriesDb.FirstOrDefault(x => x.Name == "Assistente Virtual")?.Id,
                "Fechadura Smart" => categoriesDb.FirstOrDefault(x => x.Name == "Fechadura Smart")?.Id,
                "Lâmpada Inteligente" => categoriesDb.FirstOrDefault(x => x.Name == "Lâmpada Inteligente")?.Id,
                "Sensor Inteligente" => categoriesDb.FirstOrDefault(x => x.Name == "Sensor Inteligente")?.Id,
                "Smart Câmera" => categoriesDb.FirstOrDefault(x => x.Name == "Smart Câmera")?.Id,
                "Smart Controle" => categoriesDb.FirstOrDefault(x => x.Name == "Smart Controle")?.Id,
                "Smart Plug" => categoriesDb.FirstOrDefault(x => x.Name == "Smart Plug")?.Id,
                "Smart Vídeo Porteiro" => categoriesDb.FirstOrDefault(x => x.Name == "Smart Vídeo Porteiro")?.Id,
                "Smartwatches" => categoriesDb.FirstOrDefault(x => x.Name == "Smartwatches")?.Id,
                "Softwares e Programas" => categoriesDb.FirstOrDefault(x => x.Name == "Softwares e Programas")?.Id,
                "Suprimentos" => categoriesDb.FirstOrDefault(x => x.Name == "Suprimentos")?.Id,
                "Cartuchos" => categoriesDb.FirstOrDefault(x => x.Name == "Cartuchos")?.Id,
                "Fita para Impressora" => categoriesDb.FirstOrDefault(x => x.Name == "Fita para Impressora")?.Id,
                "Mídias Graváveis" => categoriesDb.FirstOrDefault(x => x.Name == "Mídias Graváveis")?.Id,
                "Refil de Tinta" => categoriesDb.FirstOrDefault(x => x.Name == "Refil de Tinta")?.Id,
                "Toners" => categoriesDb.FirstOrDefault(x => x.Name == "Toners")?.Id,
                "Agro, Indústria e Comércio" => categoriesDb.FirstOrDefault(x => x.Name == "Agro, Indústria e Comércio")?.Id,
                "Aquecimento" => categoriesDb.FirstOrDefault(x => x.Name == "Aquecimento")?.Id,
                "Climatização Industrial" => categoriesDb.FirstOrDefault(x => x.Name == "Climatização Industrial")?.Id,
                "Exaustores" => categoriesDb.FirstOrDefault(x => x.Name == "Exaustores")?.Id,
                "Cocção" => categoriesDb.FirstOrDefault(x => x.Name == "Cocção")?.Id,
                "Assadores e Frangueiras" => categoriesDb.FirstOrDefault(x => x.Name == "Assadores e Frangueiras")?.Id,
                "Chapa e Sanduicheira Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Chapa e Sanduicheira Industriais")?.Id,
                "Char Broilers" => categoriesDb.FirstOrDefault(x => x.Name == "Char Broilers")?.Id,
                "Fogões Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Fogões Industriais")?.Id,
                "Fornos Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Fornos Industriais")?.Id,
                "Fritadeiras Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Fritadeiras Industriais")?.Id,
                "Tachos" => categoriesDb.FirstOrDefault(x => x.Name == "Tachos")?.Id,
                "Equipamento de Proteção Individual (EPI)" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamento de Proteção Individual (EPI)")?.Id,
                "Aventais" => categoriesDb.FirstOrDefault(x => x.Name == "Aventais")?.Id,
                "Capacetes de Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Capacetes de Segurança")?.Id,
                "Coletes de Sinalização" => categoriesDb.FirstOrDefault(x => x.Name == "Coletes de Sinalização")?.Id,
                "Luvas de Proteção" => categoriesDb.FirstOrDefault(x => x.Name == "Luvas de Proteção")?.Id,
                "Máscara de Proteção" => categoriesDb.FirstOrDefault(x => x.Name == "Máscara de Proteção")?.Id,
                "Óculos de Proteção" => categoriesDb.FirstOrDefault(x => x.Name == "Óculos de Proteção")?.Id,
                "Protetores de Ouvido" => categoriesDb.FirstOrDefault(x => x.Name == "Protetores de Ouvido")?.Id,
                "Toucas e Bandanas" => categoriesDb.FirstOrDefault(x => x.Name == "Toucas e Bandanas")?.Id,
                "Equipamentos para Restaurantes e Lojas" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos para Restaurantes e Lojas")?.Id,
                "Carrinhos" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos")?.Id,
                "Gôndolas" => categoriesDb.FirstOrDefault(x => x.Name == "Gôndolas")?.Id,
                "Limpeza e Higiene" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza e Higiene")?.Id,
                "Portáteis Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Portáteis Industriais")?.Id,
                "Cafeteiras Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Cafeteiras Industriais")?.Id,
                "Cortadores e Fatiadores" => categoriesDb.FirstOrDefault(x => x.Name == "Cortadores e Fatiadores")?.Id,
                "Crepeiras Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Crepeiras Industriais")?.Id,
                "Espremedores" => categoriesDb.FirstOrDefault(x => x.Name == "Espremedores")?.Id,
                "Estufas" => categoriesDb.FirstOrDefault(x => x.Name == "Estufas")?.Id,
                "Liquidificadores Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Liquidificadores Industriais")?.Id,
                "Máquina de Waffle" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Waffle")?.Id,
                "Moedores de Carne" => categoriesDb.FirstOrDefault(x => x.Name == "Moedores de Carne")?.Id,
                "Moedores e Raladores" => categoriesDb.FirstOrDefault(x => x.Name == "Moedores e Raladores")?.Id,
                "Pães e Massas" => categoriesDb.FirstOrDefault(x => x.Name == "Pães e Massas")?.Id,
                "Panquequeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Panquequeiras")?.Id,
                "Rechaud Industrial" => categoriesDb.FirstOrDefault(x => x.Name == "Rechaud Industrial")?.Id,
                "Serra Fita" => categoriesDb.FirstOrDefault(x => x.Name == "Serra Fita")?.Id,
                "Refrigeração" => categoriesDb.FirstOrDefault(x => x.Name == "Refrigeração")?.Id,
                "Cervejeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Cervejeiras")?.Id,
                "Freezer, Refrigerador e Expositor" => categoriesDb.FirstOrDefault(x => x.Name == "Freezer, Refrigerador e Expositor")?.Id,
                "Máquina de Gelo Industrial" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Gelo Industrial")?.Id,
                "Refresqueiras" => categoriesDb.FirstOrDefault(x => x.Name == "Refresqueiras")?.Id,
                "Uniformes Profissionais" => categoriesDb.FirstOrDefault(x => x.Name == "Uniformes Profissionais")?.Id,
                "Blusas e Jaquetas" => categoriesDb.FirstOrDefault(x => x.Name == "Blusas e Jaquetas")?.Id,
                "Utensílios Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Utensílios Industriais")?.Id,
                "Acessórios Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Industriais")?.Id,
                "Balanças Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Balanças Industriais")?.Id,
                "Torre de Chopp" => categoriesDb.FirstOrDefault(x => x.Name == "Torre de Chopp")?.Id,
                "Alameda de Serviços" => categoriesDb.FirstOrDefault(x => x.Name == "Alameda de Serviços")?.Id,
                "Assinatura Digital" => categoriesDb.FirstOrDefault(x => x.Name == "Assinatura Digital")?.Id,
                "Cartão Presente" => categoriesDb.FirstOrDefault(x => x.Name == "Cartão Presente")?.Id,
                "Cursos Online" => categoriesDb.FirstOrDefault(x => x.Name == "Cursos Online")?.Id,
                "Curso Educação" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Educação")?.Id,
                "Curso Fotografia" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Fotografia")?.Id,
                "Curso Gestão e Negócios" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Gestão e Negócios")?.Id,
                "Curso Língua Portuguesa" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Língua Portuguesa")?.Id,
                "Curso Online Arte e Cultura" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Arte e Cultura")?.Id,
                "Curso Online Artesanato" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Artesanato")?.Id,
                "Curso Online Atendimento" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Atendimento")?.Id,
                "Curso Online Comportamento" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Comportamento")?.Id,
                "Curso Online Culinária" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Culinária")?.Id,
                "Curso Online Empregabilidade" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Empregabilidade")?.Id,
                "Curso Online Esporte" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Esporte")?.Id,
                "Curso Online Informática" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Informática")?.Id,
                "Curso Online Liderança" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Liderança")?.Id,
                "Curso Online Línguas" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Línguas")?.Id,
                "Curso Online Motivação" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Online Motivação")?.Id,
                "Curso Saúde e Beleza" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Saúde e Beleza")?.Id,
                "Curso Vendas" => categoriesDb.FirstOrDefault(x => x.Name == "Curso Vendas")?.Id,
                "Descarte Ecológico" => categoriesDb.FirstOrDefault(x => x.Name == "Descarte Ecológico")?.Id,
                "Revelação de Fotos Digitais" => categoriesDb.FirstOrDefault(x => x.Name == "Revelação de Fotos Digitais")?.Id,
                "Suporte Técnico e Instalação" => categoriesDb.FirstOrDefault(x => x.Name == "Suporte Técnico e Instalação")?.Id,
                "Montagem de Móveis" => categoriesDb.FirstOrDefault(x => x.Name == "Montagem de Móveis")?.Id,
                "Serviços de Telefones e Celulares" => categoriesDb.FirstOrDefault(x => x.Name == "Serviços de Telefones e Celulares")?.Id,
                "Serviços de TV e Vídeo" => categoriesDb.FirstOrDefault(x => x.Name == "Serviços de TV e Vídeo")?.Id,
                "Serviços" => categoriesDb.FirstOrDefault(x => x.Name == "Serviços")?.Id,
                "Alimentos" => categoriesDb.FirstOrDefault(x => x.Name == "Alimentos")?.Id,
                "Condimentos e Conservas" => categoriesDb.FirstOrDefault(x => x.Name == "Condimentos e Conservas")?.Id,
                "Matinais" => categoriesDb.FirstOrDefault(x => x.Name == "Matinais")?.Id,
                "Achocolatados em Pó" => categoriesDb.FirstOrDefault(x => x.Name == "Achocolatados em Pó")?.Id,
                "Ar e Ventilação" => categoriesDb.FirstOrDefault(x => x.Name == "Ar e Ventilação")?.Id,
                "Acessórios para Ar e Ventilação" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Ar e Ventilação")?.Id,
                "Aquecedores" => categoriesDb.FirstOrDefault(x => x.Name == "Aquecedores")?.Id,
                "A Óleo" => categoriesDb.FirstOrDefault(x => x.Name == "A Óleo")?.Id,
                "Cerâmica" => categoriesDb.FirstOrDefault(x => x.Name == "Cerâmica")?.Id,
                "Elétrico" => categoriesDb.FirstOrDefault(x => x.Name == "Elétrico")?.Id,
                "Ar-Condicionado" => categoriesDb.FirstOrDefault(x => x.Name == "Ar-Condicionado")?.Id,
                "Cassete" => categoriesDb.FirstOrDefault(x => x.Name == "Cassete")?.Id,
                "Inverter" => categoriesDb.FirstOrDefault(x => x.Name == "Inverter")?.Id,
                "Janela" => categoriesDb.FirstOrDefault(x => x.Name == "Janela")?.Id,
                "Multi-Split" => categoriesDb.FirstOrDefault(x => x.Name == "Multi-Split")?.Id,
                "Piso-Teto" => categoriesDb.FirstOrDefault(x => x.Name == "Piso-Teto")?.Id,
                "Portátil" => categoriesDb.FirstOrDefault(x => x.Name == "Portátil")?.Id,
                "Split" => categoriesDb.FirstOrDefault(x => x.Name == "Split")?.Id,
                "Climatizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Climatizadores")?.Id,
                "Cortina de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Cortina de Ar")?.Id,
                "Ventiladores e Circuladores" => categoriesDb.FirstOrDefault(x => x.Name == "Ventiladores e Circuladores")?.Id,
                "Circulador de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Circulador de Ar")?.Id,
                "Ventilador de Coluna" => categoriesDb.FirstOrDefault(x => x.Name == "Ventilador de Coluna")?.Id,
                "Ventilador de Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Ventilador de Mesa")?.Id,
                "Ventilador de Parede" => categoriesDb.FirstOrDefault(x => x.Name == "Ventilador de Parede")?.Id,
                "Ventilador de Teto" => categoriesDb.FirstOrDefault(x => x.Name == "Ventilador de Teto")?.Id,
                "Artigos para Festas" => categoriesDb.FirstOrDefault(x => x.Name == "Artigos para Festas")?.Id,
                "Áudio" => categoriesDb.FirstOrDefault(x => x.Name == "Áudio")?.Id,
                "Caixa de Som Portátil" => categoriesDb.FirstOrDefault(x => x.Name == "Caixa de Som Portátil")?.Id,
                "Caixas Acústicas" => categoriesDb.FirstOrDefault(x => x.Name == "Caixas Acústicas")?.Id,
                "Dock Station" => categoriesDb.FirstOrDefault(x => x.Name == "Dock Station")?.Id,
                "Gravadores Digitais" => categoriesDb.FirstOrDefault(x => x.Name == "Gravadores Digitais")?.Id,
                "Micro e Mini System" => categoriesDb.FirstOrDefault(x => x.Name == "Micro e Mini System")?.Id,
                "MP3 e MP4 Players" => categoriesDb.FirstOrDefault(x => x.Name == "MP3 e MP4 Players")?.Id,
                "Rádio Portátil" => categoriesDb.FirstOrDefault(x => x.Name == "Rádio Portátil")?.Id,
                "Rádio Relógio" => categoriesDb.FirstOrDefault(x => x.Name == "Rádio Relógio")?.Id,
                "Toca-Discos e Vitrola" => categoriesDb.FirstOrDefault(x => x.Name == "Toca-Discos e Vitrola")?.Id,
                "Automotivo" => categoriesDb.FirstOrDefault(x => x.Name == "Automotivo")?.Id,
                "Acessórios Automotivos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Automotivos")?.Id,
                "Acessórios Externos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Externos")?.Id,
                "Acessórios Internos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Internos")?.Id,
                "Antenas" => categoriesDb.FirstOrDefault(x => x.Name == "Antenas")?.Id,
                "Capas para Carro e Estepe" => categoriesDb.FirstOrDefault(x => x.Name == "Capas para Carro e Estepe")?.Id,
                "Suporte de Bicicleta para Carro" => categoriesDb.FirstOrDefault(x => x.Name == "Suporte de Bicicleta para Carro")?.Id,
                "Volantes" => categoriesDb.FirstOrDefault(x => x.Name == "Volantes")?.Id,
                "Alarmes e Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Alarmes e Segurança")?.Id,
                "Acessórios de Segurança Automotiva" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Segurança Automotiva")?.Id,
                "Kits de Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Kits de Segurança")?.Id,
                "Travas" => categoriesDb.FirstOrDefault(x => x.Name == "Travas")?.Id,
                "Autopeças" => categoriesDb.FirstOrDefault(x => x.Name == "Autopeças")?.Id,
                "Ferramentas Automotivas" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas Automotivas")?.Id,
                "Peças em Geral" => categoriesDb.FirstOrDefault(x => x.Name == "Peças em Geral")?.Id,
                "Bancos e Peças" => categoriesDb.FirstOrDefault(x => x.Name == "Bancos e Peças")?.Id,
                "Capa para Bancos" => categoriesDb.FirstOrDefault(x => x.Name == "Capa para Bancos")?.Id,
                "Auxiliar de Partida" => categoriesDb.FirstOrDefault(x => x.Name == "Auxiliar de Partida")?.Id,
                "Fusível" => categoriesDb.FirstOrDefault(x => x.Name == "Fusível")?.Id,
                "GPS e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "GPS e Acessórios")?.Id,
                "Acessórios GPS" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios GPS")?.Id,
                "GPS" => categoriesDb.FirstOrDefault(x => x.Name == "GPS")?.Id,
                "Iluminação" => categoriesDb.FirstOrDefault(x => x.Name == "Iluminação")?.Id,
                "Kit de Iluminação" => categoriesDb.FirstOrDefault(x => x.Name == "Kit de Iluminação")?.Id,
                "Lâmpadas para Carros" => categoriesDb.FirstOrDefault(x => x.Name == "Lâmpadas para Carros")?.Id,
                "Limpeza e Restauração" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza e Restauração")?.Id,
                "Acessórios e Kits para Limpeza" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios e Kits para Limpeza")?.Id,
                "Ceras, Silicone e Multiusos" => categoriesDb.FirstOrDefault(x => x.Name == "Ceras, Silicone e Multiusos")?.Id,
                "Purificadores e Odorizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Purificadores e Odorizadores")?.Id,
                "Motos" => categoriesDb.FirstOrDefault(x => x.Name == "Motos")?.Id,
                "Acessórios para Motos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Motos")?.Id,
                "Capacetes" => categoriesDb.FirstOrDefault(x => x.Name == "Capacetes")?.Id,
                "Motor e Componentes" => categoriesDb.FirstOrDefault(x => x.Name == "Motor e Componentes")?.Id,
                "Proteção para Motociclistas" => categoriesDb.FirstOrDefault(x => x.Name == "Proteção para Motociclistas")?.Id,
                "Óleos e Lubrificantes" => categoriesDb.FirstOrDefault(x => x.Name == "Óleos e Lubrificantes")?.Id,
                "Lubrificantes" => categoriesDb.FirstOrDefault(x => x.Name == "Lubrificantes")?.Id,
                "Óleos" => categoriesDb.FirstOrDefault(x => x.Name == "Óleos")?.Id,
                "Painel e Acabamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Painel e Acabamentos")?.Id,
                "Interno" => categoriesDb.FirstOrDefault(x => x.Name == "Interno")?.Id,
                "Pneus" => categoriesDb.FirstOrDefault(x => x.Name == "Pneus")?.Id,
                "Acessórios para Pneus" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Pneus")?.Id,
                "Pneus para Carro" => categoriesDb.FirstOrDefault(x => x.Name == "Pneus para Carro")?.Id,
                "Pneus para Moto" => categoriesDb.FirstOrDefault(x => x.Name == "Pneus para Moto")?.Id,
                "Retrovisores" => categoriesDb.FirstOrDefault(x => x.Name == "Retrovisores")?.Id,
                "Kits de Retrovisores" => categoriesDb.FirstOrDefault(x => x.Name == "Kits de Retrovisores")?.Id,
                "Rodas e Calotas" => categoriesDb.FirstOrDefault(x => x.Name == "Rodas e Calotas")?.Id,
                "Calotas" => categoriesDb.FirstOrDefault(x => x.Name == "Calotas")?.Id,
                "Som Automotivo" => categoriesDb.FirstOrDefault(x => x.Name == "Som Automotivo")?.Id,
                "Acessórios para Som" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Som")?.Id,
                "Alto-falantes" => categoriesDb.FirstOrDefault(x => x.Name == "Alto-falantes")?.Id,
                "Amplificadores" => categoriesDb.FirstOrDefault(x => x.Name == "Amplificadores")?.Id,
                "Antenas e Sintonizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Antenas e Sintonizadores")?.Id,
                "CD Players" => categoriesDb.FirstOrDefault(x => x.Name == "CD Players")?.Id,
                "Central Multimídia" => categoriesDb.FirstOrDefault(x => x.Name == "Central Multimídia")?.Id,
                "DVD Automotivo" => categoriesDb.FirstOrDefault(x => x.Name == "DVD Automotivo")?.Id,
                "MP3 Automotivo" => categoriesDb.FirstOrDefault(x => x.Name == "MP3 Automotivo")?.Id,
                "Subwoofer" => categoriesDb.FirstOrDefault(x => x.Name == "Subwoofer")?.Id,
                "Tapetes Automotivos" => categoriesDb.FirstOrDefault(x => x.Name == "Tapetes Automotivos")?.Id,
                "Vidros" => categoriesDb.FirstOrDefault(x => x.Name == "Vidros")?.Id,
                "Limpador de Para-brisa" => categoriesDb.FirstOrDefault(x => x.Name == "Limpador de Para-brisa")?.Id,
                "Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Bebês")?.Id,
                "Acessórios para Mamãe" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Mamãe")?.Id,
                "Alimentação" => categoriesDb.FirstOrDefault(x => x.Name == "Alimentação")?.Id,
                "Babadores" => categoriesDb.FirstOrDefault(x => x.Name == "Babadores")?.Id,
                "Bicos" => categoriesDb.FirstOrDefault(x => x.Name == "Bicos")?.Id,
                "Cadeirões" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeirões")?.Id,
                "Copos" => categoriesDb.FirstOrDefault(x => x.Name == "Copos")?.Id,
                "Escova para Mamadeira" => categoriesDb.FirstOrDefault(x => x.Name == "Escova para Mamadeira")?.Id,
                "Esterilizadores e Térmicos" => categoriesDb.FirstOrDefault(x => x.Name == "Esterilizadores e Térmicos")?.Id,
                "Leite em Pó e Fórmulas" => categoriesDb.FirstOrDefault(x => x.Name == "Leite em Pó e Fórmulas")?.Id,
                "Mamadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Mamadeiras")?.Id,
                "Potes, Pratos e Talheres" => categoriesDb.FirstOrDefault(x => x.Name == "Potes, Pratos e Talheres")?.Id,
                "Toalhas de Boca" => categoriesDb.FirstOrDefault(x => x.Name == "Toalhas de Boca")?.Id,
                "Babás Eletrônicas" => categoriesDb.FirstOrDefault(x => x.Name == "Babás Eletrônicas")?.Id,
                "Banho do Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Banho do Bebê")?.Id,
                "Acessórios para Banho do Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Banho do Bebê")?.Id,
                "Banheiras" => categoriesDb.FirstOrDefault(x => x.Name == "Banheiras")?.Id,
                "Brinquedos para Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Brinquedos para Banho")?.Id,
                "Esponja para Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Esponja para Banho")?.Id,
                "Hidratantes e Óleos" => categoriesDb.FirstOrDefault(x => x.Name == "Hidratantes e Óleos")?.Id,
                "Roupões e Saídas" => categoriesDb.FirstOrDefault(x => x.Name == "Roupões e Saídas")?.Id,
                "Shampoo, Condicionador e Sabonete" => categoriesDb.FirstOrDefault(x => x.Name == "Shampoo, Condicionador e Sabonete")?.Id,
                "Toalhas de Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Toalhas de Banho")?.Id,
                "Bem-Estar" => categoriesDb.FirstOrDefault(x => x.Name == "Bem-Estar")?.Id,
                "Bouncers e Jumpers" => categoriesDb.FirstOrDefault(x => x.Name == "Bouncers e Jumpers")?.Id,
                "Chupetas e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Chupetas e Acessórios")?.Id,
                "Mordedores" => categoriesDb.FirstOrDefault(x => x.Name == "Mordedores")?.Id,
                "Berços e Cercados Portáteis" => categoriesDb.FirstOrDefault(x => x.Name == "Berços e Cercados Portáteis")?.Id,
                "Brinquedos para Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Brinquedos para Bebê")?.Id,
                "Chocalhos" => categoriesDb.FirstOrDefault(x => x.Name == "Chocalhos")?.Id,
                "Diversão" => categoriesDb.FirstOrDefault(x => x.Name == "Diversão")?.Id,
                "Educativos" => categoriesDb.FirstOrDefault(x => x.Name == "Educativos")?.Id,
                "Encaixar e Empilhar" => categoriesDb.FirstOrDefault(x => x.Name == "Encaixar e Empilhar")?.Id,
                "Móbiles" => categoriesDb.FirstOrDefault(x => x.Name == "Móbiles")?.Id,
                "Sonoros" => categoriesDb.FirstOrDefault(x => x.Name == "Sonoros")?.Id,
                "Tapetes e Ginásios de Atividades" => categoriesDb.FirstOrDefault(x => x.Name == "Tapetes e Ginásios de Atividades")?.Id,
                "Calçados para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Calçados para Bebês")?.Id,
                "Chinelos e Pantufas" => categoriesDb.FirstOrDefault(x => x.Name == "Chinelos e Pantufas")?.Id,
                "Sandalinha" => categoriesDb.FirstOrDefault(x => x.Name == "Sandalinha")?.Id,
                "Sapatinho" => categoriesDb.FirstOrDefault(x => x.Name == "Sapatinho")?.Id,
                "Tênis" => categoriesDb.FirstOrDefault(x => x.Name == "Tênis")?.Id,
                "Desenvolvimento e Diversão" => categoriesDb.FirstOrDefault(x => x.Name == "Desenvolvimento e Diversão")?.Id,
                "Andadores Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Andadores Infantis")?.Id,
                "Baby Cars" => categoriesDb.FirstOrDefault(x => x.Name == "Baby Cars")?.Id,
                "Passo a Passo" => categoriesDb.FirstOrDefault(x => x.Name == "Passo a Passo")?.Id,
                "Triciclo" => categoriesDb.FirstOrDefault(x => x.Name == "Triciclo")?.Id,
                "Enxoval para o Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Enxoval para o Bebê")?.Id,
                "Abajur e Luminárias" => categoriesDb.FirstOrDefault(x => x.Name == "Abajur e Luminárias")?.Id,
                "Almofada Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Almofada Infantil")?.Id,
                "Almofadas para Amamentação" => categoriesDb.FirstOrDefault(x => x.Name == "Almofadas para Amamentação")?.Id,
                "Bolsas e Malas para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Bolsas e Malas para Bebês")?.Id,
                "Enfeite de porta" => categoriesDb.FirstOrDefault(x => x.Name == "Enfeite de porta")?.Id,
                "Kit para berço" => categoriesDb.FirstOrDefault(x => x.Name == "Kit para berço")?.Id,
                "Lençol para Berço" => categoriesDb.FirstOrDefault(x => x.Name == "Lençol para Berço")?.Id,
                "Mantas e Cobertores para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Mantas e Cobertores para Bebês")?.Id,
                "Naninha" => categoriesDb.FirstOrDefault(x => x.Name == "Naninha")?.Id,
                "Quarto do bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Quarto do bebê")?.Id,
                "Saia para berço" => categoriesDb.FirstOrDefault(x => x.Name == "Saia para berço")?.Id,
                "Higiene e Saúde do Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Higiene e Saúde do Bebê")?.Id,
                "Aspirador Nasal e Dosador de Medicamento" => categoriesDb.FirstOrDefault(x => x.Name == "Aspirador Nasal e Dosador de Medicamento")?.Id,
                "Cuidados e Saúde" => categoriesDb.FirstOrDefault(x => x.Name == "Cuidados e Saúde")?.Id,
                "Escova para Cabelo e Pente" => categoriesDb.FirstOrDefault(x => x.Name == "Escova para Cabelo e Pente")?.Id,
                "Higiene Bucal" => categoriesDb.FirstOrDefault(x => x.Name == "Higiene Bucal")?.Id,
                "Kit Higiene, Tesoura e Cortador de Unhas" => categoriesDb.FirstOrDefault(x => x.Name == "Kit Higiene, Tesoura e Cortador de Unhas")?.Id,
                "Troninhos e Redutores" => categoriesDb.FirstOrDefault(x => x.Name == "Troninhos e Redutores")?.Id,
                "Passeio" => categoriesDb.FirstOrDefault(x => x.Name == "Passeio")?.Id,
                "Acessórios para Cadeira de Auto" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Cadeira de Auto")?.Id,
                "Acessórios para Carrinhos de Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Carrinhos de Bebê")?.Id,
                "Andadores" => categoriesDb.FirstOrDefault(x => x.Name == "Andadores")?.Id,
                "Bebês Conforto" => categoriesDb.FirstOrDefault(x => x.Name == "Bebês Conforto")?.Id,
                "Cadeiras para Automóveis" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeiras para Automóveis")?.Id,
                "Canguru e Moisés" => categoriesDb.FirstOrDefault(x => x.Name == "Canguru e Moisés")?.Id,
                "Carrinhos de 3 Rodas" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos de 3 Rodas")?.Id,
                "Carrinhos Multifunção" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos Multifunção")?.Id,
                "Carrinhos para Gêmeos" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos para Gêmeos")?.Id,
                "Carrinhos para Passeio" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos para Passeio")?.Id,
                "Carrinhos Travel System" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos Travel System")?.Id,
                "Sling" => categoriesDb.FirstOrDefault(x => x.Name == "Sling")?.Id,
                "Roupinhas para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Roupinhas para Bebês")?.Id,
                "Acessórios de Moda para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Moda para Bebês")?.Id,
                "Body e Macacão" => categoriesDb.FirstOrDefault(x => x.Name == "Body e Macacão")?.Id,
                "Camisa" => categoriesDb.FirstOrDefault(x => x.Name == "Camisa")?.Id,
                "Camisetas e Blusinhas" => categoriesDb.FirstOrDefault(x => x.Name == "Camisetas e Blusinhas")?.Id,
                "Capas de Chuva" => categoriesDb.FirstOrDefault(x => x.Name == "Capas de Chuva")?.Id,
                "Casacos e Coletes" => categoriesDb.FirstOrDefault(x => x.Name == "Casacos e Coletes")?.Id,
                "Conjuntos" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos")?.Id,
                "Moda Praia para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Moda Praia para Bebês")?.Id,
                "Ocasião" => categoriesDb.FirstOrDefault(x => x.Name == "Ocasião")?.Id,
                "Pijamas" => categoriesDb.FirstOrDefault(x => x.Name == "Pijamas")?.Id,
                "Saias e Vestidos" => categoriesDb.FirstOrDefault(x => x.Name == "Saias e Vestidos")?.Id,
                "Tapa Fralda" => categoriesDb.FirstOrDefault(x => x.Name == "Tapa Fralda")?.Id,
                "Segurança do Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Segurança do Bebê")?.Id,
                "Acessórios de Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Segurança")?.Id,
                "Grades de Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Grades de Segurança")?.Id,
                "Segurança Veicular" => categoriesDb.FirstOrDefault(x => x.Name == "Segurança Veicular")?.Id,
                "Travas e Protetores Domésticos" => categoriesDb.FirstOrDefault(x => x.Name == "Travas e Protetores Domésticos")?.Id,
                "Troca do Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Troca do Bebê")?.Id,
                "Fraldas Descartáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Fraldas Descartáveis")?.Id,
                "Lenços Umedecidos" => categoriesDb.FirstOrDefault(x => x.Name == "Lenços Umedecidos")?.Id,
                "Pomada para Assaduras" => categoriesDb.FirstOrDefault(x => x.Name == "Pomada para Assaduras")?.Id,
                "Talco para Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Talco para Bebê")?.Id,
                "Trocadores" => categoriesDb.FirstOrDefault(x => x.Name == "Trocadores")?.Id,
                "Bebidas" => categoriesDb.FirstOrDefault(x => x.Name == "Bebidas")?.Id,
                "Água Tônica" => categoriesDb.FirstOrDefault(x => x.Name == "Água Tônica")?.Id,
                "Refrigerantes" => categoriesDb.FirstOrDefault(x => x.Name == "Refrigerantes")?.Id,
                "Cervejas" => categoriesDb.FirstOrDefault(x => x.Name == "Cervejas")?.Id,
                "Artesanal" => categoriesDb.FirstOrDefault(x => x.Name == "Artesanal")?.Id,
                "Pilsen" => categoriesDb.FirstOrDefault(x => x.Name == "Pilsen")?.Id,
                "Premium" => categoriesDb.FirstOrDefault(x => x.Name == "Premium")?.Id,
                "Puro Malte" => categoriesDb.FirstOrDefault(x => x.Name == "Puro Malte")?.Id,
                "Sem Álcool" => categoriesDb.FirstOrDefault(x => x.Name == "Sem Álcool")?.Id,
                "Trigo" => categoriesDb.FirstOrDefault(x => x.Name == "Trigo")?.Id,
                "Destilados, licores e coquetéis" => categoriesDb.FirstOrDefault(x => x.Name == "Destilados, licores e coquetéis")?.Id,
                "Drinks Prontos" => categoriesDb.FirstOrDefault(x => x.Name == "Drinks Prontos")?.Id,
                "Vinhos, Espumante e Frisante" => categoriesDb.FirstOrDefault(x => x.Name == "Vinhos, Espumante e Frisante")?.Id,
                "Espumante" => categoriesDb.FirstOrDefault(x => x.Name == "Espumante")?.Id,
                "Rosé" => categoriesDb.FirstOrDefault(x => x.Name == "Rosé")?.Id,
                "Tinto" => categoriesDb.FirstOrDefault(x => x.Name == "Tinto")?.Id,
                "Beleza e Saúde" => categoriesDb.FirstOrDefault(x => x.Name == "Beleza e Saúde")?.Id,
                "Aparelhos para Barba e Depilação" => categoriesDb.FirstOrDefault(x => x.Name == "Aparelhos para Barba e Depilação")?.Id,
                "Acessórios para Barbeadores" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Barbeadores")?.Id,
                "Aparadores de Pelos" => categoriesDb.FirstOrDefault(x => x.Name == "Aparadores de Pelos")?.Id,
                "Barbeadores Elétricos e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Barbeadores Elétricos e Acessórios")?.Id,
                "Depilador" => categoriesDb.FirstOrDefault(x => x.Name == "Depilador")?.Id,
                "Máquinas de Cortar Cabelo" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Cortar Cabelo")?.Id,
                "Cuidados Pessoais" => categoriesDb.FirstOrDefault(x => x.Name == "Cuidados Pessoais")?.Id,
                "Curativo" => categoriesDb.FirstOrDefault(x => x.Name == "Curativo")?.Id,
                "Máscara de Proteção Artesanal" => categoriesDb.FirstOrDefault(x => x.Name == "Máscara de Proteção Artesanal")?.Id,
                "Hospitais, Clínicas e Laboratórios" => categoriesDb.FirstOrDefault(x => x.Name == "Hospitais, Clínicas e Laboratórios")?.Id,
                "Descartáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Descartáveis")?.Id,
                "Estetoscópios" => categoriesDb.FirstOrDefault(x => x.Name == "Estetoscópios")?.Id,
                "Medicina e Cirurgia" => categoriesDb.FirstOrDefault(x => x.Name == "Medicina e Cirurgia")?.Id,
                "Massagem e Relaxamento" => categoriesDb.FirstOrDefault(x => x.Name == "Massagem e Relaxamento")?.Id,
                "Almofadas Massageadoras" => categoriesDb.FirstOrDefault(x => x.Name == "Almofadas Massageadoras")?.Id,
                "Equipamentos Para Massagem" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos Para Massagem")?.Id,
                "Massageador Facial" => categoriesDb.FirstOrDefault(x => x.Name == "Massageador Facial")?.Id,
                "Reabilitação e Aparelhos Médicos" => categoriesDb.FirstOrDefault(x => x.Name == "Reabilitação e Aparelhos Médicos")?.Id,
                "Estética" => categoriesDb.FirstOrDefault(x => x.Name == "Estética")?.Id,
                "Fisioterapia" => categoriesDb.FirstOrDefault(x => x.Name == "Fisioterapia")?.Id,
                "Produtos Ortopédicos" => categoriesDb.FirstOrDefault(x => x.Name == "Produtos Ortopédicos")?.Id,
                "Saúde" => categoriesDb.FirstOrDefault(x => x.Name == "Saúde")?.Id,
                "Acessórios para Medidores" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Medidores")?.Id,
                "Acessórios para Saúde" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Saúde")?.Id,
                "Álcool em Gel" => categoriesDb.FirstOrDefault(x => x.Name == "Álcool em Gel")?.Id,
                "Balanças" => categoriesDb.FirstOrDefault(x => x.Name == "Balanças")?.Id,
                "Estojo para Balança" => categoriesDb.FirstOrDefault(x => x.Name == "Estojo para Balança")?.Id,
                "Medidor de Glicose" => categoriesDb.FirstOrDefault(x => x.Name == "Medidor de Glicose")?.Id,
                "Medidores de Pressão" => categoriesDb.FirstOrDefault(x => x.Name == "Medidores de Pressão")?.Id,
                "Oxímetro" => categoriesDb.FirstOrDefault(x => x.Name == "Oxímetro")?.Id,
                "Porta Comprimidos" => categoriesDb.FirstOrDefault(x => x.Name == "Porta Comprimidos")?.Id,
                "Termômetros" => categoriesDb.FirstOrDefault(x => x.Name == "Termômetros")?.Id,
                "Secadores e Modeladores Elétricos" => categoriesDb.FirstOrDefault(x => x.Name == "Secadores e Modeladores Elétricos")?.Id,
                "Acessórios para Secadores" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Secadores")?.Id,
                "Cacheador/Modelador de Cachos" => categoriesDb.FirstOrDefault(x => x.Name == "Cacheador/Modelador de Cachos")?.Id,
                "Chapinhas e Pranchas de Cabelo" => categoriesDb.FirstOrDefault(x => x.Name == "Chapinhas e Pranchas de Cabelo")?.Id,
                "Escova Modeladora/Alisadora para Cabelos" => categoriesDb.FirstOrDefault(x => x.Name == "Escova Modeladora/Alisadora para Cabelos")?.Id,
                "Escova Rotativa/Secadora para Cabelos" => categoriesDb.FirstOrDefault(x => x.Name == "Escova Rotativa/Secadora para Cabelos")?.Id,
                "Secadores de Cabelo" => categoriesDb.FirstOrDefault(x => x.Name == "Secadores de Cabelo")?.Id,
                "Tratamento de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Tratamento de Ar")?.Id,
                "Desumidificador de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Desumidificador de Ar")?.Id,
                "Esterilizador de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Esterilizador de Ar")?.Id,
                "Nebulizadores e Inaladores" => categoriesDb.FirstOrDefault(x => x.Name == "Nebulizadores e Inaladores")?.Id,
                "Purificador de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Purificador de Ar")?.Id,
                "Umidificador de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Umidificador de Ar")?.Id,
                "Brinquedos" => categoriesDb.FirstOrDefault(x => x.Name == "Brinquedos")?.Id,
                "Artes e Atividades" => categoriesDb.FirstOrDefault(x => x.Name == "Artes e Atividades")?.Id,
                "Desenhos e Pinturas" => categoriesDb.FirstOrDefault(x => x.Name == "Desenhos e Pinturas")?.Id,
                "Lousas" => categoriesDb.FirstOrDefault(x => x.Name == "Lousas")?.Id,
                "Massas para Modelar" => categoriesDb.FirstOrDefault(x => x.Name == "Massas para Modelar")?.Id,
                "Autoramas e Pistas" => categoriesDb.FirstOrDefault(x => x.Name == "Autoramas e Pistas")?.Id,
                "Autoramas" => categoriesDb.FirstOrDefault(x => x.Name == "Autoramas")?.Id,
                "Ferroramas" => categoriesDb.FirstOrDefault(x => x.Name == "Ferroramas")?.Id,
                "Pista Hot Wheels" => categoriesDb.FirstOrDefault(x => x.Name == "Pista Hot Wheels")?.Id,
                "Pistas de Percursos Manuais" => categoriesDb.FirstOrDefault(x => x.Name == "Pistas de Percursos Manuais")?.Id,
                "Bebê Reborn" => categoriesDb.FirstOrDefault(x => x.Name == "Bebê Reborn")?.Id,
                "Bebê Menina" => categoriesDb.FirstOrDefault(x => x.Name == "Bebê Menina")?.Id,
                "Roupinhas e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Roupinhas e Acessórios")?.Id,
                "Bicicletas Infantojuvenis" => categoriesDb.FirstOrDefault(x => x.Name == "Bicicletas Infantojuvenis")?.Id,
                "Aro 12" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 12")?.Id,
                "Aro 14" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 14")?.Id,
                "Aro 16" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 16")?.Id,
                "Aro 20" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 20")?.Id,
                "Blocos de Montar" => categoriesDb.FirstOrDefault(x => x.Name == "Blocos de Montar")?.Id,
                "BANBAO" => categoriesDb.FirstOrDefault(x => x.Name == "BANBAO")?.Id,
                "KRE-O" => categoriesDb.FirstOrDefault(x => x.Name == "KRE-O")?.Id,
                "Lego" => categoriesDb.FirstOrDefault(x => x.Name == "Lego")?.Id,
                "Megabloks" => categoriesDb.FirstOrDefault(x => x.Name == "Megabloks")?.Id,
                "Outros Blocos de Montar" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Blocos de Montar")?.Id,
                "Playmobil" => categoriesDb.FirstOrDefault(x => x.Name == "Playmobil")?.Id,
                "Bonecas" => categoriesDb.FirstOrDefault(x => x.Name == "Bonecas")?.Id,
                "Acessórios para Bonecas" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Bonecas")?.Id,
                "Adora Doll" => categoriesDb.FirstOrDefault(x => x.Name == "Adora Doll")?.Id,
                "Baby Alive" => categoriesDb.FirstOrDefault(x => x.Name == "Baby Alive")?.Id,
                "Barbie" => categoriesDb.FirstOrDefault(x => x.Name == "Barbie")?.Id,
                "Boneca de Pano" => categoriesDb.FirstOrDefault(x => x.Name == "Boneca de Pano")?.Id,
                "Bratz" => categoriesDb.FirstOrDefault(x => x.Name == "Bratz")?.Id,
                "Cry Babies" => categoriesDb.FirstOrDefault(x => x.Name == "Cry Babies")?.Id,
                "Diversas" => categoriesDb.FirstOrDefault(x => x.Name == "Diversas")?.Id,
                "Divertida Mente" => categoriesDb.FirstOrDefault(x => x.Name == "Divertida Mente")?.Id,
                "Dora a Aventureira" => categoriesDb.FirstOrDefault(x => x.Name == "Dora a Aventureira")?.Id,
                "Enchantimals" => categoriesDb.FirstOrDefault(x => x.Name == "Enchantimals")?.Id,
                "Epoch Magia" => categoriesDb.FirstOrDefault(x => x.Name == "Epoch Magia")?.Id,
                "Ever After High" => categoriesDb.FirstOrDefault(x => x.Name == "Ever After High")?.Id,
                "Frozen" => categoriesDb.FirstOrDefault(x => x.Name == "Frozen")?.Id,
                "Hello Kitty" => categoriesDb.FirstOrDefault(x => x.Name == "Hello Kitty")?.Id,
                "Little Mommy" => categoriesDb.FirstOrDefault(x => x.Name == "Little Mommy")?.Id,
                "Littlest Pet Shop" => categoriesDb.FirstOrDefault(x => x.Name == "Littlest Pet Shop")?.Id,
                "Masha e o Urso" => categoriesDb.FirstOrDefault(x => x.Name == "Masha e o Urso")?.Id,
                "Mini Boneca" => categoriesDb.FirstOrDefault(x => x.Name == "Mini Boneca")?.Id,
                "Minnie Mouse" => categoriesDb.FirstOrDefault(x => x.Name == "Minnie Mouse")?.Id,
                "Miraculous" => categoriesDb.FirstOrDefault(x => x.Name == "Miraculous")?.Id,
                "Monster High" => categoriesDb.FirstOrDefault(x => x.Name == "Monster High")?.Id,
                "Moranguinho" => categoriesDb.FirstOrDefault(x => x.Name == "Moranguinho")?.Id,
                "My Little Pony" => categoriesDb.FirstOrDefault(x => x.Name == "My Little Pony")?.Id,
                "Peppa" => categoriesDb.FirstOrDefault(x => x.Name == "Peppa")?.Id,
                "Polly Pocket" => categoriesDb.FirstOrDefault(x => x.Name == "Polly Pocket")?.Id,
                "Princesas Disney" => categoriesDb.FirstOrDefault(x => x.Name == "Princesas Disney")?.Id,
                "Sofia" => categoriesDb.FirstOrDefault(x => x.Name == "Sofia")?.Id,
                "Super-heroínas" => categoriesDb.FirstOrDefault(x => x.Name == "Super-heroínas")?.Id,
                "Susi" => categoriesDb.FirstOrDefault(x => x.Name == "Susi")?.Id,
                "Trê-Lê-Lê" => categoriesDb.FirstOrDefault(x => x.Name == "Trê-Lê-Lê")?.Id,
                "Turma da Mônica" => categoriesDb.FirstOrDefault(x => x.Name == "Turma da Mônica")?.Id,
                "Bonecos" => categoriesDb.FirstOrDefault(x => x.Name == "Bonecos")?.Id,
                "Acessórios para Bonecos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Bonecos")?.Id,
                "Amigami" => categoriesDb.FirstOrDefault(x => x.Name == "Amigami")?.Id,
                "Angry Birds" => categoriesDb.FirstOrDefault(x => x.Name == "Angry Birds")?.Id,
                "Avengers" => categoriesDb.FirstOrDefault(x => x.Name == "Avengers")?.Id,
                "Bakugan" => categoriesDb.FirstOrDefault(x => x.Name == "Bakugan")?.Id,
                "Batman" => categoriesDb.FirstOrDefault(x => x.Name == "Batman")?.Id,
                "Ben 10" => categoriesDb.FirstOrDefault(x => x.Name == "Ben 10")?.Id,
                "Bonecos Colecionáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Bonecos Colecionáveis")?.Id,
                "Cocoricó" => categoriesDb.FirstOrDefault(x => x.Name == "Cocoricó")?.Id,
                "Fuleco" => categoriesDb.FirstOrDefault(x => x.Name == "Fuleco")?.Id,
                "Gormiti" => categoriesDb.FirstOrDefault(x => x.Name == "Gormiti")?.Id,
                "Guardiões da Galáxia" => categoriesDb.FirstOrDefault(x => x.Name == "Guardiões da Galáxia")?.Id,
                "Homem Aranha" => categoriesDb.FirstOrDefault(x => x.Name == "Homem Aranha")?.Id,
                "Imaginext" => categoriesDb.FirstOrDefault(x => x.Name == "Imaginext")?.Id,
                "Jurassic World" => categoriesDb.FirstOrDefault(x => x.Name == "Jurassic World")?.Id,
                "Lanterna Verde" => categoriesDb.FirstOrDefault(x => x.Name == "Lanterna Verde")?.Id,
                "Liga da Justiça" => categoriesDb.FirstOrDefault(x => x.Name == "Liga da Justiça")?.Id,
                "Max Steel" => categoriesDb.FirstOrDefault(x => x.Name == "Max Steel")?.Id,
                "Mickey Mouse" => categoriesDb.FirstOrDefault(x => x.Name == "Mickey Mouse")?.Id,
                "Mike o Cavaleiro" => categoriesDb.FirstOrDefault(x => x.Name == "Mike o Cavaleiro")?.Id,
                "Minions e Meu Malvado Favorito" => categoriesDb.FirstOrDefault(x => x.Name == "Minions e Meu Malvado Favorito")?.Id,
                "Monstros S.A." => categoriesDb.FirstOrDefault(x => x.Name == "Monstros S.A.")?.Id,
                "Os Incríveis" => categoriesDb.FirstOrDefault(x => x.Name == "Os Incríveis")?.Id,
                "Patrulha Canina" => categoriesDb.FirstOrDefault(x => x.Name == "Patrulha Canina")?.Id,
                "PJ Masks" => categoriesDb.FirstOrDefault(x => x.Name == "PJ Masks")?.Id,
                "Power Rangers" => categoriesDb.FirstOrDefault(x => x.Name == "Power Rangers")?.Id,
                "Smurfs" => categoriesDb.FirstOrDefault(x => x.Name == "Smurfs")?.Id,
                "Star Wars" => categoriesDb.FirstOrDefault(x => x.Name == "Star Wars")?.Id,
                "Super Homem" => categoriesDb.FirstOrDefault(x => x.Name == "Super Homem")?.Id,
                "Tartarugas Ninja" => categoriesDb.FirstOrDefault(x => x.Name == "Tartarugas Ninja")?.Id,
                "Toy Story" => categoriesDb.FirstOrDefault(x => x.Name == "Toy Story")?.Id,
                "Transformers" => categoriesDb.FirstOrDefault(x => x.Name == "Transformers")?.Id,
                "Trolls" => categoriesDb.FirstOrDefault(x => x.Name == "Trolls")?.Id,
                "X-Men" => categoriesDb.FirstOrDefault(x => x.Name == "X-Men")?.Id,
                "Brincadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Brincadeiras")?.Id,
                "Brincadeiras de Casinha" => categoriesDb.FirstOrDefault(x => x.Name == "Brincadeiras de Casinha")?.Id,
                "Brincando de Escolinha" => categoriesDb.FirstOrDefault(x => x.Name == "Brincando de Escolinha")?.Id,
                "Brincando de Profissão" => categoriesDb.FirstOrDefault(x => x.Name == "Brincando de Profissão")?.Id,
                "Cenários e Playsets" => categoriesDb.FirstOrDefault(x => x.Name == "Cenários e Playsets")?.Id,
                "Lançadores" => categoriesDb.FirstOrDefault(x => x.Name == "Lançadores")?.Id,
                "Spinner" => categoriesDb.FirstOrDefault(x => x.Name == "Spinner")?.Id,
                "Tocas e Barracas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Tocas e Barracas Infantis")?.Id,
                "Brinquedos Educativos" => categoriesDb.FirstOrDefault(x => x.Name == "Brinquedos Educativos")?.Id,
                "Brinquedos Eletrônicos" => categoriesDb.FirstOrDefault(x => x.Name == "Brinquedos Eletrônicos")?.Id,
                "Câmeras e Filmadoras" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras e Filmadoras")?.Id,
                "Celulares e Telefones Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Celulares e Telefones Infantis")?.Id,
                "Desktops Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Desktops Infantis")?.Id,
                "Karaokê" => categoriesDb.FirstOrDefault(x => x.Name == "Karaokê")?.Id,
                "Mini Games" => categoriesDb.FirstOrDefault(x => x.Name == "Mini Games")?.Id,
                "Mp3, Mp4 e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Mp3, Mp4 e Acessórios")?.Id,
                "Notebooks Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Notebooks Infantis")?.Id,
                "Rádios Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Rádios Infantis")?.Id,
                "Relógios Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Relógios Infantis")?.Id,
                "Robôs" => categoriesDb.FirstOrDefault(x => x.Name == "Robôs")?.Id,
                "Spynet" => categoriesDb.FirstOrDefault(x => x.Name == "Spynet")?.Id,
                "Walkie Talkies" => categoriesDb.FirstOrDefault(x => x.Name == "Walkie Talkies")?.Id,
                "Carrinhos e Miniaturas" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinhos e Miniaturas")?.Id,
                "Aviões e Helicópteros" => categoriesDb.FirstOrDefault(x => x.Name == "Aviões e Helicópteros")?.Id,
                "Barcos e Lanchas" => categoriesDb.FirstOrDefault(x => x.Name == "Barcos e Lanchas")?.Id,
                "Caminhões e Ônibus" => categoriesDb.FirstOrDefault(x => x.Name == "Caminhões e Ônibus")?.Id,
                "Carros" => categoriesDb.FirstOrDefault(x => x.Name == "Carros")?.Id,
                "Hot Wheels" => categoriesDb.FirstOrDefault(x => x.Name == "Hot Wheels")?.Id,
                "Motos de Brinquedo" => categoriesDb.FirstOrDefault(x => x.Name == "Motos de Brinquedo")?.Id,
                "Naves Espaciais" => categoriesDb.FirstOrDefault(x => x.Name == "Naves Espaciais")?.Id,
                "Trens" => categoriesDb.FirstOrDefault(x => x.Name == "Trens")?.Id,
                "Colecionáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Colecionáveis")?.Id,
                "Action Figures" => categoriesDb.FirstOrDefault(x => x.Name == "Action Figures")?.Id,
                "Chaveiros" => categoriesDb.FirstOrDefault(x => x.Name == "Chaveiros")?.Id,
                "Hatchimals" => categoriesDb.FirstOrDefault(x => x.Name == "Hatchimals")?.Id,
                "Kekilou" => categoriesDb.FirstOrDefault(x => x.Name == "Kekilou")?.Id,
                "LOL" => categoriesDb.FirstOrDefault(x => x.Name == "LOL")?.Id,
                "Shopkins" => categoriesDb.FirstOrDefault(x => x.Name == "Shopkins")?.Id,
                "Sylvanian Families" => categoriesDb.FirstOrDefault(x => x.Name == "Sylvanian Families")?.Id,
                "Controle Remoto" => categoriesDb.FirstOrDefault(x => x.Name == "Controle Remoto")?.Id,
                "Caminhões, Ônibus e Trens" => categoriesDb.FirstOrDefault(x => x.Name == "Caminhões, Ônibus e Trens")?.Id,
                "Motos de Controle Remoto" => categoriesDb.FirstOrDefault(x => x.Name == "Motos de Controle Remoto")?.Id,
                "Outros veículos" => categoriesDb.FirstOrDefault(x => x.Name == "Outros veículos")?.Id,
                "Esporte Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Esporte Infantil")?.Id,
                "Acessórios para Proteção" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Proteção")?.Id,
                "Basquete Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Basquete Infantil")?.Id,
                "Bolas" => categoriesDb.FirstOrDefault(x => x.Name == "Bolas")?.Id,
                "Fliperamas" => categoriesDb.FirstOrDefault(x => x.Name == "Fliperamas")?.Id,
                "Futebol Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Futebol Infantil")?.Id,
                "Outros Esportes" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Esportes")?.Id,
                "Patinete" => categoriesDb.FirstOrDefault(x => x.Name == "Patinete")?.Id,
                "Patinetes Elétricos" => categoriesDb.FirstOrDefault(x => x.Name == "Patinetes Elétricos")?.Id,
                "Patins Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Patins Infantis")?.Id,
                "Pebolins" => categoriesDb.FirstOrDefault(x => x.Name == "Pebolins")?.Id,
                "Sinuca" => categoriesDb.FirstOrDefault(x => x.Name == "Sinuca")?.Id,
                "Skatenetes" => categoriesDb.FirstOrDefault(x => x.Name == "Skatenetes")?.Id,
                "Skates" => categoriesDb.FirstOrDefault(x => x.Name == "Skates")?.Id,
                "Fantasia" => categoriesDb.FirstOrDefault(x => x.Name == "Fantasia")?.Id,
                "Guarda Brinquedos" => categoriesDb.FirstOrDefault(x => x.Name == "Guarda Brinquedos")?.Id,
                "Instrumentos Musicais Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Instrumentos Musicais Infantis")?.Id,
                "Acessórios Instrumentos Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Instrumentos Infantis")?.Id,
                "Baterias Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Baterias Infantis")?.Id,
                "Guitarras Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Guitarras Infantis")?.Id,
                "Outros Instrumentos Musicais" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Instrumentos Musicais")?.Id,
                "Pandeiros Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Pandeiros Infantis")?.Id,
                "Pianos Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Pianos Infantis")?.Id,
                "Teclados Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Teclados Infantis")?.Id,
                "Trompetes Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Trompetes Infantis")?.Id,
                "Violões Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Violões Infantis")?.Id,
                "Jogos" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos")?.Id,
                "Cartas e Dominós" => categoriesDb.FirstOrDefault(x => x.Name == "Cartas e Dominós")?.Id,
                "Estratégia" => categoriesDb.FirstOrDefault(x => x.Name == "Estratégia")?.Id,
                "Memória" => categoriesDb.FirstOrDefault(x => x.Name == "Memória")?.Id,
                "Tabuleiro" => categoriesDb.FirstOrDefault(x => x.Name == "Tabuleiro")?.Id,
                "Mesas e Móveis para Atividades" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas e Móveis para Atividades")?.Id,
                "Miniveículos" => categoriesDb.FirstOrDefault(x => x.Name == "Miniveículos")?.Id,
                "Jipes" => categoriesDb.FirstOrDefault(x => x.Name == "Jipes")?.Id,
                "Moto Elétrica Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Moto Elétrica Infantil")?.Id,
                "Quadriciclos" => categoriesDb.FirstOrDefault(x => x.Name == "Quadriciclos")?.Id,
                "Triciclos" => categoriesDb.FirstOrDefault(x => x.Name == "Triciclos")?.Id,
                "Moda e Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Moda e Maquiagem")?.Id,
                "Para Desenhar" => categoriesDb.FirstOrDefault(x => x.Name == "Para Desenhar")?.Id,
                "Pelúcias" => categoriesDb.FirstOrDefault(x => x.Name == "Pelúcias")?.Id,
                "Bichinhos" => categoriesDb.FirstOrDefault(x => x.Name == "Bichinhos")?.Id,
                "Pelúcias Interativas" => categoriesDb.FirstOrDefault(x => x.Name == "Pelúcias Interativas")?.Id,
                "Playground" => categoriesDb.FirstOrDefault(x => x.Name == "Playground")?.Id,
                "Balanços" => categoriesDb.FirstOrDefault(x => x.Name == "Balanços")?.Id,
                "Cama Elástica" => categoriesDb.FirstOrDefault(x => x.Name == "Cama Elástica")?.Id,
                "Casas" => categoriesDb.FirstOrDefault(x => x.Name == "Casas")?.Id,
                "Escorregadores" => categoriesDb.FirstOrDefault(x => x.Name == "Escorregadores")?.Id,
                "Gangorras" => categoriesDb.FirstOrDefault(x => x.Name == "Gangorras")?.Id,
                "Mesas e Bancadas" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas e Bancadas")?.Id,
                "Piscinas de Bolinhas" => categoriesDb.FirstOrDefault(x => x.Name == "Piscinas de Bolinhas")?.Id,
                "Pula-pula" => categoriesDb.FirstOrDefault(x => x.Name == "Pula-pula")?.Id,
                "Praia e Piscina Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Praia e Piscina Infantil")?.Id,
                "Boias Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Boias Infantis")?.Id,
                "Bolas Infantis de Praia" => categoriesDb.FirstOrDefault(x => x.Name == "Bolas Infantis de Praia")?.Id,
                "Botes Infláveis Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Botes Infláveis Infantis")?.Id,
                "Brinquedos de Praia" => categoriesDb.FirstOrDefault(x => x.Name == "Brinquedos de Praia")?.Id,
                "Colchões Infantis para Piscina" => categoriesDb.FirstOrDefault(x => x.Name == "Colchões Infantis para Piscina")?.Id,
                "Outros Infláveis Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Infláveis Infantis")?.Id,
                "Piscinas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Piscinas Infantis")?.Id,
                "Pranchas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Pranchas Infantis")?.Id,
                "Quebra-cabeça" => categoriesDb.FirstOrDefault(x => x.Name == "Quebra-cabeça")?.Id,
                "Acessórios para Quebra-Cabeças" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Quebra-Cabeças")?.Id,
                "Quebra-cabeça Adulto" => categoriesDb.FirstOrDefault(x => x.Name == "Quebra-cabeça Adulto")?.Id,
                "Quebra-cabeça Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Quebra-cabeça Infantil")?.Id,
                "Calçados" => categoriesDb.FirstOrDefault(x => x.Name == "Calçados")?.Id,
                "Calçados Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Calçados Infantis")?.Id,
                "Alpargatas" => categoriesDb.FirstOrDefault(x => x.Name == "Alpargatas")?.Id,
                "Chinelos" => categoriesDb.FirstOrDefault(x => x.Name == "Chinelos")?.Id,
                "Sandálias" => categoriesDb.FirstOrDefault(x => x.Name == "Sandálias")?.Id,
                "Sapatênis" => categoriesDb.FirstOrDefault(x => x.Name == "Sapatênis")?.Id,
                "Sapatilhas" => categoriesDb.FirstOrDefault(x => x.Name == "Sapatilhas")?.Id,
                "Femininos" => categoriesDb.FirstOrDefault(x => x.Name == "Femininos")?.Id,
                "Alpargatas e Espadrilhe" => categoriesDb.FirstOrDefault(x => x.Name == "Alpargatas e Espadrilhe")?.Id,
                "Boneca" => categoriesDb.FirstOrDefault(x => x.Name == "Boneca")?.Id,
                "Botas" => categoriesDb.FirstOrDefault(x => x.Name == "Botas")?.Id,
                "Mocassim" => categoriesDb.FirstOrDefault(x => x.Name == "Mocassim")?.Id,
                "Oxford" => categoriesDb.FirstOrDefault(x => x.Name == "Oxford")?.Id,
                "Peep Toe" => categoriesDb.FirstOrDefault(x => x.Name == "Peep Toe")?.Id,
                "Rasteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Rasteiras")?.Id,
                "Scarpin" => categoriesDb.FirstOrDefault(x => x.Name == "Scarpin")?.Id,
                "Slippers" => categoriesDb.FirstOrDefault(x => x.Name == "Slippers")?.Id,
                "Tamancos" => categoriesDb.FirstOrDefault(x => x.Name == "Tamancos")?.Id,
                "Masculinos" => categoriesDb.FirstOrDefault(x => x.Name == "Masculinos")?.Id,
                "Sapato Casual" => categoriesDb.FirstOrDefault(x => x.Name == "Sapato Casual")?.Id,
                "Sapato Social" => categoriesDb.FirstOrDefault(x => x.Name == "Sapato Social")?.Id,
                "Tênis Casual" => categoriesDb.FirstOrDefault(x => x.Name == "Tênis Casual")?.Id,
                "Tênis Esportivo" => categoriesDb.FirstOrDefault(x => x.Name == "Tênis Esportivo")?.Id,
                "Cama, Mesa e Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Cama, Mesa e Banho")?.Id,
                "Acessório para Cama" => categoriesDb.FirstOrDefault(x => x.Name == "Acessório para Cama")?.Id,
                "Capa para Colchão" => categoriesDb.FirstOrDefault(x => x.Name == "Capa para Colchão")?.Id,
                "Capa para Edredom" => categoriesDb.FirstOrDefault(x => x.Name == "Capa para Edredom")?.Id,
                "Pillow Top" => categoriesDb.FirstOrDefault(x => x.Name == "Pillow Top")?.Id,
                "Saia para cama box" => categoriesDb.FirstOrDefault(x => x.Name == "Saia para cama box")?.Id,
                "Avental" => categoriesDb.FirstOrDefault(x => x.Name == "Avental")?.Id,
                "Cobertor e Manta" => categoriesDb.FirstOrDefault(x => x.Name == "Cobertor e Manta")?.Id,
                "Casal" => categoriesDb.FirstOrDefault(x => x.Name == "Casal")?.Id,
                "King" => categoriesDb.FirstOrDefault(x => x.Name == "King")?.Id,
                "Queen" => categoriesDb.FirstOrDefault(x => x.Name == "Queen")?.Id,
                "Solteiro" => categoriesDb.FirstOrDefault(x => x.Name == "Solteiro")?.Id,
                "Colcha e Cobre-leito" => categoriesDb.FirstOrDefault(x => x.Name == "Colcha e Cobre-leito")?.Id,
                "Edredom" => categoriesDb.FirstOrDefault(x => x.Name == "Edredom")?.Id,
                "Enxoval" => categoriesDb.FirstOrDefault(x => x.Name == "Enxoval")?.Id,
                "Infantojuvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Infantojuvenil")?.Id,
                "Cobertor Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Cobertor Infantil e Juvenil")?.Id,
                "Colchas e Cobre-leito Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Colchas e Cobre-leito Infantil e Juvenil")?.Id,
                "Edredom Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Edredom Infantil e Juvenil")?.Id,
                "Enxoval Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Enxoval Infantil")?.Id,
                "Fronha Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Fronha Infantil e Juvenil")?.Id,
                "Jogo de Cama Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Jogo de Cama Infantil e Juvenil")?.Id,
                "Lençol Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Lençol Infantil e Juvenil")?.Id,
                "Roupão Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Roupão Infantil e Juvenil")?.Id,
                "Toalha Avulsa Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Toalha Avulsa Infantil e Juvenil")?.Id,
                "Travesseiro" => categoriesDb.FirstOrDefault(x => x.Name == "Travesseiro")?.Id,
                "Jogo de Cama" => categoriesDb.FirstOrDefault(x => x.Name == "Jogo de Cama")?.Id,
                "Lençol Avulso" => categoriesDb.FirstOrDefault(x => x.Name == "Lençol Avulso")?.Id,
                "Fronha" => categoriesDb.FirstOrDefault(x => x.Name == "Fronha")?.Id,
                "Porta Travesseiro" => categoriesDb.FirstOrDefault(x => x.Name == "Porta Travesseiro")?.Id,
                "Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa")?.Id,
                "Acessório para Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Acessório para Mesa")?.Id,
                "Jogo Americano" => categoriesDb.FirstOrDefault(x => x.Name == "Jogo Americano")?.Id,
                "Panos de Copa" => categoriesDb.FirstOrDefault(x => x.Name == "Panos de Copa")?.Id,
                "Toalha Quadrada" => categoriesDb.FirstOrDefault(x => x.Name == "Toalha Quadrada")?.Id,
                "Toalha Redonda" => categoriesDb.FirstOrDefault(x => x.Name == "Toalha Redonda")?.Id,
                "Toalha Retangular" => categoriesDb.FirstOrDefault(x => x.Name == "Toalha Retangular")?.Id,
                "Trilho" => categoriesDb.FirstOrDefault(x => x.Name == "Trilho")?.Id,
                "Pantufas" => categoriesDb.FirstOrDefault(x => x.Name == "Pantufas")?.Id,
                "Pantufas Adulto" => categoriesDb.FirstOrDefault(x => x.Name == "Pantufas Adulto")?.Id,
                "Pantufas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Pantufas Infantis")?.Id,
                "Roupão" => categoriesDb.FirstOrDefault(x => x.Name == "Roupão")?.Id,
                "Adulto" => categoriesDb.FirstOrDefault(x => x.Name == "Adulto")?.Id,
                "Toalha Avulsa" => categoriesDb.FirstOrDefault(x => x.Name == "Toalha Avulsa")?.Id,
                "Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Banho")?.Id,
                "Lavabo" => categoriesDb.FirstOrDefault(x => x.Name == "Lavabo")?.Id,
                "Piso" => categoriesDb.FirstOrDefault(x => x.Name == "Piso")?.Id,
                "Praia" => categoriesDb.FirstOrDefault(x => x.Name == "Praia")?.Id,
                "Rosto" => categoriesDb.FirstOrDefault(x => x.Name == "Rosto")?.Id,
                "2 Peças" => categoriesDb.FirstOrDefault(x => x.Name == "2 Peças")?.Id,
                "3 Peças" => categoriesDb.FirstOrDefault(x => x.Name == "3 Peças")?.Id,
                "4 Peças" => categoriesDb.FirstOrDefault(x => x.Name == "4 Peças")?.Id,
                "5 Peças" => categoriesDb.FirstOrDefault(x => x.Name == "5 Peças")?.Id,
                "Acima de 6 Peças" => categoriesDb.FirstOrDefault(x => x.Name == "Acima de 6 Peças")?.Id,
                "Espumas Soft e Selada" => categoriesDb.FirstOrDefault(x => x.Name == "Espumas Soft e Selada")?.Id,
                "Látex e Viscoelástico" => categoriesDb.FirstOrDefault(x => x.Name == "Látex e Viscoelástico")?.Id,
                "Manta Siliconizada" => categoriesDb.FirstOrDefault(x => x.Name == "Manta Siliconizada")?.Id,
                "Penas e Plumas" => categoriesDb.FirstOrDefault(x => x.Name == "Penas e Plumas")?.Id,
                "Travesseiro para Gestante" => categoriesDb.FirstOrDefault(x => x.Name == "Travesseiro para Gestante")?.Id,
                "Câmeras, Filmadoras e Drones" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras, Filmadoras e Drones")?.Id,
                "Acessórios de Cine e Foto" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Cine e Foto")?.Id,
                "Bolsas, Capas e Estojos" => categoriesDb.FirstOrDefault(x => x.Name == "Bolsas, Capas e Estojos")?.Id,
                "Cabos" => categoriesDb.FirstOrDefault(x => x.Name == "Cabos")?.Id,
                "Carregadores" => categoriesDb.FirstOrDefault(x => x.Name == "Carregadores")?.Id,
                "Controle ou Disparador Remoto" => categoriesDb.FirstOrDefault(x => x.Name == "Controle ou Disparador Remoto")?.Id,
                "Fitas e Mídias" => categoriesDb.FirstOrDefault(x => x.Name == "Fitas e Mídias")?.Id,
                "Flashes" => categoriesDb.FirstOrDefault(x => x.Name == "Flashes")?.Id,
                "Leitor de Cartões" => categoriesDb.FirstOrDefault(x => x.Name == "Leitor de Cartões")?.Id,
                "Lentes e Filtros" => categoriesDb.FirstOrDefault(x => x.Name == "Lentes e Filtros")?.Id,
                "Outros" => categoriesDb.FirstOrDefault(x => x.Name == "Outros")?.Id,
                "Papel Fotográfico" => categoriesDb.FirstOrDefault(x => x.Name == "Papel Fotográfico")?.Id,
                "Para-Sol" => categoriesDb.FirstOrDefault(x => x.Name == "Para-Sol")?.Id,
                "Pilhas e Baterias" => categoriesDb.FirstOrDefault(x => x.Name == "Pilhas e Baterias")?.Id,
                "Tripés e Monopés" => categoriesDb.FirstOrDefault(x => x.Name == "Tripés e Monopés")?.Id,
                "Binóculos e Telescópios" => categoriesDb.FirstOrDefault(x => x.Name == "Binóculos e Telescópios")?.Id,
                "Binóculos" => categoriesDb.FirstOrDefault(x => x.Name == "Binóculos")?.Id,
                "Telescópios" => categoriesDb.FirstOrDefault(x => x.Name == "Telescópios")?.Id,
                "Câmeras de Ação e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras de Ação e Acessórios")?.Id,
                "Acessórios Esportivos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Esportivos")?.Id,
                "Câmeras Esportivas" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras Esportivas")?.Id,
                "Câmeras Digitais" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras Digitais")?.Id,
                "Câmeras Compactas" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras Compactas")?.Id,
                "Câmeras profissionais" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras profissionais")?.Id,
                "Câmeras semiprofissionais" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras semiprofissionais")?.Id,
                "Acessórios Câmeras Instantâneas" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Câmeras Instantâneas")?.Id,
                "Câmeras" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras")?.Id,
                "Drones e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Drones e Acessórios")?.Id,
                "Acessórios para Drone" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Drone")?.Id,
                "Drones" => categoriesDb.FirstOrDefault(x => x.Name == "Drones")?.Id,
                "Filmadoras" => categoriesDb.FirstOrDefault(x => x.Name == "Filmadoras")?.Id,
                "Cartão de Memória" => categoriesDb.FirstOrDefault(x => x.Name == "Cartão de Memória")?.Id,
                "Filmadoras Profissionais" => categoriesDb.FirstOrDefault(x => x.Name == "Filmadoras Profissionais")?.Id,
                "Impressoras Fotográficas" => categoriesDb.FirstOrDefault(x => x.Name == "Impressoras Fotográficas")?.Id,
                "Porta-Retrato Digital" => categoriesDb.FirstOrDefault(x => x.Name == "Porta-Retrato Digital")?.Id,
                "Casa e Construção" => categoriesDb.FirstOrDefault(x => x.Name == "Casa e Construção")?.Id,
                "Aquecedores de Água" => categoriesDb.FirstOrDefault(x => x.Name == "Aquecedores de Água")?.Id,
                "Acessórios para Aquecedores de Água" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Aquecedores de Água")?.Id,
                "Aquecedor de Água a Gás" => categoriesDb.FirstOrDefault(x => x.Name == "Aquecedor de Água a Gás")?.Id,
                "Banheiro e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Banheiro e Acessórios")?.Id,
                "Assentos Sanitários" => categoriesDb.FirstOrDefault(x => x.Name == "Assentos Sanitários")?.Id,
                "Conjunto para Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Conjunto para Banheiro")?.Id,
                "Duchas Higiênicas" => categoriesDb.FirstOrDefault(x => x.Name == "Duchas Higiênicas")?.Id,
                "Espelho para Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Espelho para Banheiro")?.Id,
                "Gabinetes para Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Gabinetes para Banheiro")?.Id,
                "Pias e Cubas" => categoriesDb.FirstOrDefault(x => x.Name == "Pias e Cubas")?.Id,
                "Suportes para Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Suportes para Banheiro")?.Id,
                "Vasos Sanitários e Bacias" => categoriesDb.FirstOrDefault(x => x.Name == "Vasos Sanitários e Bacias")?.Id,
                "Cozinha e Lavanderia" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinha e Lavanderia")?.Id,
                "Tanques" => categoriesDb.FirstOrDefault(x => x.Name == "Tanques")?.Id,
                "Trituradores de Pia" => categoriesDb.FirstOrDefault(x => x.Name == "Trituradores de Pia")?.Id,
                "Duchas, Chuveiros e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Duchas, Chuveiros e Acessórios")?.Id,
                "Acessórios para Duchas e Chuveiros" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Duchas e Chuveiros")?.Id,
                "Duchas e Chuveiros" => categoriesDb.FirstOrDefault(x => x.Name == "Duchas e Chuveiros")?.Id,
                "Elétrica para Construção" => categoriesDb.FirstOrDefault(x => x.Name == "Elétrica para Construção")?.Id,
                "Adaptador de Tomada" => categoriesDb.FirstOrDefault(x => x.Name == "Adaptador de Tomada")?.Id,
                "Tomadas e Placas" => categoriesDb.FirstOrDefault(x => x.Name == "Tomadas e Placas")?.Id,
                "Geradores" => categoriesDb.FirstOrDefault(x => x.Name == "Geradores")?.Id,
                "Hidráulica" => categoriesDb.FirstOrDefault(x => x.Name == "Hidráulica")?.Id,
                "Sifões" => categoriesDb.FirstOrDefault(x => x.Name == "Sifões")?.Id,
                "Tubos e Conexões" => categoriesDb.FirstOrDefault(x => x.Name == "Tubos e Conexões")?.Id,
                "Válvulas" => categoriesDb.FirstOrDefault(x => x.Name == "Válvulas")?.Id,
                "Iluminação de Casa" => categoriesDb.FirstOrDefault(x => x.Name == "Iluminação de Casa")?.Id,
                "Acessórios de Iluminação" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Iluminação")?.Id,
                "Lâmpadas" => categoriesDb.FirstOrDefault(x => x.Name == "Lâmpadas")?.Id,
                "Luminárias" => categoriesDb.FirstOrDefault(x => x.Name == "Luminárias")?.Id,
                "Refletores e Holofotes" => categoriesDb.FirstOrDefault(x => x.Name == "Refletores e Holofotes")?.Id,
                "Pistolas de Pintura e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Pistolas de Pintura e Acessórios")?.Id,
                "Pistolas de Pintura" => categoriesDb.FirstOrDefault(x => x.Name == "Pistolas de Pintura")?.Id,
                "Portas e Janelas" => categoriesDb.FirstOrDefault(x => x.Name == "Portas e Janelas")?.Id,
                "Acessórios para Portas e Janelas" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Portas e Janelas")?.Id,
                "Segurança da Casa" => categoriesDb.FirstOrDefault(x => x.Name == "Segurança da Casa")?.Id,
                "Alarmes, Sensores e Fechaduras" => categoriesDb.FirstOrDefault(x => x.Name == "Alarmes, Sensores e Fechaduras")?.Id,
                "Câmeras e Monitores" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras e Monitores")?.Id,
                "Cerca Elétrica" => categoriesDb.FirstOrDefault(x => x.Name == "Cerca Elétrica")?.Id,
                "Cofre" => categoriesDb.FirstOrDefault(x => x.Name == "Cofre")?.Id,
                "Porteiros Eletrônicos" => categoriesDb.FirstOrDefault(x => x.Name == "Porteiros Eletrônicos")?.Id,
                "Vídeo Porteiro e Gravadores Digitais" => categoriesDb.FirstOrDefault(x => x.Name == "Vídeo Porteiro e Gravadores Digitais")?.Id,
                "Torneiras" => categoriesDb.FirstOrDefault(x => x.Name == "Torneiras")?.Id,
                "Decoração" => categoriesDb.FirstOrDefault(x => x.Name == "Decoração")?.Id,
                "Adesivos de Parede" => categoriesDb.FirstOrDefault(x => x.Name == "Adesivos de Parede")?.Id,
                "Bibelôs" => categoriesDb.FirstOrDefault(x => x.Name == "Bibelôs")?.Id,
                "Cabideiros" => categoriesDb.FirstOrDefault(x => x.Name == "Cabideiros")?.Id,
                "Castiçais" => categoriesDb.FirstOrDefault(x => x.Name == "Castiçais")?.Id,
                "Centro de Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Centro de Mesa")?.Id,
                "Cinzeiros" => categoriesDb.FirstOrDefault(x => x.Name == "Cinzeiros")?.Id,
                "Cofres e Baús" => categoriesDb.FirstOrDefault(x => x.Name == "Cofres e Baús")?.Id,
                "Cortinas" => categoriesDb.FirstOrDefault(x => x.Name == "Cortinas")?.Id,
                "Acessórios de Cortina" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Cortina")?.Id,
                "Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Banheiro")?.Id,
                "Cozinha" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinha")?.Id,
                "Infantil e Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Infantil e Juvenil")?.Id,
                "Persianas" => categoriesDb.FirstOrDefault(x => x.Name == "Persianas")?.Id,
                "Quarto" => categoriesDb.FirstOrDefault(x => x.Name == "Quarto")?.Id,
                "Sala" => categoriesDb.FirstOrDefault(x => x.Name == "Sala")?.Id,
                "Cubos e Prateleiras" => categoriesDb.FirstOrDefault(x => x.Name == "Cubos e Prateleiras")?.Id,
                "Decoração de Casa" => categoriesDb.FirstOrDefault(x => x.Name == "Decoração de Casa")?.Id,
                "Acessórios decorativos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios decorativos")?.Id,
                "Almofadas" => categoriesDb.FirstOrDefault(x => x.Name == "Almofadas")?.Id,
                "Capas e Protetores" => categoriesDb.FirstOrDefault(x => x.Name == "Capas e protetores")?.Id,
                "Capas para Almofadas" => categoriesDb.FirstOrDefault(x => x.Name == "Capas para Almofadas")?.Id,
                "Mantas de Sofá" => categoriesDb.FirstOrDefault(x => x.Name == "Mantas de Sofá")?.Id,
                "Esferas Decorativas" => categoriesDb.FirstOrDefault(x => x.Name == "Esferas Decorativas")?.Id,
                "Espelhos Decorativos" => categoriesDb.FirstOrDefault(x => x.Name == "Espelhos Decorativos")?.Id,
                "Abajur" => categoriesDb.FirstOrDefault(x => x.Name == "Abajur")?.Id,
                "Arandelas" => categoriesDb.FirstOrDefault(x => x.Name == "Arandelas")?.Id,
                "Fita de LED" => categoriesDb.FirstOrDefault(x => x.Name == "Fita de LED")?.Id,
                "Lustres e Pendentes" => categoriesDb.FirstOrDefault(x => x.Name == "Lustres e Pendentes")?.Id,
                "Plafons" => categoriesDb.FirstOrDefault(x => x.Name == "Plafons")?.Id,
                "Spot" => categoriesDb.FirstOrDefault(x => x.Name == "Spot")?.Id,
                "Letras Decorativas" => categoriesDb.FirstOrDefault(x => x.Name == "Letras Decorativas")?.Id,
                "Objetos Decorativos" => categoriesDb.FirstOrDefault(x => x.Name == "Objetos Decorativos")?.Id,
                "Painéis e Molduras para Fotos" => categoriesDb.FirstOrDefault(x => x.Name == "Painéis e Molduras para Fotos")?.Id,
                "Papel de Parede" => categoriesDb.FirstOrDefault(x => x.Name == "Papel de Parede")?.Id,
                "Porta-retratos" => categoriesDb.FirstOrDefault(x => x.Name == "Porta-retratos")?.Id,
                "Puffs" => categoriesDb.FirstOrDefault(x => x.Name == "Puffs")?.Id,
                "Puxadores" => categoriesDb.FirstOrDefault(x => x.Name == "Puxadores")?.Id,
                "Quadros e Placas" => categoriesDb.FirstOrDefault(x => x.Name == "Quadros e Placas")?.Id,
                "Religiosos" => categoriesDb.FirstOrDefault(x => x.Name == "Religiosos")?.Id,
                "Revisteiros" => categoriesDb.FirstOrDefault(x => x.Name == "Revisteiros")?.Id,
                "Tapete" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete")?.Id,
                "Capacho" => categoriesDb.FirstOrDefault(x => x.Name == "Capacho")?.Id,
                "Tapete para Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete para Banheiro")?.Id,
                "Tapete para Cozinha" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete para Cozinha")?.Id,
                "Tapete para Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete para Escritório")?.Id,
                "Tapete para Lavanderia" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete para Lavanderia")?.Id,
                "Tapete para Quarto" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete para Quarto")?.Id,
                "Tapete para Sala" => categoriesDb.FirstOrDefault(x => x.Name == "Tapete para Sala")?.Id,
                "Tapetes Infantis e Juvenis" => categoriesDb.FirstOrDefault(x => x.Name == "Tapetes Infantis e Juvenis")?.Id,
                "Vasos e Cachepots" => categoriesDb.FirstOrDefault(x => x.Name == "Vasos e Cachepots")?.Id,
                "Velas" => categoriesDb.FirstOrDefault(x => x.Name == "Velas")?.Id,
                "DVDs e Blu-Ray" => categoriesDb.FirstOrDefault(x => x.Name == "DVDs e Blu-Ray")?.Id,
                "Filmes e Seriados" => categoriesDb.FirstOrDefault(x => x.Name == "Filmes e Seriados")?.Id,
                "Ação e Aventura" => categoriesDb.FirstOrDefault(x => x.Name == "Ação e Aventura")?.Id,
                "Animação" => categoriesDb.FirstOrDefault(x => x.Name == "Animação")?.Id,
                "Anime" => categoriesDb.FirstOrDefault(x => x.Name == "Anime")?.Id,
                "Cinema Asiático" => categoriesDb.FirstOrDefault(x => x.Name == "Cinema Asiático")?.Id,
                "Cinema Europeu" => categoriesDb.FirstOrDefault(x => x.Name == "Cinema Europeu")?.Id,
                "Cinema Nacional" => categoriesDb.FirstOrDefault(x => x.Name == "Cinema Nacional")?.Id,
                "Clássicos" => categoriesDb.FirstOrDefault(x => x.Name == "Clássicos")?.Id,
                "Comédia Romântica" => categoriesDb.FirstOrDefault(x => x.Name == "Comédia Romântica")?.Id,
                "Comédia" => categoriesDb.FirstOrDefault(x => x.Name == "Comédia")?.Id,
                "Cursos e Treinamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Cursos e Treinamentos")?.Id,
                "Documentários" => categoriesDb.FirstOrDefault(x => x.Name == "Documentários")?.Id,
                "Drama" => categoriesDb.FirstOrDefault(x => x.Name == "Drama")?.Id,
                "Ficção Científica" => categoriesDb.FirstOrDefault(x => x.Name == "Ficção Científica")?.Id,
                "Gospel e Religioso" => categoriesDb.FirstOrDefault(x => x.Name == "Gospel e Religioso")?.Id,
                "Guerra" => categoriesDb.FirstOrDefault(x => x.Name == "Guerra")?.Id,
                "Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Infantil")?.Id,
                "Minisséries e Séries de TV" => categoriesDb.FirstOrDefault(x => x.Name == "Minisséries e Séries de TV")?.Id,
                "Musicais" => categoriesDb.FirstOrDefault(x => x.Name == "Musicais")?.Id,
                "Policial" => categoriesDb.FirstOrDefault(x => x.Name == "Policial")?.Id,
                "Romance" => categoriesDb.FirstOrDefault(x => x.Name == "Romance")?.Id,
                "Suspense" => categoriesDb.FirstOrDefault(x => x.Name == "Suspense")?.Id,
                "Terror" => categoriesDb.FirstOrDefault(x => x.Name == "Terror")?.Id,
                "Vídeos de Esportes" => categoriesDb.FirstOrDefault(x => x.Name == "Vídeos de Esportes")?.Id,
                "Western" => categoriesDb.FirstOrDefault(x => x.Name == "Western")?.Id,
                "Música e Shows" => categoriesDb.FirstOrDefault(x => x.Name == "Música e Shows")?.Id,
                "Axé" => categoriesDb.FirstOrDefault(x => x.Name == "Axé")?.Id,
                "Blues" => categoriesDb.FirstOrDefault(x => x.Name == "Blues")?.Id,
                "Coletâneas" => categoriesDb.FirstOrDefault(x => x.Name == "Coletâneas")?.Id,
                "Country e Folk" => categoriesDb.FirstOrDefault(x => x.Name == "Country e Folk")?.Id,
                "Eletrônico" => categoriesDb.FirstOrDefault(x => x.Name == "Eletrônico")?.Id,
                "Espetáculos" => categoriesDb.FirstOrDefault(x => x.Name == "Espetáculos")?.Id,
                "Forró" => categoriesDb.FirstOrDefault(x => x.Name == "Forró")?.Id,
                "Funk e Rap" => categoriesDb.FirstOrDefault(x => x.Name == "Funk e Rap")?.Id,
                "Heavy Metal" => categoriesDb.FirstOrDefault(x => x.Name == "Heavy Metal")?.Id,
                "Instrumental" => categoriesDb.FirstOrDefault(x => x.Name == "Instrumental")?.Id,
                "Jazz" => categoriesDb.FirstOrDefault(x => x.Name == "Jazz")?.Id,
                "Lounge" => categoriesDb.FirstOrDefault(x => x.Name == "Lounge")?.Id,
                "MPB" => categoriesDb.FirstOrDefault(x => x.Name == "MPB")?.Id,
                "New Age" => categoriesDb.FirstOrDefault(x => x.Name == "New Age")?.Id,
                "Ópera" => categoriesDb.FirstOrDefault(x => x.Name == "Ópera")?.Id,
                "Orquestras" => categoriesDb.FirstOrDefault(x => x.Name == "Orquestras")?.Id,
                "Pagode e Samba" => categoriesDb.FirstOrDefault(x => x.Name == "Pagode e Samba")?.Id,
                "Pop e Rock Internacional" => categoriesDb.FirstOrDefault(x => x.Name == "Pop e Rock Internacional")?.Id,
                "Pop e Rock Nacional" => categoriesDb.FirstOrDefault(x => x.Name == "Pop e Rock Nacional")?.Id,
                "Reggae" => categoriesDb.FirstOrDefault(x => x.Name == "Reggae")?.Id,
                "Sertanejo" => categoriesDb.FirstOrDefault(x => x.Name == "Sertanejo")?.Id,
                "Trilha Sonora" => categoriesDb.FirstOrDefault(x => x.Name == "Trilha Sonora")?.Id,
                "World Music" => categoriesDb.FirstOrDefault(x => x.Name == "World Music")?.Id,
                "Eletrodomésticos" => categoriesDb.FirstOrDefault(x => x.Name == "Eletrodomésticos")?.Id,
                "Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios")?.Id,
                "Adega de Vinhos" => categoriesDb.FirstOrDefault(x => x.Name == "Adega de Vinhos")?.Id,
                "Centrífuga de Roupas" => categoriesDb.FirstOrDefault(x => x.Name == "Centrífuga de Roupas")?.Id,
                "Coifas" => categoriesDb.FirstOrDefault(x => x.Name == "Coifas")?.Id,
                "Cooktop" => categoriesDb.FirstOrDefault(x => x.Name == "Cooktop")?.Id,
                "1 Boca" => categoriesDb.FirstOrDefault(x => x.Name == "1 Boca")?.Id,
                "4 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "4 Bocas")?.Id,
                "5 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "5 Bocas")?.Id,
                "Dominó (2 Bocas)" => categoriesDb.FirstOrDefault(x => x.Name == "Dominó (2 Bocas)")?.Id,
                "Rangetop" => categoriesDb.FirstOrDefault(x => x.Name == "Rangetop")?.Id,
                "Depuradores de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Depuradores de Ar")?.Id,
                "Fogões" => categoriesDb.FirstOrDefault(x => x.Name == "Fogões")?.Id,
                "Embutir 4 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Embutir 4 Bocas")?.Id,
                "Embutir 5 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Embutir 5 Bocas")?.Id,
                "Embutir 6 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Embutir 6 Bocas")?.Id,
                "Piso 2 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Piso 2 Bocas")?.Id,
                "Piso 4 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Piso 4 Bocas")?.Id,
                "Piso 5 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Piso 5 Bocas")?.Id,
                "Piso 6 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Piso 6 Bocas")?.Id,
                "Forno de Embutir" => categoriesDb.FirstOrDefault(x => x.Name == "Forno de Embutir")?.Id,
                "Freezer" => categoriesDb.FirstOrDefault(x => x.Name == "Freezer")?.Id,
                "Freezer Horizontal" => categoriesDb.FirstOrDefault(x => x.Name == "Freezer Horizontal")?.Id,
                "Freezer Vertical" => categoriesDb.FirstOrDefault(x => x.Name == "Freezer Vertical")?.Id,
                "Frigobar" => categoriesDb.FirstOrDefault(x => x.Name == "Frigobar")?.Id,
                "Lava e Seca" => categoriesDb.FirstOrDefault(x => x.Name == "Lava e Seca")?.Id,
                "Lava-Louças" => categoriesDb.FirstOrDefault(x => x.Name == "Lava-Louças")?.Id,
                "Máquina de Lavar" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Lavar")?.Id,
                "Acima de 10 kg" => categoriesDb.FirstOrDefault(x => x.Name == "Acima de 10 kg")?.Id,
                "Até 6 kg" => categoriesDb.FirstOrDefault(x => x.Name == "Até 6 kg")?.Id,
                "Entre 7kg e 9kg" => categoriesDb.FirstOrDefault(x => x.Name == "Entre 7kg e 9kg")?.Id,
                "Micro-ondas" => categoriesDb.FirstOrDefault(x => x.Name == "Micro-ondas")?.Id,
                "Geladeira e Refrigerador" => categoriesDb.FirstOrDefault(x => x.Name == "Geladeira e Refrigerador")?.Id,
                "1 Porta" => categoriesDb.FirstOrDefault(x => x.Name == "1 Porta")?.Id,
                "2 Portas" => categoriesDb.FirstOrDefault(x => x.Name == "2 Portas")?.Id,
                "Side By Side e French Door" => categoriesDb.FirstOrDefault(x => x.Name == "Side By Side e French Door")?.Id,
                "Secadoras de Roupas" => categoriesDb.FirstOrDefault(x => x.Name == "Secadoras de Roupas")?.Id,
                "Secadora de Parede" => categoriesDb.FirstOrDefault(x => x.Name == "Secadora de Parede")?.Id,
                "Secadora de Piso" => categoriesDb.FirstOrDefault(x => x.Name == "Secadora de Piso")?.Id,
                "Tanquinho" => categoriesDb.FirstOrDefault(x => x.Name == "Tanquinho")?.Id,
                "Eletroportáteis" => categoriesDb.FirstOrDefault(x => x.Name == "Eletroportáteis")?.Id,
                "Abridores Elétricos" => categoriesDb.FirstOrDefault(x => x.Name == "Abridores Elétricos")?.Id,
                "Aspiradores e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Aspiradores e Acessórios")?.Id,
                "Aspirador Água e Pó" => categoriesDb.FirstOrDefault(x => x.Name == "Aspirador Água e Pó")?.Id,
                "Aspirador de Pó" => categoriesDb.FirstOrDefault(x => x.Name == "Aspirador de Pó")?.Id,
                "Batedeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Batedeiras")?.Id,
                "Acessórios Batedeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Batedeiras")?.Id,
                "Batedeira" => categoriesDb.FirstOrDefault(x => x.Name == "Batedeira")?.Id,
                "Planetária" => categoriesDb.FirstOrDefault(x => x.Name == "Planetária")?.Id,
                "Bebedouros e Purificadores" => categoriesDb.FirstOrDefault(x => x.Name == "Bebedouros e Purificadores")?.Id,
                "Bebedouro de Coluna" => categoriesDb.FirstOrDefault(x => x.Name == "Bebedouro de Coluna")?.Id,
                "Bebedouro de Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Bebedouro de Mesa")?.Id,
                "Filtro" => categoriesDb.FirstOrDefault(x => x.Name == "Filtro")?.Id,
                "Purificador" => categoriesDb.FirstOrDefault(x => x.Name == "Purificador")?.Id,
                "Refil" => categoriesDb.FirstOrDefault(x => x.Name == "Refil")?.Id,
                "Cafeteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Cafeteiras")?.Id,
                "Cafeteiras Dolce Gusto" => categoriesDb.FirstOrDefault(x => x.Name == "Cafeteiras Dolce Gusto")?.Id,
                "Cafeteiras Elétricas" => categoriesDb.FirstOrDefault(x => x.Name == "Cafeteiras Elétricas")?.Id,
                "Cafeteiras Expresso" => categoriesDb.FirstOrDefault(x => x.Name == "Cafeteiras Expresso")?.Id,
                "Moedor de Grãos" => categoriesDb.FirstOrDefault(x => x.Name == "Moedor de Grãos")?.Id,
                "Nespresso" => categoriesDb.FirstOrDefault(x => x.Name == "Nespresso")?.Id,
                "Centrífuga de Alimentos" => categoriesDb.FirstOrDefault(x => x.Name == "Centrífuga de Alimentos")?.Id,
                "Chaleiras Elétricas" => categoriesDb.FirstOrDefault(x => x.Name == "Chaleiras Elétricas")?.Id,
                "Chocolateira e Fondue" => categoriesDb.FirstOrDefault(x => x.Name == "Chocolateira e Fondue")?.Id,
                "Chocolateira" => categoriesDb.FirstOrDefault(x => x.Name == "Chocolateira")?.Id,
                "Cozinha Criativa" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinha Criativa")?.Id,
                "Máquina de Algodão Doce" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Algodão Doce")?.Id,
                "Máquina de Biscoito" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Biscoito")?.Id,
                "Máquina de Gelo" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Gelo")?.Id,
                "Máquinas de Cupcake e Bolos" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Cupcake e Bolos")?.Id,
                "Panificadora" => categoriesDb.FirstOrDefault(x => x.Name == "Panificadora")?.Id,
                "Pipoqueiras" => categoriesDb.FirstOrDefault(x => x.Name == "Pipoqueiras")?.Id,
                "Enceradeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Enceradeiras")?.Id,
                "Espremedores de Frutas" => categoriesDb.FirstOrDefault(x => x.Name == "Espremedores de Frutas")?.Id,
                "Facas Elétricas" => categoriesDb.FirstOrDefault(x => x.Name == "Facas Elétricas")?.Id,
                "Ferro de Passar" => categoriesDb.FirstOrDefault(x => x.Name == "Ferro de Passar")?.Id,
                "Ferro a Seco" => categoriesDb.FirstOrDefault(x => x.Name == "Ferro a Seco")?.Id,
                "Ferro a Vapor" => categoriesDb.FirstOrDefault(x => x.Name == "Ferro a Vapor")?.Id,
                "Forno Elétrico" => categoriesDb.FirstOrDefault(x => x.Name == "Forno Elétrico")?.Id,
                "Fritadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Fritadeiras")?.Id,
                "Grill e Sanduicheiras" => categoriesDb.FirstOrDefault(x => x.Name == "Grill e Sanduicheiras")?.Id,
                "Grill" => categoriesDb.FirstOrDefault(x => x.Name == "Grill")?.Id,
                "Sanduicheira Grill" => categoriesDb.FirstOrDefault(x => x.Name == "Sanduicheira Grill")?.Id,
                "Sanduicheiras" => categoriesDb.FirstOrDefault(x => x.Name == "Sanduicheiras")?.Id,
                "Liquidificadores e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Liquidificadores e Acessórios")?.Id,
                "Liquidificadores" => categoriesDb.FirstOrDefault(x => x.Name == "Liquidificadores")?.Id,
                "Máquina de Bebidas" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Bebidas")?.Id,
                "Máquinas de Costura" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Costura")?.Id,
                "Costura" => categoriesDb.FirstOrDefault(x => x.Name == "Costura")?.Id,
                "Máquina de Bordar" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Bordar")?.Id,
                "Máquinas de Waffle e Crepeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Waffle e Crepeiras")?.Id,
                "Máquinas de Crepe" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Crepe")?.Id,
                "Máquinas de Waffle" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Waffle")?.Id,
                "Mini Geladeira" => categoriesDb.FirstOrDefault(x => x.Name == "Mini Geladeira")?.Id,
                "Mixer" => categoriesDb.FirstOrDefault(x => x.Name == "Mixer")?.Id,
                "Moedores e Raladores Elétricos" => categoriesDb.FirstOrDefault(x => x.Name == "Moedores e Raladores Elétricos")?.Id,
                "Omeleteira" => categoriesDb.FirstOrDefault(x => x.Name == "Omeleteira")?.Id,
                "Panelas Elétricas" => categoriesDb.FirstOrDefault(x => x.Name == "Panelas Elétricas")?.Id,
                "Processador de Alimentos" => categoriesDb.FirstOrDefault(x => x.Name == "Processador de Alimentos")?.Id,
                "Torradeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Torradeiras")?.Id,
                "Vaporizadores e Higienizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Vaporizadores e Higienizadores")?.Id,
                "Higienizador" => categoriesDb.FirstOrDefault(x => x.Name == "Higienizador")?.Id,
                "Vaporizador" => categoriesDb.FirstOrDefault(x => x.Name == "Vaporizador")?.Id,
                "Esporte e Lazer" => categoriesDb.FirstOrDefault(x => x.Name == "Esporte e Lazer")?.Id,
                "Acessórios de Proteção" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Proteção")?.Id,
                "Acessórios de Treino" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Treino")?.Id,
                "Bicicletas" => categoriesDb.FirstOrDefault(x => x.Name == "Bicicletas")?.Id,
                "Acessórios para Ciclistas" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Ciclistas")?.Id,
                "Aro 24" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 24")?.Id,
                "Aro 26" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 26")?.Id,
                "Aro 27" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 27")?.Id,
                "Aro 29" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 29")?.Id,
                "Aro 700" => categoriesDb.FirstOrDefault(x => x.Name == "Aro 700")?.Id,
                "Bicicletas Dobráveis" => categoriesDb.FirstOrDefault(x => x.Name == "Bicicletas Dobráveis")?.Id,
                "Bicicletas Elétricas" => categoriesDb.FirstOrDefault(x => x.Name == "Bicicletas Elétricas")?.Id,
                "Bicicletas Motorizadas" => categoriesDb.FirstOrDefault(x => x.Name == "Bicicletas Motorizadas")?.Id,
                "Peças para Bicicleta" => categoriesDb.FirstOrDefault(x => x.Name == "Peças para Bicicleta")?.Id,
                "Camping e Aventura" => categoriesDb.FirstOrDefault(x => x.Name == "Camping e Aventura")?.Id,
                "Acessórios e Equipamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios e Equipamentos")?.Id,
                "Barracas" => categoriesDb.FirstOrDefault(x => x.Name == "Barracas")?.Id,
                "Caixa Térmica" => categoriesDb.FirstOrDefault(x => x.Name == "Caixa Térmica")?.Id,
                "Canoagem" => categoriesDb.FirstOrDefault(x => x.Name == "Canoagem")?.Id,
                "Colchões Infláveis e Colchonetes" => categoriesDb.FirstOrDefault(x => x.Name == "Colchões Infláveis e Colchonetes")?.Id,
                "Lanternas" => categoriesDb.FirstOrDefault(x => x.Name == "Lanternas")?.Id,
                "Sacos de Dormir" => categoriesDb.FirstOrDefault(x => x.Name == "Sacos de Dormir")?.Id,
                "Esportes de Raquete" => categoriesDb.FirstOrDefault(x => x.Name == "Esportes de Raquete")?.Id,
                "Badminton" => categoriesDb.FirstOrDefault(x => x.Name == "Badminton")?.Id,
                "Raqueteira e Mochila" => categoriesDb.FirstOrDefault(x => x.Name == "Raqueteira e Mochila")?.Id,
                "Tênis de Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Tênis de Mesa")?.Id,
                "Esportes Radicais" => categoriesDb.FirstOrDefault(x => x.Name == "Esportes Radicais")?.Id,
                "Patins" => categoriesDb.FirstOrDefault(x => x.Name == "Patins")?.Id,
                "Surf" => categoriesDb.FirstOrDefault(x => x.Name == "Surf")?.Id,
                "Fitness" => categoriesDb.FirstOrDefault(x => x.Name == "Fitness")?.Id,
                "Academias e Estações de Ginástica" => categoriesDb.FirstOrDefault(x => x.Name == "Academias e Estações de Ginástica")?.Id,
                "Acessórios para Ginástica" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Ginástica")?.Id,
                "Anilhas, Halteres, Pesos, Barras, Outros" => categoriesDb.FirstOrDefault(x => x.Name == "Anilhas, Halteres, Pesos, Barras, Outros")?.Id,
                "Aparelhos Abdominais" => categoriesDb.FirstOrDefault(x => x.Name == "Aparelhos Abdominais")?.Id,
                "Aparelhos de Força" => categoriesDb.FirstOrDefault(x => x.Name == "Aparelhos de Força")?.Id,
                "Aparelhos Elípticos" => categoriesDb.FirstOrDefault(x => x.Name == "Aparelhos Elípticos")?.Id,
                "Bicicletas Ergométricas" => categoriesDb.FirstOrDefault(x => x.Name == "Bicicletas Ergométricas")?.Id,
                "Camas Elásticas e Trampolins" => categoriesDb.FirstOrDefault(x => x.Name == "Camas Elásticas e Trampolins")?.Id,
                "Esteiras Ergométricas" => categoriesDb.FirstOrDefault(x => x.Name == "Esteiras Ergométricas")?.Id,
                "Fitness Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Fitness Acessórios")?.Id,
                "Mochila Esportiva" => categoriesDb.FirstOrDefault(x => x.Name == "Mochila Esportiva")?.Id,
                "Pilates e Ioga" => categoriesDb.FirstOrDefault(x => x.Name == "Pilates e Ioga")?.Id,
                "Plataforma Vibratória" => categoriesDb.FirstOrDefault(x => x.Name == "Plataforma Vibratória")?.Id,
                "Simuladores de Caminhada" => categoriesDb.FirstOrDefault(x => x.Name == "Simuladores de Caminhada")?.Id,
                "Squeeze Esportiva" => categoriesDb.FirstOrDefault(x => x.Name == "Squeeze Esportiva")?.Id,
                "Steppers" => categoriesDb.FirstOrDefault(x => x.Name == "Steppers")?.Id,
                "Futebol" => categoriesDb.FirstOrDefault(x => x.Name == "Futebol")?.Id,
                "Bandeira" => categoriesDb.FirstOrDefault(x => x.Name == "Bandeira")?.Id,
                "Casual" => categoriesDb.FirstOrDefault(x => x.Name == "Casual")?.Id,
                "Chuteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Chuteiras")?.Id,
                "Equipamentos para Futebol" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos para Futebol")?.Id,
                "Futsal" => categoriesDb.FirstOrDefault(x => x.Name == "Futsal")?.Id,
                "Luva" => categoriesDb.FirstOrDefault(x => x.Name == "Luva")?.Id,
                "Seleções" => categoriesDb.FirstOrDefault(x => x.Name == "Seleções")?.Id,
                "Souvenirs e Presentes" => categoriesDb.FirstOrDefault(x => x.Name == "Souvenirs e Presentes")?.Id,
                "Times Internacionais" => categoriesDb.FirstOrDefault(x => x.Name == "Times Internacionais")?.Id,
                "Times Nacionais" => categoriesDb.FirstOrDefault(x => x.Name == "Times Nacionais")?.Id,
                "Jogos de Salão" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos de Salão")?.Id,
                "Baralho" => categoriesDb.FirstOrDefault(x => x.Name == "Baralho")?.Id,
                "Dominó" => categoriesDb.FirstOrDefault(x => x.Name == "Dominó")?.Id,
                "Futebol de Botão" => categoriesDb.FirstOrDefault(x => x.Name == "Futebol de Botão")?.Id,
                "Jogo de Dardo" => categoriesDb.FirstOrDefault(x => x.Name == "Jogo de Dardo")?.Id,
                "Mesa de Jogos" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa de Jogos")?.Id,
                "Pebolim" => categoriesDb.FirstOrDefault(x => x.Name == "Pebolim")?.Id,
                "Jogos de Tabuleiro" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos de Tabuleiro")?.Id,
                "Lutas e Artes Marciais" => categoriesDb.FirstOrDefault(x => x.Name == "Lutas e Artes Marciais")?.Id,
                "Boxe" => categoriesDb.FirstOrDefault(x => x.Name == "Boxe")?.Id,
                "Jiu Jitsu" => categoriesDb.FirstOrDefault(x => x.Name == "Jiu Jitsu")?.Id,
                "Judô" => categoriesDb.FirstOrDefault(x => x.Name == "Judô")?.Id,
                "Karatê" => categoriesDb.FirstOrDefault(x => x.Name == "Karatê")?.Id,
                "MMA" => categoriesDb.FirstOrDefault(x => x.Name == "MMA")?.Id,
                "Muai Thai" => categoriesDb.FirstOrDefault(x => x.Name == "Muai Thai")?.Id,
                "Taekwondo" => categoriesDb.FirstOrDefault(x => x.Name == "Taekwondo")?.Id,
                "Mergulho" => categoriesDb.FirstOrDefault(x => x.Name == "Mergulho")?.Id,
                "Acessórios para Mergulho" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Mergulho")?.Id,
                "Conjuntos para Mergulho" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos para Mergulho")?.Id,
                "Máscaras" => categoriesDb.FirstOrDefault(x => x.Name == "Máscaras")?.Id,
                "Respiradores" => categoriesDb.FirstOrDefault(x => x.Name == "Respiradores")?.Id,
                "Monitores e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Monitores e Acessórios")?.Id,
                "Cronômetros" => categoriesDb.FirstOrDefault(x => x.Name == "Cronômetros")?.Id,
                "Monitores Cardíacos" => categoriesDb.FirstOrDefault(x => x.Name == "Monitores Cardíacos")?.Id,
                "Pedômetros" => categoriesDb.FirstOrDefault(x => x.Name == "Pedômetros")?.Id,
                "Natação" => categoriesDb.FirstOrDefault(x => x.Name == "Natação")?.Id,
                "Acessórios de Natação" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Natação")?.Id,
                "Óculos de Natação" => categoriesDb.FirstOrDefault(x => x.Name == "Óculos de Natação")?.Id,
                "Roupas para Natação" => categoriesDb.FirstOrDefault(x => x.Name == "Roupas para Natação")?.Id,
                "Baseball" => categoriesDb.FirstOrDefault(x => x.Name == "Baseball")?.Id,
                "Basquete" => categoriesDb.FirstOrDefault(x => x.Name == "Basquete")?.Id,
                "Futebol Americano e Rugby" => categoriesDb.FirstOrDefault(x => x.Name == "Futebol Americano e Rugby")?.Id,
                "Handball" => categoriesDb.FirstOrDefault(x => x.Name == "Handball")?.Id,
                "Patinetes" => categoriesDb.FirstOrDefault(x => x.Name == "Patinetes")?.Id,
                "Slackline" => categoriesDb.FirstOrDefault(x => x.Name == "Slackline")?.Id,
                "Tiro Esportivo" => categoriesDb.FirstOrDefault(x => x.Name == "Tiro Esportivo")?.Id,
                "Vôlei" => categoriesDb.FirstOrDefault(x => x.Name == "Vôlei")?.Id,
                "Pesca Esportiva" => categoriesDb.FirstOrDefault(x => x.Name == "Pesca Esportiva")?.Id,
                "Acessórios para Pesca" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Pesca")?.Id,
                "Conjuntos e Jogos de Pesca" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos e Jogos de Pesca")?.Id,
                "Praia e Piscina" => categoriesDb.FirstOrDefault(x => x.Name == "Praia e Piscina")?.Id,
                "Boias e Infláveis" => categoriesDb.FirstOrDefault(x => x.Name == "Boias e Infláveis")?.Id,
                "Cadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeiras")?.Id,
                "Frescobol" => categoriesDb.FirstOrDefault(x => x.Name == "Frescobol")?.Id,
                "Guarda-sol e Ombrelone" => categoriesDb.FirstOrDefault(x => x.Name == "Guarda-sol e Ombrelone")?.Id,
                "Piscinas" => categoriesDb.FirstOrDefault(x => x.Name == "Piscinas")?.Id,
                "Tendas e Gazebos" => categoriesDb.FirstOrDefault(x => x.Name == "Tendas e Gazebos")?.Id,
                "Roupas Esportivas" => categoriesDb.FirstOrDefault(x => x.Name == "Roupas Esportivas")?.Id,
                "Agasalhos, Blusões e Jaquetas" => categoriesDb.FirstOrDefault(x => x.Name == "Agasalhos, Blusões e Jaquetas")?.Id,
                "Bonés e Viseiras" => categoriesDb.FirstOrDefault(x => x.Name == "Bonés e Viseiras")?.Id,
                "Calças Esportivas" => categoriesDb.FirstOrDefault(x => x.Name == "Calças Esportivas")?.Id,
                "Camisetas Esportivas" => categoriesDb.FirstOrDefault(x => x.Name == "Camisetas Esportivas")?.Id,
                "Luvas Esportivas" => categoriesDb.FirstOrDefault(x => x.Name == "Luvas Esportivas")?.Id,
                "Macacões" => categoriesDb.FirstOrDefault(x => x.Name == "Macacões")?.Id,
                "Roupas de Compressão" => categoriesDb.FirstOrDefault(x => x.Name == "Roupas de Compressão")?.Id,
                "Shorts e Bermudas Esportivas" => categoriesDb.FirstOrDefault(x => x.Name == "Shorts e Bermudas Esportivas")?.Id,
                "Tops" => categoriesDb.FirstOrDefault(x => x.Name == "Tops")?.Id,
                "Suplementos Alimentares" => categoriesDb.FirstOrDefault(x => x.Name == "Suplementos Alimentares")?.Id,
                "Emagrecimento" => categoriesDb.FirstOrDefault(x => x.Name == "Emagrecimento")?.Id,
                "Energia e Resistência" => categoriesDb.FirstOrDefault(x => x.Name == "Energia e Resistência")?.Id,
                "Massa Muscular" => categoriesDb.FirstOrDefault(x => x.Name == "Massa Muscular")?.Id,
                "Proteínas" => categoriesDb.FirstOrDefault(x => x.Name == "Proteínas")?.Id,
                "Vitaminas e Fitoterápicos" => categoriesDb.FirstOrDefault(x => x.Name == "Vitaminas e Fitoterápicos")?.Id,
                "Veículos Motorizados" => categoriesDb.FirstOrDefault(x => x.Name == "Veículos Motorizados")?.Id,
                "Mini Motos" => categoriesDb.FirstOrDefault(x => x.Name == "Mini Motos")?.Id,
                "Mini Quadriciclos" => categoriesDb.FirstOrDefault(x => x.Name == "Mini Quadriciclos")?.Id,
                "Scooter e Patinete" => categoriesDb.FirstOrDefault(x => x.Name == "Scooter e Patinete")?.Id,
                "Ferramentas" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas")?.Id,
                "Acessórios para Ferramentas" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Ferramentas")?.Id,
                "Bits e Ponteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Bits e Ponteiras")?.Id,
                "Brocas" => categoriesDb.FirstOrDefault(x => x.Name == "Brocas")?.Id,
                "Colas" => categoriesDb.FirstOrDefault(x => x.Name == "Colas")?.Id,
                "Discos de Corte" => categoriesDb.FirstOrDefault(x => x.Name == "Discos de Corte")?.Id,
                "Diversos" => categoriesDb.FirstOrDefault(x => x.Name == "Diversos")?.Id,
                "Escovas" => categoriesDb.FirstOrDefault(x => x.Name == "Escovas")?.Id,
                "Jogos e Kits" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos e Kits")?.Id,
                "Lâminas Tico Tico" => categoriesDb.FirstOrDefault(x => x.Name == "Lâminas Tico Tico")?.Id,
                "Lixas" => categoriesDb.FirstOrDefault(x => x.Name == "Lixas")?.Id,
                "Cadeados" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeados")?.Id,
                "Suportes e Reservatórios" => categoriesDb.FirstOrDefault(x => x.Name == "Suportes e Reservatórios")?.Id,
                "Utilitários" => categoriesDb.FirstOrDefault(x => x.Name == "Utilitários")?.Id,
                "Armazenagem e Organização" => categoriesDb.FirstOrDefault(x => x.Name == "Armazenagem e Organização")?.Id,
                "Caixa e Maleta para Ferramentas" => categoriesDb.FirstOrDefault(x => x.Name == "Caixa e Maleta para Ferramentas")?.Id,
                "Compressores de Ar e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Compressores de Ar e Acessórios")?.Id,
                "Acessórios para Compressores de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Compressores de Ar")?.Id,
                "Compressores de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Compressores de Ar")?.Id,
                "Equipamentos de Solda" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos de Solda")?.Id,
                "Acessórios para Solda" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Solda")?.Id,
                "Maçaricos" => categoriesDb.FirstOrDefault(x => x.Name == "Maçaricos")?.Id,
                "Escadas" => categoriesDb.FirstOrDefault(x => x.Name == "Escadas")?.Id,
                "Ferramentas de Medição" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas de Medição")?.Id,
                "Acessórios de Medição" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Medição")?.Id,
                "Câmera de Inspeção" => categoriesDb.FirstOrDefault(x => x.Name == "Câmera de Inspeção")?.Id,
                "Detectores" => categoriesDb.FirstOrDefault(x => x.Name == "Detectores")?.Id,
                "Medidores" => categoriesDb.FirstOrDefault(x => x.Name == "Medidores")?.Id,
                "Multímetros" => categoriesDb.FirstOrDefault(x => x.Name == "Multímetros")?.Id,
                "Nível" => categoriesDb.FirstOrDefault(x => x.Name == "Nível")?.Id,
                "Trena" => categoriesDb.FirstOrDefault(x => x.Name == "Trena")?.Id,
                "Ferramentas Elétricas" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas Elétricas")?.Id,
                "Bombas, Filtros e Pressurizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Bombas, Filtros e Pressurizadores")?.Id,
                "Esmerilhadeiras e Moto-Esmeris" => categoriesDb.FirstOrDefault(x => x.Name == "Esmerilhadeiras e Moto-Esmeris")?.Id,
                "Furadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Furadeiras")?.Id,
                "Lixadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Lixadeiras")?.Id,
                "Martelos e Marteletes Elétricos" => categoriesDb.FirstOrDefault(x => x.Name == "Martelos e Marteletes Elétricos")?.Id,
                "Microrretíficas" => categoriesDb.FirstOrDefault(x => x.Name == "Microrretíficas")?.Id,
                "Parafusadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Parafusadeiras")?.Id,
                "Plainas" => categoriesDb.FirstOrDefault(x => x.Name == "Plainas")?.Id,
                "Politriz" => categoriesDb.FirstOrDefault(x => x.Name == "Politriz")?.Id,
                "Serras" => categoriesDb.FirstOrDefault(x => x.Name == "Serras")?.Id,
                "Soprador Térmico" => categoriesDb.FirstOrDefault(x => x.Name == "Soprador Térmico")?.Id,
                "Tupias" => categoriesDb.FirstOrDefault(x => x.Name == "Tupias")?.Id,
                "Ferramentas Manuais" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas Manuais")?.Id,
                "Alicates" => categoriesDb.FirstOrDefault(x => x.Name == "Alicates")?.Id,
                "Chaves" => categoriesDb.FirstOrDefault(x => x.Name == "Chaves")?.Id,
                "Cortadores de Piso" => categoriesDb.FirstOrDefault(x => x.Name == "Cortadores de Piso")?.Id,
                "Equipamentos Hidráulicos" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos Hidráulicos")?.Id,
                "Formões, Limas e Grosas" => categoriesDb.FirstOrDefault(x => x.Name == "Formões, Limas e Grosas")?.Id,
                "Grampeadores" => categoriesDb.FirstOrDefault(x => x.Name == "Grampeadores")?.Id,
                "Jogos e Kits de Ferramenta" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos e Kits de Ferramenta")?.Id,
                "Martelos" => categoriesDb.FirstOrDefault(x => x.Name == "Martelos")?.Id,
                "Morsas e Tornos" => categoriesDb.FirstOrDefault(x => x.Name == "Morsas e Tornos")?.Id,
                "Pulverizadores e Atomizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Pulverizadores e Atomizadores")?.Id,
                "Rebitadores" => categoriesDb.FirstOrDefault(x => x.Name == "Rebitadores")?.Id,
                "Serrotes" => categoriesDb.FirstOrDefault(x => x.Name == "Serrotes")?.Id,
                "Talhadeiras, Punções e Saca Pinos" => categoriesDb.FirstOrDefault(x => x.Name == "Talhadeiras, Punções e Saca Pinos")?.Id,
                "Ferramentas Pneumáticas" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas Pneumáticas")?.Id,
                "Chaves de Impacto" => categoriesDb.FirstOrDefault(x => x.Name == "Chaves de Impacto")?.Id,
                "Filtros de Ar" => categoriesDb.FirstOrDefault(x => x.Name == "Filtros de Ar")?.Id,
                "Furadeiras Pneumáticas" => categoriesDb.FirstOrDefault(x => x.Name == "Furadeiras Pneumáticas")?.Id,
                "Marteletes" => categoriesDb.FirstOrDefault(x => x.Name == "Marteletes")?.Id,
                "Retíficas" => categoriesDb.FirstOrDefault(x => x.Name == "Retíficas")?.Id,
                "Serras de Disco" => categoriesDb.FirstOrDefault(x => x.Name == "Serras de Disco")?.Id,
                "Serras Tico-Tico" => categoriesDb.FirstOrDefault(x => x.Name == "Serras Tico-Tico")?.Id,
                "Jardim" => categoriesDb.FirstOrDefault(x => x.Name == "Jardim")?.Id,
                "Acessórios de Jardinagem" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Jardinagem")?.Id,
                "Aparadores de Cerca Viva" => categoriesDb.FirstOrDefault(x => x.Name == "Aparadores de Cerca Viva")?.Id,
                "Aparadores de Grama" => categoriesDb.FirstOrDefault(x => x.Name == "Aparadores de Grama")?.Id,
                "Cortadores de Grama" => categoriesDb.FirstOrDefault(x => x.Name == "Cortadores de Grama")?.Id,
                "Cortadores Manuais" => categoriesDb.FirstOrDefault(x => x.Name == "Cortadores Manuais")?.Id,
                "Ferramentas para Jardim" => categoriesDb.FirstOrDefault(x => x.Name == "Ferramentas para Jardim")?.Id,
                "Irrigação" => categoriesDb.FirstOrDefault(x => x.Name == "Irrigação")?.Id,
                "Motosserras e Eletrosserras" => categoriesDb.FirstOrDefault(x => x.Name == "Motosserras e Eletrosserras")?.Id,
                "Roçadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Roçadeiras")?.Id,
                "Sopradores" => categoriesDb.FirstOrDefault(x => x.Name == "Sopradores")?.Id,
                "Trituradores e Picadores" => categoriesDb.FirstOrDefault(x => x.Name == "Trituradores e Picadores")?.Id,
                "Lavadoras de Pressão" => categoriesDb.FirstOrDefault(x => x.Name == "Lavadoras de Pressão")?.Id,
                "Acessórios Lavadoras de Pressão" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Lavadoras de Pressão")?.Id,
                "Lavadoras Profissionais" => categoriesDb.FirstOrDefault(x => x.Name == "Lavadoras Profissionais")?.Id,
                "Lavadoras Residenciais" => categoriesDb.FirstOrDefault(x => x.Name == "Lavadoras Residenciais")?.Id,
                "Varredeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Varredeiras")?.Id,
                "Soquetes" => categoriesDb.FirstOrDefault(x => x.Name == "Soquetes")?.Id,
                "Games" => categoriesDb.FirstOrDefault(x => x.Name == "Games")?.Id,
                "Acessórios Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Gamer")?.Id,
                "Controles Gamer para PC" => categoriesDb.FirstOrDefault(x => x.Name == "Controles Gamer para PC")?.Id,
                "Headset / Fone de Ouvido Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Headset / Fone de Ouvido Gamer")?.Id,
                "Jogos Para PC" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Para PC")?.Id,
                "Mouse Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Mouse Gamer")?.Id,
                "Mousepad Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Mousepad Gamer")?.Id,
                "Periféricos Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Periféricos Gamer")?.Id,
                "Teclado Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Teclado Gamer")?.Id,
                "Webcam Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Webcam Gamer")?.Id,
                "Acessórios Geek" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Geek")?.Id,
                "Bonecos Geek" => categoriesDb.FirstOrDefault(x => x.Name == "Bonecos Geek")?.Id,
                "Caneca e Squeeze Geek" => categoriesDb.FirstOrDefault(x => x.Name == "Caneca e Squeeze Geek")?.Id,
                "Confecção Geek" => categoriesDb.FirstOrDefault(x => x.Name == "Confecção Geek")?.Id,
                "Nintendo 3DS" => categoriesDb.FirstOrDefault(x => x.Name == "Nintendo 3DS")?.Id,
                "Acessórios Nintendo 3DS" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Nintendo 3DS")?.Id,
                "Consoles Nintendo 3DS" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Nintendo 3DS")?.Id,
                "Jogos Nintendo 3DS" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Nintendo 3DS")?.Id,
                "Nintendo DS" => categoriesDb.FirstOrDefault(x => x.Name == "Nintendo DS")?.Id,
                "Acessórios Nintendo DS" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Nintendo DS")?.Id,
                "Consoles Nintendo DS" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Nintendo DS")?.Id,
                "Jogos Nintendo DS" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Nintendo DS")?.Id,
                "Nintendo NES" => categoriesDb.FirstOrDefault(x => x.Name == "Nintendo NES")?.Id,
                "Consoles Nintendo NES" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Nintendo NES")?.Id,
                "Nintendo Switch" => categoriesDb.FirstOrDefault(x => x.Name == "Nintendo Switch")?.Id,
                "Acessórios Nintendo Switch" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Nintendo Switch")?.Id,
                "Consoles Nintendo Switch" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Nintendo Switch")?.Id,
                "Nintendo Wii U" => categoriesDb.FirstOrDefault(x => x.Name == "Nintendo Wii U")?.Id,
                "Acessórios Nintendo Wii U" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Nintendo Wii U")?.Id,
                "Consoles Nintendo Wii U" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Nintendo Wii U")?.Id,
                "Jogos Nintendo Wii U" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Nintendo Wii U")?.Id,
                "Nintendo Wii" => categoriesDb.FirstOrDefault(x => x.Name == "Nintendo Wii")?.Id,
                "Acessórios Wii" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Wii")?.Id,
                "Consoles Wii" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Wii")?.Id,
                "Jogos Nintendo Wii" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Nintendo Wii")?.Id,
                "Outros Consoles" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Consoles")?.Id,
                "Playstation 2" => categoriesDb.FirstOrDefault(x => x.Name == "Playstation 2")?.Id,
                "Acessórios Playstation 2" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Playstation 2")?.Id,
                "Consoles Playstation 2" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Playstation 2")?.Id,
                "Jogos Playstation 2" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Playstation 2")?.Id,
                "Playstation 3" => categoriesDb.FirstOrDefault(x => x.Name == "Playstation 3")?.Id,
                "Acessórios Playstation 3" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Playstation 3")?.Id,
                "Consoles Playstation 3" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Playstation 3")?.Id,
                "Jogos Playstation 3" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Playstation 3")?.Id,
                "Playstation 4" => categoriesDb.FirstOrDefault(x => x.Name == "Playstation 4")?.Id,
                "Acessórios Playstation 4" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Playstation 4")?.Id,
                "Consoles Playstation 4" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Playstation 4")?.Id,
                "Jogos Playstation 4" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Playstation 4")?.Id,
                "Playstation 5" => categoriesDb.FirstOrDefault(x => x.Name == "Playstation 5")?.Id,
                "Acessórios Playstation 5" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Playstation 5")?.Id,
                "Consoles Playstation 5" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Playstation 5")?.Id,
                "Jogos Playstation 5" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Playstation 5")?.Id,
                "PS Vita" => categoriesDb.FirstOrDefault(x => x.Name == "PS Vita")?.Id,
                "Acessórios PS Vita" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios PS Vita")?.Id,
                "Consoles PS Vita" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles PS Vita")?.Id,
                "Jogos PS Vita" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos PS Vita")?.Id,
                "PSP" => categoriesDb.FirstOrDefault(x => x.Name == "PSP")?.Id,
                "Acessórios PSP" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios PSP")?.Id,
                "Consoles PSP" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles PSP")?.Id,
                "Jogos PSP" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos PSP")?.Id,
                "Xbox 360" => categoriesDb.FirstOrDefault(x => x.Name == "Xbox 360")?.Id,
                "Acessórios Xbox 360" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Xbox 360")?.Id,
                "Consoles Xbox 360" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Xbox 360")?.Id,
                "Jogos Xbox 360" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Xbox 360")?.Id,
                "Xbox One" => categoriesDb.FirstOrDefault(x => x.Name == "Xbox One")?.Id,
                "Acessórios Xbox One" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Xbox One")?.Id,
                "Consoles Xbox One" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Xbox One")?.Id,
                "Jogos Xbox One" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Xbox One")?.Id,
                "Xbox Series" => categoriesDb.FirstOrDefault(x => x.Name == "Xbox Series")?.Id,
                "Acessórios Xbox Series" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Xbox Series")?.Id,
                "Consoles Xbox Series" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Xbox Series")?.Id,
                "Jogos Xbox Series" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Xbox Series")?.Id,
                "Zeebo" => categoriesDb.FirstOrDefault(x => x.Name == "Zeebo")?.Id,
                "Acessórios Zeebo" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Zeebo")?.Id,
                "Consoles Zeebo" => categoriesDb.FirstOrDefault(x => x.Name == "Consoles Zeebo")?.Id,
                "Informática" => categoriesDb.FirstOrDefault(x => x.Name == "Informática")?.Id,
                "Computadores" => categoriesDb.FirstOrDefault(x => x.Name == "Computadores")?.Id,
                "HD Externo" => categoriesDb.FirstOrDefault(x => x.Name == "HD Externo")?.Id,
                "Impressora Multifuncional" => categoriesDb.FirstOrDefault(x => x.Name == "Impressora Multifuncional")?.Id,
                "Jato de Tinta" => categoriesDb.FirstOrDefault(x => x.Name == "Jato de Tinta")?.Id,
                "Laser Colorida" => categoriesDb.FirstOrDefault(x => x.Name == "Laser Colorida")?.Id,
                "Laser" => categoriesDb.FirstOrDefault(x => x.Name == "Laser")?.Id,
                "Tanque de Tinta" => categoriesDb.FirstOrDefault(x => x.Name == "Tanque de Tinta")?.Id,
                "Impressoras" => categoriesDb.FirstOrDefault(x => x.Name == "Impressoras")?.Id,
                "Matricial" => categoriesDb.FirstOrDefault(x => x.Name == "Matricial")?.Id,
                "Notebook" => categoriesDb.FirstOrDefault(x => x.Name == "Notebook")?.Id,
                "Scanner" => categoriesDb.FirstOrDefault(x => x.Name == "Scanner")?.Id,
                "Instrumentos Musicais" => categoriesDb.FirstOrDefault(x => x.Name == "Instrumentos Musicais")?.Id,
                "Acessórios para Instrumentos Musicais" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Instrumentos Musicais")?.Id,
                "Afinadores e Metrônomos" => categoriesDb.FirstOrDefault(x => x.Name == "Afinadores e Metrônomos")?.Id,
                "Pedais e Efeitos" => categoriesDb.FirstOrDefault(x => x.Name == "Pedais e Efeitos")?.Id,
                "Suportes para Instrumentos Musicais" => categoriesDb.FirstOrDefault(x => x.Name == "Suportes para Instrumentos Musicais")?.Id,
                "Áudio e Iluminação" => categoriesDb.FirstOrDefault(x => x.Name == "Áudio e Iluminação")?.Id,
                "Acessórios Áudio e Iluminação" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Áudio e Iluminação")?.Id,
                "Amplificadores e Cubos" => categoriesDb.FirstOrDefault(x => x.Name == "Amplificadores e Cubos")?.Id,
                "Mesas de Som" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas de Som")?.Id,
                "Microfone" => categoriesDb.FirstOrDefault(x => x.Name == "Microfone")?.Id,
                "Mixer DJ" => categoriesDb.FirstOrDefault(x => x.Name == "Mixer DJ")?.Id,
                "Monitor Pessoal" => categoriesDb.FirstOrDefault(x => x.Name == "Monitor Pessoal")?.Id,
                "Cordas" => categoriesDb.FirstOrDefault(x => x.Name == "Cordas")?.Id,
                "Baixolão" => categoriesDb.FirstOrDefault(x => x.Name == "Baixolão")?.Id,
                "Cavaco" => categoriesDb.FirstOrDefault(x => x.Name == "Cavaco")?.Id,
                "Contrabaixo" => categoriesDb.FirstOrDefault(x => x.Name == "Contrabaixo")?.Id,
                "Guitarra" => categoriesDb.FirstOrDefault(x => x.Name == "Guitarra")?.Id,
                "Ukulele" => categoriesDb.FirstOrDefault(x => x.Name == "Ukulele")?.Id,
                "Violão" => categoriesDb.FirstOrDefault(x => x.Name == "Violão")?.Id,
                "Percussão" => categoriesDb.FirstOrDefault(x => x.Name == "Percussão")?.Id,
                "Baterias" => categoriesDb.FirstOrDefault(x => x.Name == "Baterias")?.Id,
                "Outros Equipamentos de Percussão" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Equipamentos de Percussão")?.Id,
                "Timba, Tantan e Rebolo" => categoriesDb.FirstOrDefault(x => x.Name == "Timba, Tantan e Rebolo")?.Id,
                "Teclas" => categoriesDb.FirstOrDefault(x => x.Name == "Teclas")?.Id,
                "Piano" => categoriesDb.FirstOrDefault(x => x.Name == "Piano")?.Id,
                "Teclado" => categoriesDb.FirstOrDefault(x => x.Name == "Teclado")?.Id,
                "Joias e Bijuterias" => categoriesDb.FirstOrDefault(x => x.Name == "Joias e Bijuterias")?.Id,
                "Alianças" => categoriesDb.FirstOrDefault(x => x.Name == "Alianças")?.Id,
                "Livros" => categoriesDb.FirstOrDefault(x => x.Name == "Livros")?.Id,
                "Administração e Negócios" => categoriesDb.FirstOrDefault(x => x.Name == "Administração e Negócios")?.Id,
                "Administração" => categoriesDb.FirstOrDefault(x => x.Name == "Administração")?.Id,
                "Comércio Exterior" => categoriesDb.FirstOrDefault(x => x.Name == "Comércio Exterior")?.Id,
                "Contabilidade e Auditoria" => categoriesDb.FirstOrDefault(x => x.Name == "Contabilidade e Auditoria")?.Id,
                "Desenvolvimento Profissional" => categoriesDb.FirstOrDefault(x => x.Name == "Desenvolvimento Profissional")?.Id,
                "Empreendedorismo" => categoriesDb.FirstOrDefault(x => x.Name == "Empreendedorismo")?.Id,
                "Finanças de Mercado de Capitais" => categoriesDb.FirstOrDefault(x => x.Name == "Finanças de Mercado de Capitais")?.Id,
                "Hospitalar" => categoriesDb.FirstOrDefault(x => x.Name == "Hospitalar")?.Id,
                "Hotelaria e Turismo" => categoriesDb.FirstOrDefault(x => x.Name == "Hotelaria e Turismo")?.Id,
                "Liderança e Gestão de Equipes" => categoriesDb.FirstOrDefault(x => x.Name == "Liderança e Gestão de Equipes")?.Id,
                "Logística e Produção" => categoriesDb.FirstOrDefault(x => x.Name == "Logística e Produção")?.Id,
                "Marketing e Propaganda" => categoriesDb.FirstOrDefault(x => x.Name == "Marketing e Propaganda")?.Id,
                "Negociação" => categoriesDb.FirstOrDefault(x => x.Name == "Negociação")?.Id,
                "Planejamento e Estratégia" => categoriesDb.FirstOrDefault(x => x.Name == "Planejamento e Estratégia")?.Id,
                "Projetos" => categoriesDb.FirstOrDefault(x => x.Name == "Projetos")?.Id,
                "Qualidade" => categoriesDb.FirstOrDefault(x => x.Name == "Qualidade")?.Id,
                "Recursos Humanos e Carreira" => categoriesDb.FirstOrDefault(x => x.Name == "Recursos Humanos e Carreira")?.Id,
                "Secretariado" => categoriesDb.FirstOrDefault(x => x.Name == "Secretariado")?.Id,
                "Tecnologia da Informação e Comércio Eletrônico" => categoriesDb.FirstOrDefault(x => x.Name == "Tecnologia da Informação e Comércio Eletrônico")?.Id,
                "Terceiro Setor" => categoriesDb.FirstOrDefault(x => x.Name == "Terceiro Setor")?.Id,
                "Vendas e Varejo" => categoriesDb.FirstOrDefault(x => x.Name == "Vendas e Varejo")?.Id,
                "Agronegócios" => categoriesDb.FirstOrDefault(x => x.Name == "Agronegócios")?.Id,
                "Agricultura" => categoriesDb.FirstOrDefault(x => x.Name == "Agricultura")?.Id,
                "Agronomia" => categoriesDb.FirstOrDefault(x => x.Name == "Agronomia")?.Id,
                "Criação de Animais Diversos" => categoriesDb.FirstOrDefault(x => x.Name == "Criação de Animais Diversos")?.Id,
                "Fruticultura, Horticultura e Plantas" => categoriesDb.FirstOrDefault(x => x.Name == "Fruticultura, Horticultura e Plantas")?.Id,
                "Pecuária" => categoriesDb.FirstOrDefault(x => x.Name == "Pecuária")?.Id,
                "Técnicas, Equipamentos e Materiais" => categoriesDb.FirstOrDefault(x => x.Name == "Técnicas, Equipamentos e Materiais")?.Id,
                "Animais de Estimação" => categoriesDb.FirstOrDefault(x => x.Name == "Animais de Estimação")?.Id,
                "Animais Diversos" => categoriesDb.FirstOrDefault(x => x.Name == "Animais Diversos")?.Id,
                "Cães" => categoriesDb.FirstOrDefault(x => x.Name == "Cães")?.Id,
                "Gatos" => categoriesDb.FirstOrDefault(x => x.Name == "Gatos")?.Id,
                "Peixes e Aquários" => categoriesDb.FirstOrDefault(x => x.Name == "Peixes e Aquários")?.Id,
                "Arquitetura, Decoração e Design" => categoriesDb.FirstOrDefault(x => x.Name == "Arquitetura, Decoração e Design")?.Id,
                "Arquitetura" => categoriesDb.FirstOrDefault(x => x.Name == "Arquitetura")?.Id,
                "Decoração e Design" => categoriesDb.FirstOrDefault(x => x.Name == "Decoração e Design")?.Id,
                "Jardinagem" => categoriesDb.FirstOrDefault(x => x.Name == "Jardinagem")?.Id,
                "Paisagismo" => categoriesDb.FirstOrDefault(x => x.Name == "Paisagismo")?.Id,
                "Urbanismo" => categoriesDb.FirstOrDefault(x => x.Name == "Urbanismo")?.Id,
                "Artes, Cinema e Teatro" => categoriesDb.FirstOrDefault(x => x.Name == "Artes, Cinema e Teatro")?.Id,
                "Artes" => categoriesDb.FirstOrDefault(x => x.Name == "Artes")?.Id,
                "Cinema" => categoriesDb.FirstOrDefault(x => x.Name == "Cinema")?.Id,
                "Dança" => categoriesDb.FirstOrDefault(x => x.Name == "Dança")?.Id,
                "Desenho e Arte Decorativa" => categoriesDb.FirstOrDefault(x => x.Name == "Desenho e Arte Decorativa")?.Id,
                "Desenho Gráfico e Industrial" => categoriesDb.FirstOrDefault(x => x.Name == "Desenho Gráfico e Industrial")?.Id,
                "Escultura" => categoriesDb.FirstOrDefault(x => x.Name == "Escultura")?.Id,
                "Fotografia" => categoriesDb.FirstOrDefault(x => x.Name == "Fotografia")?.Id,
                "Gifts" => categoriesDb.FirstOrDefault(x => x.Name == "Gifts")?.Id,
                "Livro de Artesanato" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Artesanato")?.Id,
                "Museu" => categoriesDb.FirstOrDefault(x => x.Name == "Museu")?.Id,
                "Música, Partituras e Métodos" => categoriesDb.FirstOrDefault(x => x.Name == "Música, Partituras e Métodos")?.Id,
                "Pintura" => categoriesDb.FirstOrDefault(x => x.Name == "Pintura")?.Id,
                "Teatro" => categoriesDb.FirstOrDefault(x => x.Name == "Teatro")?.Id,
                "Audiolivros" => categoriesDb.FirstOrDefault(x => x.Name == "Audiolivros")?.Id,
                "Autoajuda" => categoriesDb.FirstOrDefault(x => x.Name == "Autoajuda")?.Id,
                "Biografias, Cartas e Memórias" => categoriesDb.FirstOrDefault(x => x.Name == "Biografias, Cartas e Memórias")?.Id,
                "Ciências Humanas e Sociais" => categoriesDb.FirstOrDefault(x => x.Name == "Ciências Humanas e Sociais")?.Id,
                "Comunicação" => categoriesDb.FirstOrDefault(x => x.Name == "Comunicação")?.Id,
                "Concursos" => categoriesDb.FirstOrDefault(x => x.Name == "Concursos")?.Id,
                "Direito" => categoriesDb.FirstOrDefault(x => x.Name == "Direito")?.Id,
                "Download de Audiolivros MP3" => categoriesDb.FirstOrDefault(x => x.Name == "Download de Audiolivros MP3")?.Id,
                "Economia" => categoriesDb.FirstOrDefault(x => x.Name == "Economia")?.Id,
                "Educação" => categoriesDb.FirstOrDefault(x => x.Name == "Educação")?.Id,
                "Ensino de Línguas" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino de Línguas")?.Id,
                "Esoterismo" => categoriesDb.FirstOrDefault(x => x.Name == "Esoterismo")?.Id,
                "Esportes" => categoriesDb.FirstOrDefault(x => x.Name == "Esportes")?.Id,
                "História e Geografia" => categoriesDb.FirstOrDefault(x => x.Name == "História e Geografia")?.Id,
                "Linguística" => categoriesDb.FirstOrDefault(x => x.Name == "Linguística")?.Id,
                "Literatura Estrangeira" => categoriesDb.FirstOrDefault(x => x.Name == "Literatura Estrangeira")?.Id,
                "Literatura Infantojuvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Literatura Infantojuvenil")?.Id,
                "Literatura Nacional" => categoriesDb.FirstOrDefault(x => x.Name == "Literatura Nacional")?.Id,
                "Moda, Beleza e Dicas" => categoriesDb.FirstOrDefault(x => x.Name == "Moda, Beleza e Dicas")?.Id,
                "Psicologia" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia")?.Id,
                "Religião" => categoriesDb.FirstOrDefault(x => x.Name == "Religião")?.Id,
                "Autoajuda e Relacionamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Autoajuda e Relacionamentos")?.Id,
                "Autoestima" => categoriesDb.FirstOrDefault(x => x.Name == "Autoestima")?.Id,
                "Dependência Química" => categoriesDb.FirstOrDefault(x => x.Name == "Dependência Química")?.Id,
                "Depressão" => categoriesDb.FirstOrDefault(x => x.Name == "Depressão")?.Id,
                "Dieta e Boa Forma" => categoriesDb.FirstOrDefault(x => x.Name == "Dieta e Boa Forma")?.Id,
                "Feng Shui" => categoriesDb.FirstOrDefault(x => x.Name == "Feng Shui")?.Id,
                "Hipnose e Regressão" => categoriesDb.FirstOrDefault(x => x.Name == "Hipnose e Regressão")?.Id,
                "Livros de Puericultura" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Puericultura")?.Id,
                "Meditação e Reflexão" => categoriesDb.FirstOrDefault(x => x.Name == "Meditação e Reflexão")?.Id,
                "Mulheres" => categoriesDb.FirstOrDefault(x => x.Name == "Mulheres")?.Id,
                "PNL" => categoriesDb.FirstOrDefault(x => x.Name == "PNL")?.Id,
                "Relacionamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Relacionamentos")?.Id,
                "Stress" => categoriesDb.FirstOrDefault(x => x.Name == "Stress")?.Id,
                "Sucesso" => categoriesDb.FirstOrDefault(x => x.Name == "Sucesso")?.Id,
                "Yoga" => categoriesDb.FirstOrDefault(x => x.Name == "Yoga")?.Id,
                "Biografias" => categoriesDb.FirstOrDefault(x => x.Name == "Biografias")?.Id,
                "Cartas" => categoriesDb.FirstOrDefault(x => x.Name == "Cartas")?.Id,
                "Diários" => categoriesDb.FirstOrDefault(x => x.Name == "Diários")?.Id,
                "Ciências Biológicas" => categoriesDb.FirstOrDefault(x => x.Name == "Ciências Biológicas")?.Id,
                "Biologia" => categoriesDb.FirstOrDefault(x => x.Name == "Biologia")?.Id,
                "Botânica" => categoriesDb.FirstOrDefault(x => x.Name == "Botânica")?.Id,
                "Ecologia" => categoriesDb.FirstOrDefault(x => x.Name == "Ecologia")?.Id,
                "Fisiologia" => categoriesDb.FirstOrDefault(x => x.Name == "Fisiologia")?.Id,
                "Genética" => categoriesDb.FirstOrDefault(x => x.Name == "Genética")?.Id,
                "Zoologia" => categoriesDb.FirstOrDefault(x => x.Name == "Zoologia")?.Id,
                "Ciências Exatas" => categoriesDb.FirstOrDefault(x => x.Name == "Ciências Exatas")?.Id,
                "Astronomia" => categoriesDb.FirstOrDefault(x => x.Name == "Astronomia")?.Id,
                "Estatística" => categoriesDb.FirstOrDefault(x => x.Name == "Estatística")?.Id,
                "Física" => categoriesDb.FirstOrDefault(x => x.Name == "Física")?.Id,
                "Matemática" => categoriesDb.FirstOrDefault(x => x.Name == "Matemática")?.Id,
                "Nanotecnologia" => categoriesDb.FirstOrDefault(x => x.Name == "Nanotecnologia")?.Id,
                "Química" => categoriesDb.FirstOrDefault(x => x.Name == "Química")?.Id,
                "Antropologia" => categoriesDb.FirstOrDefault(x => x.Name == "Antropologia")?.Id,
                "Ciência Política" => categoriesDb.FirstOrDefault(x => x.Name == "Ciência Política")?.Id,
                "Ética" => categoriesDb.FirstOrDefault(x => x.Name == "Ética")?.Id,
                "Etiqueta" => categoriesDb.FirstOrDefault(x => x.Name == "Etiqueta")?.Id,
                "Filosofia" => categoriesDb.FirstOrDefault(x => x.Name == "Filosofia")?.Id,
                "Folclore" => categoriesDb.FirstOrDefault(x => x.Name == "Folclore")?.Id,
                "Lógica" => categoriesDb.FirstOrDefault(x => x.Name == "Lógica")?.Id,
                "Metafísica" => categoriesDb.FirstOrDefault(x => x.Name == "Metafísica")?.Id,
                "Serviços Sociais e Associações" => categoriesDb.FirstOrDefault(x => x.Name == "Serviços Sociais e Associações")?.Id,
                "Sociologia" => categoriesDb.FirstOrDefault(x => x.Name == "Sociologia")?.Id,
                "Ciências Naturais" => categoriesDb.FirstOrDefault(x => x.Name == "Ciências Naturais")?.Id,
                "Ciências" => categoriesDb.FirstOrDefault(x => x.Name == "Ciências")?.Id,
                "Geologia" => categoriesDb.FirstOrDefault(x => x.Name == "Geologia")?.Id,
                "Meteorologia" => categoriesDb.FirstOrDefault(x => x.Name == "Meteorologia")?.Id,
                "Oceanografia" => categoriesDb.FirstOrDefault(x => x.Name == "Oceanografia")?.Id,
                "Paleontologia" => categoriesDb.FirstOrDefault(x => x.Name == "Paleontologia")?.Id,
                "Comunicação e Almanaques" => categoriesDb.FirstOrDefault(x => x.Name == "Comunicação e Almanaques")?.Id,
                "Almanaques" => categoriesDb.FirstOrDefault(x => x.Name == "Almanaques")?.Id,
                "Biblioteconomia" => categoriesDb.FirstOrDefault(x => x.Name == "Biblioteconomia")?.Id,
                "Editoração" => categoriesDb.FirstOrDefault(x => x.Name == "Editoração")?.Id,
                "Jornalismo" => categoriesDb.FirstOrDefault(x => x.Name == "Jornalismo")?.Id,
                "Publicidade e Propaganda" => categoriesDb.FirstOrDefault(x => x.Name == "Publicidade e Propaganda")?.Id,
                "Rádio e TV" => categoriesDb.FirstOrDefault(x => x.Name == "Rádio e TV")?.Id,
                "Relações Públicas" => categoriesDb.FirstOrDefault(x => x.Name == "Relações Públicas")?.Id,
                "Arquivologia" => categoriesDb.FirstOrDefault(x => x.Name == "Arquivologia")?.Id,
                "Atualidades" => categoriesDb.FirstOrDefault(x => x.Name == "Atualidades")?.Id,
                "Concursos Informática" => categoriesDb.FirstOrDefault(x => x.Name == "Concursos Informática")?.Id,
                "Engenharia" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia")?.Id,
                "Guias de Estudos" => categoriesDb.FirstOrDefault(x => x.Name == "Guias de Estudos")?.Id,
                "Medicina e Saúde" => categoriesDb.FirstOrDefault(x => x.Name == "Medicina e Saúde")?.Id,
                "Português e Redação" => categoriesDb.FirstOrDefault(x => x.Name == "Português e Redação")?.Id,
                "Dicionários" => categoriesDb.FirstOrDefault(x => x.Name == "Dicionários")?.Id,
                "Alemão" => categoriesDb.FirstOrDefault(x => x.Name == "Alemão")?.Id,
                "Espanhol" => categoriesDb.FirstOrDefault(x => x.Name == "Espanhol")?.Id,
                "Francês" => categoriesDb.FirstOrDefault(x => x.Name == "Francês")?.Id,
                "Inglês" => categoriesDb.FirstOrDefault(x => x.Name == "Inglês")?.Id,
                "Italiano" => categoriesDb.FirstOrDefault(x => x.Name == "Italiano")?.Id,
                "Outras Línguas" => categoriesDb.FirstOrDefault(x => x.Name == "Outras Línguas")?.Id,
                "Português" => categoriesDb.FirstOrDefault(x => x.Name == "Português")?.Id,
                "Temáticos" => categoriesDb.FirstOrDefault(x => x.Name == "Temáticos")?.Id,
                "Didáticos" => categoriesDb.FirstOrDefault(x => x.Name == "Didáticos")?.Id,
                "Educação Infantil (Pré-Escola)" => categoriesDb.FirstOrDefault(x => x.Name == "Educação Infantil (Pré-Escola)")?.Id,
                "Ensino Fundamental - Ciências" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Ciências")?.Id,
                "Ensino Fundamental - Desenho Geométrico" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Desenho Geométrico")?.Id,
                "Ensino Fundamental - Educação Artística" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Educação Artística")?.Id,
                "Ensino Fundamental - Educação Física" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Educação Física")?.Id,
                "Ensino Fundamental - Espanhol" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Espanhol")?.Id,
                "Ensino Fundamental - Estudos Sociais" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Estudos Sociais")?.Id,
                "Ensino Fundamental - História e Geografia" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - História e Geografia")?.Id,
                "Ensino Fundamental - Inglês" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Inglês")?.Id,
                "Ensino Fundamental - Integrado" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Integrado")?.Id,
                "Ensino Fundamental - Matemática" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Matemática")?.Id,
                "Ensino Fundamental - Português" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Português")?.Id,
                "Ensino Fundamental - Religião" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Fundamental - Religião")?.Id,
                "Ensino Médio - Artes" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Artes")?.Id,
                "Ensino Médio - Biologia" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Biologia")?.Id,
                "Ensino Médio - Espanhol" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Espanhol")?.Id,
                "Ensino Médio - Filosofia" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Filosofia")?.Id,
                "Ensino Médio - Física" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Física")?.Id,
                "Ensino Médio - Geografia" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Geografia")?.Id,
                "Ensino Médio - História" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - História")?.Id,
                "Ensino Médio - Inglês" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Inglês")?.Id,
                "Ensino Médio - Literatura" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Literatura")?.Id,
                "Ensino Médio - Matemática" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Matemática")?.Id,
                "Ensino Médio - Português" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Português")?.Id,
                "Ensino Médio - Química" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Química")?.Id,
                "Ensino Médio - Sociologia" => categoriesDb.FirstOrDefault(x => x.Name == "Ensino Médio - Sociologia")?.Id,
                "Paradidáticos" => categoriesDb.FirstOrDefault(x => x.Name == "Paradidáticos")?.Id,
                "Telecurso, Enem" => categoriesDb.FirstOrDefault(x => x.Name == "Telecurso, Enem")?.Id,
                "Vestibular" => categoriesDb.FirstOrDefault(x => x.Name == "Vestibular")?.Id,
                "Direito e Legislação" => categoriesDb.FirstOrDefault(x => x.Name == "Direito e Legislação")?.Id,
                "Direito Administrativo" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Administrativo")?.Id,
                "Direito Ambiental" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Ambiental")?.Id,
                "Direito Civil" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Civil")?.Id,
                "Direito Comercial" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Comercial")?.Id,
                "Direito Constitucional" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Constitucional")?.Id,
                "Direito Eleitoral" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Eleitoral")?.Id,
                "Direito Internacional" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Internacional")?.Id,
                "Direito Penal" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Penal")?.Id,
                "Direito Previdenciário" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Previdenciário")?.Id,
                "Direito Processual Civil" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Processual Civil")?.Id,
                "Direito Processual Penal" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Processual Penal")?.Id,
                "Direito Trabalhista" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Trabalhista")?.Id,
                "Direito Tributário" => categoriesDb.FirstOrDefault(x => x.Name == "Direito Tributário")?.Id,
                "Legislação" => categoriesDb.FirstOrDefault(x => x.Name == "Legislação")?.Id,
                "Economia e Globalização" => categoriesDb.FirstOrDefault(x => x.Name == "Economia e Globalização")?.Id,
                "Brasileira" => categoriesDb.FirstOrDefault(x => x.Name == "Brasileira")?.Id,
                "Globalização" => categoriesDb.FirstOrDefault(x => x.Name == "Globalização")?.Id,
                "Internacional" => categoriesDb.FirstOrDefault(x => x.Name == "Internacional")?.Id,
                "Macroeconomia" => categoriesDb.FirstOrDefault(x => x.Name == "Macroeconomia")?.Id,
                "Microeconomia" => categoriesDb.FirstOrDefault(x => x.Name == "Microeconomia")?.Id,
                "Educação e Aprendizagem" => categoriesDb.FirstOrDefault(x => x.Name == "Educação e Aprendizagem")?.Id,
                "Enciclopédia e Periódicos" => categoriesDb.FirstOrDefault(x => x.Name == "Enciclopédia e Periódicos")?.Id,
                "Metodologia e Técnicas de Pesquisas" => categoriesDb.FirstOrDefault(x => x.Name == "Metodologia e Técnicas de Pesquisas")?.Id,
                "Pedagogia" => categoriesDb.FirstOrDefault(x => x.Name == "Pedagogia")?.Id,
                "Engenharia e Tecnologia" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia e Tecnologia")?.Id,
                "Engenharia Aeronáutica" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Aeronáutica")?.Id,
                "Engenharia Agrícola" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Agrícola")?.Id,
                "Engenharia Ambiental" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Ambiental")?.Id,
                "Engenharia Civil" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Civil")?.Id,
                "Engenharia da Telecomunicação" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia da Telecomunicação")?.Id,
                "Engenharia de Alimentos" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia de Alimentos")?.Id,
                "Engenharia de Materiais" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia de Materiais")?.Id,
                "Engenharia de Minas" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia de Minas")?.Id,
                "Engenharia de Produção" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia de Produção")?.Id,
                "Engenharia Elétrica" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Elétrica")?.Id,
                "Engenharia Eletrônica" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Eletrônica")?.Id,
                "Engenharia Hidráulica" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Hidráulica")?.Id,
                "Engenharia Mecânica" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Mecânica")?.Id,
                "Engenharia Metalúrgica" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Metalúrgica")?.Id,
                "Engenharia Química" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia Química")?.Id,
                "Tecnologia" => categoriesDb.FirstOrDefault(x => x.Name == "Tecnologia")?.Id,
                "Business e Negócios" => categoriesDb.FirstOrDefault(x => x.Name == "Business e Negócios")?.Id,
                "Chinês e Mandarim" => categoriesDb.FirstOrDefault(x => x.Name == "Chinês e Mandarim")?.Id,
                "Testes (Gmat, Toefel)" => categoriesDb.FirstOrDefault(x => x.Name == "Testes (Gmat, Toefel)")?.Id,
                "Anjos" => categoriesDb.FirstOrDefault(x => x.Name == "Anjos")?.Id,
                "Astrologia" => categoriesDb.FirstOrDefault(x => x.Name == "Astrologia")?.Id,
                "Cabala" => categoriesDb.FirstOrDefault(x => x.Name == "Cabala")?.Id,
                "Esoterismo e Ocultismo" => categoriesDb.FirstOrDefault(x => x.Name == "Esoterismo e Ocultismo")?.Id,
                "I Ching" => categoriesDb.FirstOrDefault(x => x.Name == "I Ching")?.Id,
                "Maçonaria" => categoriesDb.FirstOrDefault(x => x.Name == "Maçonaria")?.Id,
                "Magia" => categoriesDb.FirstOrDefault(x => x.Name == "Magia")?.Id,
                "Numerologia" => categoriesDb.FirstOrDefault(x => x.Name == "Numerologia")?.Id,
                "Parapsicologia" => categoriesDb.FirstOrDefault(x => x.Name == "Parapsicologia")?.Id,
                "Profecias" => categoriesDb.FirstOrDefault(x => x.Name == "Profecias")?.Id,
                "Quiromancia" => categoriesDb.FirstOrDefault(x => x.Name == "Quiromancia")?.Id,
                "Runas" => categoriesDb.FirstOrDefault(x => x.Name == "Runas")?.Id,
                "Sonhos" => categoriesDb.FirstOrDefault(x => x.Name == "Sonhos")?.Id,
                "Tarô" => categoriesDb.FirstOrDefault(x => x.Name == "Tarô")?.Id,
                "Ufologia" => categoriesDb.FirstOrDefault(x => x.Name == "Ufologia")?.Id,
                "Aquáticos" => categoriesDb.FirstOrDefault(x => x.Name == "Aquáticos")?.Id,
                "Artes Marciais" => categoriesDb.FirstOrDefault(x => x.Name == "Artes Marciais")?.Id,
                "Automobilismo" => categoriesDb.FirstOrDefault(x => x.Name == "Automobilismo")?.Id,
                "Caminhada e Corrida" => categoriesDb.FirstOrDefault(x => x.Name == "Caminhada e Corrida")?.Id,
                "Ciclismo" => categoriesDb.FirstOrDefault(x => x.Name == "Ciclismo")?.Id,
                "Educação Física" => categoriesDb.FirstOrDefault(x => x.Name == "Educação Física")?.Id,
                "Fitness e Musculação" => categoriesDb.FirstOrDefault(x => x.Name == "Fitness e Musculação")?.Id,
                "Golfe" => categoriesDb.FirstOrDefault(x => x.Name == "Golfe")?.Id,
                "Hipismo e Equitação" => categoriesDb.FirstOrDefault(x => x.Name == "Hipismo e Equitação")?.Id,
                "Jogos Atléticos e Coletivos" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Atléticos e Coletivos")?.Id,
                "Jogos, Sudoku e Palavra Cruzada" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos, Sudoku e Palavra Cruzada")?.Id,
                "Pesca, Caça e Tiro" => categoriesDb.FirstOrDefault(x => x.Name == "Pesca, Caça e Tiro")?.Id,
                "Pilates" => categoriesDb.FirstOrDefault(x => x.Name == "Pilates")?.Id,
                "Pôquer" => categoriesDb.FirstOrDefault(x => x.Name == "Pôquer")?.Id,
                "Voleibol e Basquete" => categoriesDb.FirstOrDefault(x => x.Name == "Voleibol e Basquete")?.Id,
                "Xadrez" => categoriesDb.FirstOrDefault(x => x.Name == "Xadrez")?.Id,
                "Gastronomia" => categoriesDb.FirstOrDefault(x => x.Name == "Gastronomia")?.Id,
                "Culinária" => categoriesDb.FirstOrDefault(x => x.Name == "Culinária")?.Id,
                "Diet e Light" => categoriesDb.FirstOrDefault(x => x.Name == "Diet e Light")?.Id,
                "Doces e Sobremesas" => categoriesDb.FirstOrDefault(x => x.Name == "Doces e Sobremesas")?.Id,
                "Guias de Bares e Restaurantes" => categoriesDb.FirstOrDefault(x => x.Name == "Guias de Bares e Restaurantes")?.Id,
                "Livros de Bebidas" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Bebidas")?.Id,
                "Natural e Vegetariana" => categoriesDb.FirstOrDefault(x => x.Name == "Natural e Vegetariana")?.Id,
                "Geografia do Brasil" => categoriesDb.FirstOrDefault(x => x.Name == "Geografia do Brasil")?.Id,
                "Geografia" => categoriesDb.FirstOrDefault(x => x.Name == "Geografia")?.Id,
                "História do Brasil" => categoriesDb.FirstOrDefault(x => x.Name == "História do Brasil")?.Id,
                "História" => categoriesDb.FirstOrDefault(x => x.Name == "História")?.Id,
                "Mitologia" => categoriesDb.FirstOrDefault(x => x.Name == "Mitologia")?.Id,
                "História em Quadrinhos, Cards e RPGs" => categoriesDb.FirstOrDefault(x => x.Name == "História em Quadrinhos, Cards e RPGs")?.Id,
                "Cards" => categoriesDb.FirstOrDefault(x => x.Name == "Cards")?.Id,
                "DC Comics" => categoriesDb.FirstOrDefault(x => x.Name == "DC Comics")?.Id,
                "Humor" => categoriesDb.FirstOrDefault(x => x.Name == "Humor")?.Id,
                "Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Infantis")?.Id,
                "Mangás" => categoriesDb.FirstOrDefault(x => x.Name == "Mangás")?.Id,
                "Marvel Comics" => categoriesDb.FirstOrDefault(x => x.Name == "Marvel Comics")?.Id,
                "Outros Quadrinhos" => categoriesDb.FirstOrDefault(x => x.Name == "Outros Quadrinhos")?.Id,
                "Quadrinhos Adultos" => categoriesDb.FirstOrDefault(x => x.Name == "Quadrinhos Adultos")?.Id,
                "Quadrinhos" => categoriesDb.FirstOrDefault(x => x.Name == "Quadrinhos")?.Id,
                "RPG" => categoriesDb.FirstOrDefault(x => x.Name == "RPG")?.Id,
                "Informática e Certificação" => categoriesDb.FirstOrDefault(x => x.Name == "Informática e Certificação")?.Id,
                "Análise de Sistemas" => categoriesDb.FirstOrDefault(x => x.Name == "Análise de Sistemas")?.Id,
                "Aplicativos e Programas (Cursos)" => categoriesDb.FirstOrDefault(x => x.Name == "Aplicativos e Programas (Cursos)")?.Id,
                "Banco de Dados" => categoriesDb.FirstOrDefault(x => x.Name == "Banco de Dados")?.Id,
                "Certificação" => categoriesDb.FirstOrDefault(x => x.Name == "Certificação")?.Id,
                "Computação Gráfica" => categoriesDb.FirstOrDefault(x => x.Name == "Computação Gráfica")?.Id,
                "Engenharia da Computação" => categoriesDb.FirstOrDefault(x => x.Name == "Engenharia da Computação")?.Id,
                "Hardware" => categoriesDb.FirstOrDefault(x => x.Name == "Hardware")?.Id,
                "Inteligência Artificial" => categoriesDb.FirstOrDefault(x => x.Name == "Inteligência Artificial")?.Id,
                "Internet" => categoriesDb.FirstOrDefault(x => x.Name == "Internet")?.Id,
                "Linguagem de Programação" => categoriesDb.FirstOrDefault(x => x.Name == "Linguagem de Programação")?.Id,
                "Livros de Informática" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Informática")?.Id,
                "Redes" => categoriesDb.FirstOrDefault(x => x.Name == "Redes")?.Id,
                "Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Segurança")?.Id,
                "Sistemas Operacionais" => categoriesDb.FirstOrDefault(x => x.Name == "Sistemas Operacionais")?.Id,
                "Linguística e Oratória" => categoriesDb.FirstOrDefault(x => x.Name == "Linguística e Oratória")?.Id,
                "Crítica Literária" => categoriesDb.FirstOrDefault(x => x.Name == "Crítica Literária")?.Id,
                "Oratória" => categoriesDb.FirstOrDefault(x => x.Name == "Oratória")?.Id,
                "Teoria Literária" => categoriesDb.FirstOrDefault(x => x.Name == "Teoria Literária")?.Id,
                "Contos, Crônicas e Ensaios" => categoriesDb.FirstOrDefault(x => x.Name == "Contos, Crônicas e Ensaios")?.Id,
                "Poesia" => categoriesDb.FirstOrDefault(x => x.Name == "Poesia")?.Id,
                "Sátira e Humor" => categoriesDb.FirstOrDefault(x => x.Name == "Sátira e Humor")?.Id,
                "Suspense e de Terror" => categoriesDb.FirstOrDefault(x => x.Name == "Suspense e de Terror")?.Id,
                "Infantil - até 3 anos" => categoriesDb.FirstOrDefault(x => x.Name == "Infantil - até 3 anos")?.Id,
                "Infantil - de 4 a 10 anos" => categoriesDb.FirstOrDefault(x => x.Name == "Infantil - de 4 a 10 anos")?.Id,
                "Juvenil" => categoriesDb.FirstOrDefault(x => x.Name == "Juvenil")?.Id,
                "Livros para Recreação" => categoriesDb.FirstOrDefault(x => x.Name == "Livros para Recreação")?.Id,
                "Pop Up book 3D" => categoriesDb.FirstOrDefault(x => x.Name == "Pop Up book 3D")?.Id,
                "Sátiras e Humor" => categoriesDb.FirstOrDefault(x => x.Name == "Sátiras e Humor")?.Id,
                "Livros Importados" => categoriesDb.FirstOrDefault(x => x.Name == "Livros Importados")?.Id,
                "Especialidades Médicas" => categoriesDb.FirstOrDefault(x => x.Name == "Especialidades Médicas")?.Id,
                "Livro de Enfermagem" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Enfermagem")?.Id,
                "Livro de Homeopatia" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Homeopatia")?.Id,
                "Livro de Medicina Alternativa" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Medicina Alternativa")?.Id,
                "Livro de Pediatria" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Pediatria")?.Id,
                "Livro de Psiquiatria" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Psiquiatria")?.Id,
                "Livro de Saúde" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Saúde")?.Id,
                "Livro de Veterinária e Zootecnia" => categoriesDb.FirstOrDefault(x => x.Name == "Livro de Veterinária e Zootecnia")?.Id,
                "Livro Farmacologia" => categoriesDb.FirstOrDefault(x => x.Name == "Livro Farmacologia")?.Id,
                "Livros de Acupuntura" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Acupuntura")?.Id,
                "Livros de Anatomia" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Anatomia")?.Id,
                "Livros de Fisioterapia" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Fisioterapia")?.Id,
                "Livros de Fonoaudiologia" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Fonoaudiologia")?.Id,
                "Livros de Medicina" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Medicina")?.Id,
                "Livros de Nutrição" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Nutrição")?.Id,
                "Livros de Odontologia" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Odontologia")?.Id,
                "Beleza" => categoriesDb.FirstOrDefault(x => x.Name == "Beleza")?.Id,
                "Dicas do Lar" => categoriesDb.FirstOrDefault(x => x.Name == "Dicas do Lar")?.Id,
                "Livros de Moda" => categoriesDb.FirstOrDefault(x => x.Name == "Livros de Moda")?.Id,
                "Psicologia e Psicanálise" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia e Psicanálise")?.Id,
                "Ciências Cognitivas" => categoriesDb.FirstOrDefault(x => x.Name == "Ciências Cognitivas")?.Id,
                "Psicanálise" => categoriesDb.FirstOrDefault(x => x.Name == "Psicanálise")?.Id,
                "Psicologia do Desenvolvimento" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia do Desenvolvimento")?.Id,
                "Psicologia Educacional" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia Educacional")?.Id,
                "Psicologia Hospitalar" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia Hospitalar")?.Id,
                "Psicologia Organizacional" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia Organizacional")?.Id,
                "Psicologia Social" => categoriesDb.FirstOrDefault(x => x.Name == "Psicologia Social")?.Id,
                "Psicoterapia" => categoriesDb.FirstOrDefault(x => x.Name == "Psicoterapia")?.Id,
                "Afro-Brasileiras" => categoriesDb.FirstOrDefault(x => x.Name == "Afro-Brasileiras")?.Id,
                "Bíblia" => categoriesDb.FirstOrDefault(x => x.Name == "Bíblia")?.Id,
                "Budismo" => categoriesDb.FirstOrDefault(x => x.Name == "Budismo")?.Id,
                "Catolicismo" => categoriesDb.FirstOrDefault(x => x.Name == "Catolicismo")?.Id,
                "Cristianismo" => categoriesDb.FirstOrDefault(x => x.Name == "Cristianismo")?.Id,
                "Espiritismo" => categoriesDb.FirstOrDefault(x => x.Name == "Espiritismo")?.Id,
                "Islamismo" => categoriesDb.FirstOrDefault(x => x.Name == "Islamismo")?.Id,
                "Judaísmo" => categoriesDb.FirstOrDefault(x => x.Name == "Judaísmo")?.Id,
                "Seitas e Outras Religiões" => categoriesDb.FirstOrDefault(x => x.Name == "Seitas e Outras Religiões")?.Id,
                "Teologia" => categoriesDb.FirstOrDefault(x => x.Name == "Teologia")?.Id,
                "Revistas" => categoriesDb.FirstOrDefault(x => x.Name == "Revistas")?.Id,
                "Casa e Decoração" => categoriesDb.FirstOrDefault(x => x.Name == "Casa e Decoração")?.Id,
                "Ciência" => categoriesDb.FirstOrDefault(x => x.Name == "Ciência")?.Id,
                "Economia e Carreiras" => categoriesDb.FirstOrDefault(x => x.Name == "Economia e Carreiras")?.Id,
                "Esporte e Aventura" => categoriesDb.FirstOrDefault(x => x.Name == "Esporte e Aventura")?.Id,
                "Femininas" => categoriesDb.FirstOrDefault(x => x.Name == "Femininas")?.Id,
                "Masculinas" => categoriesDb.FirstOrDefault(x => x.Name == "Masculinas")?.Id,
                "Música" => categoriesDb.FirstOrDefault(x => x.Name == "Música")?.Id,
                "Teen" => categoriesDb.FirstOrDefault(x => x.Name == "Teen")?.Id,
                "Viagem e Ambiente" => categoriesDb.FirstOrDefault(x => x.Name == "Viagem e Ambiente")?.Id,
                "Sexo e Sexologia" => categoriesDb.FirstOrDefault(x => x.Name == "Sexo e Sexologia")?.Id,
                "Educação Sexual" => categoriesDb.FirstOrDefault(x => x.Name == "Educação Sexual")?.Id,
                "Sexo" => categoriesDb.FirstOrDefault(x => x.Name == "Sexo")?.Id,
                "Sexologia" => categoriesDb.FirstOrDefault(x => x.Name == "Sexologia")?.Id,
                "Viagens e Turismo" => categoriesDb.FirstOrDefault(x => x.Name == "Viagens e Turismo")?.Id,
                "Guias e Mapas" => categoriesDb.FirstOrDefault(x => x.Name == "Guias e Mapas")?.Id,
                "Turismo" => categoriesDb.FirstOrDefault(x => x.Name == "Turismo")?.Id,
                "Viagem e Aventura" => categoriesDb.FirstOrDefault(x => x.Name == "Viagem e Aventura")?.Id,
                "Videoaula" => categoriesDb.FirstOrDefault(x => x.Name == "Videoaula")?.Id,
                "Malas e Mochilas" => categoriesDb.FirstOrDefault(x => x.Name == "Malas e Mochilas")?.Id,
                "Acessórios de Viagem" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Viagem")?.Id,
                "Case e Pasta para Notebook" => categoriesDb.FirstOrDefault(x => x.Name == "Case e Pasta para Notebook")?.Id,
                "Conjuntos de Malas" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos de Malas")?.Id,
                "Frasqueira" => categoriesDb.FirstOrDefault(x => x.Name == "Frasqueira")?.Id,
                "Lancheiras, Estojos e Squeeze" => categoriesDb.FirstOrDefault(x => x.Name == "Lancheiras, Estojos e Squeeze")?.Id,
                "Bolsa Tote Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Bolsa Tote Infantil")?.Id,
                "Estojos" => categoriesDb.FirstOrDefault(x => x.Name == "Estojos")?.Id,
                "Lancheiras e Squeezes" => categoriesDb.FirstOrDefault(x => x.Name == "Lancheiras e Squeezes")?.Id,
                "Malas Avulsas" => categoriesDb.FirstOrDefault(x => x.Name == "Malas Avulsas")?.Id,
                "Bordo" => categoriesDb.FirstOrDefault(x => x.Name == "Bordo")?.Id,
                "Grande" => categoriesDb.FirstOrDefault(x => x.Name == "Grande")?.Id,
                "Média" => categoriesDb.FirstOrDefault(x => x.Name == "Média")?.Id,
                "Pequena" => categoriesDb.FirstOrDefault(x => x.Name == "Pequena")?.Id,
                "Sacolas de Viagem" => categoriesDb.FirstOrDefault(x => x.Name == "Sacolas de Viagem")?.Id,
                "Mochilas" => categoriesDb.FirstOrDefault(x => x.Name == "Mochilas")?.Id,
                "Mochila Casual" => categoriesDb.FirstOrDefault(x => x.Name == "Mochila Casual")?.Id,
                "Mochilas Escolares" => categoriesDb.FirstOrDefault(x => x.Name == "Mochilas Escolares")?.Id,
                "Mochilas para Notebook" => categoriesDb.FirstOrDefault(x => x.Name == "Mochilas para Notebook")?.Id,
                "Necessaire" => categoriesDb.FirstOrDefault(x => x.Name == "Necessaire")?.Id,
                "Pochetes" => categoriesDb.FirstOrDefault(x => x.Name == "Pochetes")?.Id,
                "Sacola Tote" => categoriesDb.FirstOrDefault(x => x.Name == "Sacola Tote")?.Id,
                "Marketplace" => categoriesDb.FirstOrDefault(x => x.Name == "Marketplace")?.Id,
                "Moda" => categoriesDb.FirstOrDefault(x => x.Name == "Moda")?.Id,
                "Acessórios de Moda" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Moda")?.Id,
                "Bolsas" => categoriesDb.FirstOrDefault(x => x.Name == "Bolsas")?.Id,
                "Bonés" => categoriesDb.FirstOrDefault(x => x.Name == "Bonés")?.Id,
                "Caixas e Estojos" => categoriesDb.FirstOrDefault(x => x.Name == "Caixas e Estojos")?.Id,
                "Carteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Carteiras")?.Id,
                "Guarda-chuvas" => categoriesDb.FirstOrDefault(x => x.Name == "Guarda-chuvas")?.Id,
                "Lenços e Cachecóis" => categoriesDb.FirstOrDefault(x => x.Name == "Lenços e Cachecóis")?.Id,
                "Meia-calça" => categoriesDb.FirstOrDefault(x => x.Name == "Meia-calça")?.Id,
                "Meias" => categoriesDb.FirstOrDefault(x => x.Name == "Meias")?.Id,
                "Gestante" => categoriesDb.FirstOrDefault(x => x.Name == "Gestante")?.Id,
                "Shorts e Bermudas" => categoriesDb.FirstOrDefault(x => x.Name == "Shorts e Bermudas")?.Id,
                "Moda Íntima Feminina" => categoriesDb.FirstOrDefault(x => x.Name == "Moda Íntima Feminina")?.Id,
                "Calcinhas" => categoriesDb.FirstOrDefault(x => x.Name == "Calcinhas")?.Id,
                "Camisetes" => categoriesDb.FirstOrDefault(x => x.Name == "Camisetes")?.Id,
                "Camisolas" => categoriesDb.FirstOrDefault(x => x.Name == "Camisolas")?.Id,
                "Cintas e Modeladores" => categoriesDb.FirstOrDefault(x => x.Name == "Cintas e Modeladores")?.Id,
                "Gestante e Amamentação" => categoriesDb.FirstOrDefault(x => x.Name == "Gestante e Amamentação")?.Id,
                "Robes" => categoriesDb.FirstOrDefault(x => x.Name == "Robes")?.Id,
                "Sutiãs" => categoriesDb.FirstOrDefault(x => x.Name == "Sutiãs")?.Id,
                "Moda Íntima Masculina" => categoriesDb.FirstOrDefault(x => x.Name == "Moda Íntima Masculina")?.Id,
                "Cueca Boxer e Sunga" => categoriesDb.FirstOrDefault(x => x.Name == "Cueca Boxer e Sunga")?.Id,
                "Cueca Samba-canção" => categoriesDb.FirstOrDefault(x => x.Name == "Cueca Samba-canção")?.Id,
                "Cueca Slip" => categoriesDb.FirstOrDefault(x => x.Name == "Cueca Slip")?.Id,
                "Moda Praia" => categoriesDb.FirstOrDefault(x => x.Name == "Moda Praia")?.Id,
                "Biquinis" => categoriesDb.FirstOrDefault(x => x.Name == "Biquinis")?.Id,
                "Maiôs" => categoriesDb.FirstOrDefault(x => x.Name == "Maiôs")?.Id,
                "Ótica" => categoriesDb.FirstOrDefault(x => x.Name == "Ótica")?.Id,
                "Óculos de Sol" => categoriesDb.FirstOrDefault(x => x.Name == "Óculos de Sol")?.Id,
                "Roupas Femininas" => categoriesDb.FirstOrDefault(x => x.Name == "Roupas Femininas")?.Id,
                "Blusas e Camisetas" => categoriesDb.FirstOrDefault(x => x.Name == "Blusas e Camisetas")?.Id,
                "Boleros e Coletes" => categoriesDb.FirstOrDefault(x => x.Name == "Boleros e Coletes")?.Id,
                "Calças" => categoriesDb.FirstOrDefault(x => x.Name == "Calças")?.Id,
                "Camisas" => categoriesDb.FirstOrDefault(x => x.Name == "Camisas")?.Id,
                "Cardigãs e Suéteres" => categoriesDb.FirstOrDefault(x => x.Name == "Cardigãs e Suéteres")?.Id,
                "Casacos e Jaquetas" => categoriesDb.FirstOrDefault(x => x.Name == "Casacos e Jaquetas")?.Id,
                "Saias" => categoriesDb.FirstOrDefault(x => x.Name == "Saias")?.Id,
                "Terno" => categoriesDb.FirstOrDefault(x => x.Name == "Terno")?.Id,
                "Vestidos" => categoriesDb.FirstOrDefault(x => x.Name == "Vestidos")?.Id,
                "Roupas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Roupas Infantis")?.Id,
                "Blusinhas e Camisetas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Blusinhas e Camisetas Infantis")?.Id,
                "Camisas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Camisas Infantis")?.Id,
                "Casacos e Coletes Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Casacos e Coletes Infantis")?.Id,
                "Moda Íntima Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Moda Íntima Infantil")?.Id,
                "Pijamas Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Pijamas Infantis")?.Id,
                "Roupas Masculinas" => categoriesDb.FirstOrDefault(x => x.Name == "Roupas Masculinas")?.Id,
                "Camisas Polo" => categoriesDb.FirstOrDefault(x => x.Name == "Camisas Polo")?.Id,
                "Camisetas" => categoriesDb.FirstOrDefault(x => x.Name == "Camisetas")?.Id,
                "Móveis" => categoriesDb.FirstOrDefault(x => x.Name == "Móveis")?.Id,
                "Área de Serviço" => categoriesDb.FirstOrDefault(x => x.Name == "Área de Serviço")?.Id,
                "Armários Multiuso" => categoriesDb.FirstOrDefault(x => x.Name == "Armários Multiuso")?.Id,
                "Conjuntos para Área de Serviço" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos para Área de Serviço")?.Id,
                "Tábua de Passar com Móvel" => categoriesDb.FirstOrDefault(x => x.Name == "Tábua de Passar com Móvel")?.Id,
                "Bar" => categoriesDb.FirstOrDefault(x => x.Name == "Bar")?.Id,
                "Bancos e Banquetas" => categoriesDb.FirstOrDefault(x => x.Name == "Bancos e Banquetas")?.Id,
                "Barzinho" => categoriesDb.FirstOrDefault(x => x.Name == "Barzinho")?.Id,
                "Mesa para Bar" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa para Bar")?.Id,
                "Colchões" => categoriesDb.FirstOrDefault(x => x.Name == "Colchões")?.Id,
                "Base Cama Box Casal" => categoriesDb.FirstOrDefault(x => x.Name == "Base Cama Box Casal")?.Id,
                "Base Cama Box King" => categoriesDb.FirstOrDefault(x => x.Name == "Base Cama Box King")?.Id,
                "Base Cama Box Queen" => categoriesDb.FirstOrDefault(x => x.Name == "Base Cama Box Queen")?.Id,
                "Base Cama Box Solteiro" => categoriesDb.FirstOrDefault(x => x.Name == "Base Cama Box Solteiro")?.Id,
                "Base Cama Box Super King" => categoriesDb.FirstOrDefault(x => x.Name == "Base Cama Box Super King")?.Id,
                "Cama Box  King" => categoriesDb.FirstOrDefault(x => x.Name == "Cama Box  King")?.Id,
                "Cama Box  Queen" => categoriesDb.FirstOrDefault(x => x.Name == "Cama Box  Queen")?.Id,
                "Cama Box  Solteiro" => categoriesDb.FirstOrDefault(x => x.Name == "Cama Box  Solteiro")?.Id,
                "Cama Box Casal" => categoriesDb.FirstOrDefault(x => x.Name == "Cama Box Casal")?.Id,
                "Colchão de Casal" => categoriesDb.FirstOrDefault(x => x.Name == "Colchão de Casal")?.Id,
                "Colchão de Solteiro" => categoriesDb.FirstOrDefault(x => x.Name == "Colchão de Solteiro")?.Id,
                "Colchão Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Colchão Infantil")?.Id,
                "Colchão King" => categoriesDb.FirstOrDefault(x => x.Name == "Colchão King")?.Id,
                "Colchão Queen" => categoriesDb.FirstOrDefault(x => x.Name == "Colchão Queen")?.Id,
                "Colchão Super King" => categoriesDb.FirstOrDefault(x => x.Name == "Colchão Super King")?.Id,
                "Cozinhas" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinhas")?.Id,
                "Balcões e Fruteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Balcões e Fruteiras")?.Id,
                "Conjuntos de Mesas e Cadeiras de Cozinha" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos de Mesas e Cadeiras de Cozinha")?.Id,
                "Cozinha Compacta" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinha Compacta")?.Id,
                "Cozinha Completa" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinha Completa")?.Id,
                "Cozinha Modulada" => categoriesDb.FirstOrDefault(x => x.Name == "Cozinha Modulada")?.Id,
                "Mesas" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas")?.Id,
                "Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Escritório")?.Id,
                "Cadeira Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeira Gamer")?.Id,
                "Cadeiras de Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeiras de Escritório")?.Id,
                "Complementos para Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Complementos para Escritório")?.Id,
                "Conjuntos para Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos para Escritório")?.Id,
                "Escrivaninhas" => categoriesDb.FirstOrDefault(x => x.Name == "Escrivaninhas")?.Id,
                "Estantes e Armários" => categoriesDb.FirstOrDefault(x => x.Name == "Estantes e Armários")?.Id,
                "Gaveteiros" => categoriesDb.FirstOrDefault(x => x.Name == "Gaveteiros")?.Id,
                "Mesa de Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa de Escritório")?.Id,
                "Mesa Gamer" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa Gamer")?.Id,
                "Jardim e Lazer" => categoriesDb.FirstOrDefault(x => x.Name == "Jardim e Lazer")?.Id,
                "Acessórios para Jardim" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Jardim")?.Id,
                "Bancos de Jardim" => categoriesDb.FirstOrDefault(x => x.Name == "Bancos de Jardim")?.Id,
                "Cadeiras para Áreas Externas" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeiras para Áreas Externas")?.Id,
                "Carrinho para Churrasco" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinho para Churrasco")?.Id,
                "Chaise e Espreguiçadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Chaise e Espreguiçadeiras")?.Id,
                "Conjuntos para Jardim e Lazer" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos para Jardim e Lazer")?.Id,
                "Mesas para Áreas Externas" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas para Áreas Externas")?.Id,
                "Poltronas para Áreas Externas" => categoriesDb.FirstOrDefault(x => x.Name == "Poltronas para Áreas Externas")?.Id,
                "Sofá para Área Externa" => categoriesDb.FirstOrDefault(x => x.Name == "Sofá para Área Externa")?.Id,
                "Quarto Infantil e Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Quarto Infantil e Bebê")?.Id,
                "Ambiente Completo Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Ambiente Completo Infantil")?.Id,
                "Berços" => categoriesDb.FirstOrDefault(x => x.Name == "Berços")?.Id,
                "Cadeira e Mesa Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeira e Mesa Infantil")?.Id,
                "Cama Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Cama Infantil")?.Id,
                "Cômoda Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Cômoda Infantil")?.Id,
                "Complementos Infantis" => categoriesDb.FirstOrDefault(x => x.Name == "Complementos Infantis")?.Id,
                "Estante Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Estante Infantil")?.Id,
                "Guarda-roupa e Roupeiro Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Guarda-roupa e Roupeiro Infantil")?.Id,
                "Mesa de Cabeceira Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa de Cabeceira Infantil")?.Id,
                "Nicho e Prateleira Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Nicho e Prateleira Infantil")?.Id,
                "Penteadeira Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Penteadeira Infantil")?.Id,
                "Poltrona de Amamentação" => categoriesDb.FirstOrDefault(x => x.Name == "Poltrona de Amamentação")?.Id,
                "Quartos" => categoriesDb.FirstOrDefault(x => x.Name == "Quartos")?.Id,
                "Ambiente Completo Dormitório" => categoriesDb.FirstOrDefault(x => x.Name == "Ambiente Completo Dormitório")?.Id,
                "Beliche e Treliche" => categoriesDb.FirstOrDefault(x => x.Name == "Beliche e Treliche")?.Id,
                "Cabeceiras" => categoriesDb.FirstOrDefault(x => x.Name == "Cabeceiras")?.Id,
                "Calçadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Calçadeiras")?.Id,
                "Camas" => categoriesDb.FirstOrDefault(x => x.Name == "Camas")?.Id,
                "Cômodas" => categoriesDb.FirstOrDefault(x => x.Name == "Cômodas")?.Id,
                "Guarda-roupas e Roupeiros" => categoriesDb.FirstOrDefault(x => x.Name == "Guarda-roupas e Roupeiros")?.Id,
                "Guarda-roupas Modulados" => categoriesDb.FirstOrDefault(x => x.Name == "Guarda-roupas Modulados")?.Id,
                "Mesa de Cabeceira" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa de Cabeceira")?.Id,
                "Penteadeira e Toucador" => categoriesDb.FirstOrDefault(x => x.Name == "Penteadeira e Toucador")?.Id,
                "Sapateiras" => categoriesDb.FirstOrDefault(x => x.Name == "Sapateiras")?.Id,
                "Sala de Estar" => categoriesDb.FirstOrDefault(x => x.Name == "Sala de Estar")?.Id,
                "Aparadores" => categoriesDb.FirstOrDefault(x => x.Name == "Aparadores")?.Id,
                "Conjuntos para Sala de Estar" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos para Sala de Estar")?.Id,
                "Estantes" => categoriesDb.FirstOrDefault(x => x.Name == "Estantes")?.Id,
                "Esteira para Braço do Sofá" => categoriesDb.FirstOrDefault(x => x.Name == "Esteira para Braço do Sofá")?.Id,
                "Mesas de Centro" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas de Centro")?.Id,
                "Mesas Laterais" => categoriesDb.FirstOrDefault(x => x.Name == "Mesas Laterais")?.Id,
                "Poltronas" => categoriesDb.FirstOrDefault(x => x.Name == "Poltronas")?.Id,
                "Racks e Painéis" => categoriesDb.FirstOrDefault(x => x.Name == "Racks e Painéis")?.Id,
                "Sofás-camas" => categoriesDb.FirstOrDefault(x => x.Name == "Sofás-camas")?.Id,
                "Sofás" => categoriesDb.FirstOrDefault(x => x.Name == "Sofás")?.Id,
                "Sala de Jantar" => categoriesDb.FirstOrDefault(x => x.Name == "Sala de Jantar")?.Id,
                "Buffets" => categoriesDb.FirstOrDefault(x => x.Name == "Buffets")?.Id,
                "Cadeira de Jantar" => categoriesDb.FirstOrDefault(x => x.Name == "Cadeira de Jantar")?.Id,
                "Conjuntos de Mesas e Cadeiras de Jantar" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos de Mesas e Cadeiras de Jantar")?.Id,
                "Cristaleiras" => categoriesDb.FirstOrDefault(x => x.Name == "Cristaleiras")?.Id,
                "Mesa de Jantar" => categoriesDb.FirstOrDefault(x => x.Name == "Mesa de Jantar")?.Id,
                "Natal" => categoriesDb.FirstOrDefault(x => x.Name == "Natal")?.Id,
                "Árvores de Natal" => categoriesDb.FirstOrDefault(x => x.Name == "Árvores de Natal")?.Id,
                "Tradicionais" => categoriesDb.FirstOrDefault(x => x.Name == "Tradicionais")?.Id,
                "Bolas de Natal" => categoriesDb.FirstOrDefault(x => x.Name == "Bolas de Natal")?.Id,
                "Grandes" => categoriesDb.FirstOrDefault(x => x.Name == "Grandes")?.Id,
                "Médias" => categoriesDb.FirstOrDefault(x => x.Name == "Médias")?.Id,
                "Enfeites e Decoração" => categoriesDb.FirstOrDefault(x => x.Name == "Enfeites e Decoração")?.Id,
                "Enfeites" => categoriesDb.FirstOrDefault(x => x.Name == "Enfeites")?.Id,
                "Guirlanda" => categoriesDb.FirstOrDefault(x => x.Name == "Guirlanda")?.Id,
                "Objetos Animados" => categoriesDb.FirstOrDefault(x => x.Name == "Objetos Animados")?.Id,
                "Velas e Castiçais" => categoriesDb.FirstOrDefault(x => x.Name == "Velas e Castiçais")?.Id,
                "Iluminação de Natal" => categoriesDb.FirstOrDefault(x => x.Name == "Iluminação de Natal")?.Id,
                "Papelaria" => categoriesDb.FirstOrDefault(x => x.Name == "Papelaria")?.Id,
                "Álbuns e Presentes" => categoriesDb.FirstOrDefault(x => x.Name == "Álbuns e Presentes")?.Id,
                "Álbuns" => categoriesDb.FirstOrDefault(x => x.Name == "Álbuns")?.Id,
                "Cartões Comemorativos" => categoriesDb.FirstOrDefault(x => x.Name == "Cartões Comemorativos")?.Id,
                "Apresentação e Equipamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Apresentação e Equipamentos")?.Id,
                "Apresentação" => categoriesDb.FirstOrDefault(x => x.Name == "Apresentação")?.Id,
                "Equipamentos" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos")?.Id,
                "Arte e Pintura" => categoriesDb.FirstOrDefault(x => x.Name == "Arte e Pintura")?.Id,
                "Acessórios para Arte e Pintura" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Arte e Pintura")?.Id,
                "Embalagens, Caixas e Sacos" => categoriesDb.FirstOrDefault(x => x.Name == "Embalagens, Caixas e Sacos")?.Id,
                "Material para Artesanato" => categoriesDb.FirstOrDefault(x => x.Name == "Material para Artesanato")?.Id,
                "Pintura, Tintas e Pincéis" => categoriesDb.FirstOrDefault(x => x.Name == "Pintura, Tintas e Pincéis")?.Id,
                "Calculadora" => categoriesDb.FirstOrDefault(x => x.Name == "Calculadora")?.Id,
                "Calculadora Básica" => categoriesDb.FirstOrDefault(x => x.Name == "Calculadora Básica")?.Id,
                "Calculadora Científica" => categoriesDb.FirstOrDefault(x => x.Name == "Calculadora Científica")?.Id,
                "Calculadora Financeira e Negócios" => categoriesDb.FirstOrDefault(x => x.Name == "Calculadora Financeira e Negócios")?.Id,
                "Calculadora Gráfica" => categoriesDb.FirstOrDefault(x => x.Name == "Calculadora Gráfica")?.Id,
                "Calendários" => categoriesDb.FirstOrDefault(x => x.Name == "Calendários")?.Id,
                "Envelopes, Etiquetas, Formulários" => categoriesDb.FirstOrDefault(x => x.Name == "Envelopes, Etiquetas, Formulários")?.Id,
                "Envelopes" => categoriesDb.FirstOrDefault(x => x.Name == "Envelopes")?.Id,
                "Etiquetas" => categoriesDb.FirstOrDefault(x => x.Name == "Etiquetas")?.Id,
                "Escolar e Escritório" => categoriesDb.FirstOrDefault(x => x.Name == "Escolar e Escritório")?.Id,
                "Agendas e Índices" => categoriesDb.FirstOrDefault(x => x.Name == "Agendas e Índices")?.Id,
                "Apagadores e Limpadores" => categoriesDb.FirstOrDefault(x => x.Name == "Apagadores e Limpadores")?.Id,
                "Apontadores" => categoriesDb.FirstOrDefault(x => x.Name == "Apontadores")?.Id,
                "Borrachas" => categoriesDb.FirstOrDefault(x => x.Name == "Borrachas")?.Id,
                "Cadernetas" => categoriesDb.FirstOrDefault(x => x.Name == "Cadernetas")?.Id,
                "Cadernos" => categoriesDb.FirstOrDefault(x => x.Name == "Cadernos")?.Id,
                "Colchetes, Alfinetes, Elásticos e Clips" => categoriesDb.FirstOrDefault(x => x.Name == "Colchetes, Alfinetes, Elásticos e Clips")?.Id,
                "Compassos e Conjunto Desenho" => categoriesDb.FirstOrDefault(x => x.Name == "Compassos e Conjunto Desenho")?.Id,
                "Diários, Livros Ata e Fiscal" => categoriesDb.FirstOrDefault(x => x.Name == "Diários, Livros Ata e Fiscal")?.Id,
                "Esquadros e Escalímetros" => categoriesDb.FirstOrDefault(x => x.Name == "Esquadros e Escalímetros")?.Id,
                "Fichários" => categoriesDb.FirstOrDefault(x => x.Name == "Fichários")?.Id,
                "Fita Adesiva" => categoriesDb.FirstOrDefault(x => x.Name == "Fita Adesiva")?.Id,
                "Giz de Cera" => categoriesDb.FirstOrDefault(x => x.Name == "Giz de Cera")?.Id,
                "Globos Terrestre" => categoriesDb.FirstOrDefault(x => x.Name == "Globos Terrestre")?.Id,
                "Grampeadores e Grampos" => categoriesDb.FirstOrDefault(x => x.Name == "Grampeadores e Grampos")?.Id,
                "Lápis de Cor" => categoriesDb.FirstOrDefault(x => x.Name == "Lápis de Cor")?.Id,
                "Perfuradores de Papel" => categoriesDb.FirstOrDefault(x => x.Name == "Perfuradores de Papel")?.Id,
                "Pranchetas" => categoriesDb.FirstOrDefault(x => x.Name == "Pranchetas")?.Id,
                "Réguas, Trenas e Transferidores" => categoriesDb.FirstOrDefault(x => x.Name == "Réguas, Trenas e Transferidores")?.Id,
                "Suporte Papelaria" => categoriesDb.FirstOrDefault(x => x.Name == "Suporte Papelaria")?.Id,
                "Tesouras" => categoriesDb.FirstOrDefault(x => x.Name == "Tesouras")?.Id,
                "Escrita e Corretivos" => categoriesDb.FirstOrDefault(x => x.Name == "Escrita e Corretivos")?.Id,
                "Canetas Luxo" => categoriesDb.FirstOrDefault(x => x.Name == "Canetas Luxo")?.Id,
                "Canetas" => categoriesDb.FirstOrDefault(x => x.Name == "Canetas")?.Id,
                "Corretivos" => categoriesDb.FirstOrDefault(x => x.Name == "Corretivos")?.Id,
                "Lápis, Lapiseiras e Grafites" => categoriesDb.FirstOrDefault(x => x.Name == "Lápis, Lapiseiras e Grafites")?.Id,
                "Marca Texto" => categoriesDb.FirstOrDefault(x => x.Name == "Marca Texto")?.Id,
                "Pincéis" => categoriesDb.FirstOrDefault(x => x.Name == "Pincéis")?.Id,
                "Mídias e Drives" => categoriesDb.FirstOrDefault(x => x.Name == "Mídias e Drives")?.Id,
                "Porta CD e DVD" => categoriesDb.FirstOrDefault(x => x.Name == "Porta CD e DVD")?.Id,
                "Papéis, Pastas e Arquivos" => categoriesDb.FirstOrDefault(x => x.Name == "Papéis, Pastas e Arquivos")?.Id,
                "Arquivo e Caixas" => categoriesDb.FirstOrDefault(x => x.Name == "Arquivo e Caixas")?.Id,
                "Cartões de Visita" => categoriesDb.FirstOrDefault(x => x.Name == "Cartões de Visita")?.Id,
                "Encadernação" => categoriesDb.FirstOrDefault(x => x.Name == "Encadernação")?.Id,
                "Papel e Blocos" => categoriesDb.FirstOrDefault(x => x.Name == "Papel e Blocos")?.Id,
                "Pastas" => categoriesDb.FirstOrDefault(x => x.Name == "Pastas")?.Id,
                "Tradutores Eletrônicos" => categoriesDb.FirstOrDefault(x => x.Name == "Tradutores Eletrônicos")?.Id,
                "Perfumaria e Cosméticos" => categoriesDb.FirstOrDefault(x => x.Name == "Perfumaria e Cosméticos")?.Id,
                "Barba e Depilação" => categoriesDb.FirstOrDefault(x => x.Name == "Barba e Depilação")?.Id,
                "Barbeadores Descartáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Barbeadores Descartáveis")?.Id,
                "Depilação" => categoriesDb.FirstOrDefault(x => x.Name == "Depilação")?.Id,
                "Lâminas para Barbear" => categoriesDb.FirstOrDefault(x => x.Name == "Lâminas para Barbear")?.Id,
                "Produtos para Barba" => categoriesDb.FirstOrDefault(x => x.Name == "Produtos para Barba")?.Id,
                "Cabelos" => categoriesDb.FirstOrDefault(x => x.Name == "Cabelos")?.Id,
                "Acessórios para Cabeleireiros" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Cabeleireiros")?.Id,
                "Ampolas" => categoriesDb.FirstOrDefault(x => x.Name == "Ampolas")?.Id,
                "Condicionador" => categoriesDb.FirstOrDefault(x => x.Name == "Condicionador")?.Id,
                "Creme de Tratamento" => categoriesDb.FirstOrDefault(x => x.Name == "Creme de Tratamento")?.Id,
                "Creme sem Enxague" => categoriesDb.FirstOrDefault(x => x.Name == "Creme sem Enxague")?.Id,
                "Finalizador" => categoriesDb.FirstOrDefault(x => x.Name == "Finalizador")?.Id,
                "Gel e Pomada para Cabelo" => categoriesDb.FirstOrDefault(x => x.Name == "Gel e Pomada para Cabelo")?.Id,
                "Kits para Cabelos" => categoriesDb.FirstOrDefault(x => x.Name == "Kits para Cabelos")?.Id,
                "Máscara" => categoriesDb.FirstOrDefault(x => x.Name == "Máscara")?.Id,
                "Óleo e Tônico Capilar" => categoriesDb.FirstOrDefault(x => x.Name == "Óleo e Tônico Capilar")?.Id,
                "Pulverizador Capilar" => categoriesDb.FirstOrDefault(x => x.Name == "Pulverizador Capilar")?.Id,
                "Shampoo" => categoriesDb.FirstOrDefault(x => x.Name == "Shampoo")?.Id,
                "Tinta para Cabelo" => categoriesDb.FirstOrDefault(x => x.Name == "Tinta para Cabelo")?.Id,
                "Tratamento para Cabelos" => categoriesDb.FirstOrDefault(x => x.Name == "Tratamento para Cabelos")?.Id,
                "Corpo e Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Corpo e Banho")?.Id,
                "Desodorante" => categoriesDb.FirstOrDefault(x => x.Name == "Desodorante")?.Id,
                "Sabonete" => categoriesDb.FirstOrDefault(x => x.Name == "Sabonete")?.Id,
                "Sais e Espumas para Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Sais e Espumas para Banho")?.Id,
                "Antisséptico Bucal" => categoriesDb.FirstOrDefault(x => x.Name == "Antisséptico Bucal")?.Id,
                "Escova de Dente" => categoriesDb.FirstOrDefault(x => x.Name == "Escova de Dente")?.Id,
                "Escova Elétrica" => categoriesDb.FirstOrDefault(x => x.Name == "Escova Elétrica")?.Id,
                "Fio Dental" => categoriesDb.FirstOrDefault(x => x.Name == "Fio Dental")?.Id,
                "Irrigador Oral e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Irrigador Oral e Acessórios")?.Id,
                "Pasta de Dente" => categoriesDb.FirstOrDefault(x => x.Name == "Pasta de Dente")?.Id,
                "Higiene Íntima" => categoriesDb.FirstOrDefault(x => x.Name == "Higiene Íntima")?.Id,
                "Absorvente" => categoriesDb.FirstOrDefault(x => x.Name == "Absorvente")?.Id,
                "Fralda Adulto" => categoriesDb.FirstOrDefault(x => x.Name == "Fralda Adulto")?.Id,
                "Lenço e Toalha Umedecida" => categoriesDb.FirstOrDefault(x => x.Name == "Lenço e Toalha Umedecida")?.Id,
                "Papel Higiênico" => categoriesDb.FirstOrDefault(x => x.Name == "Papel Higiênico")?.Id,
                "Protetor Diário" => categoriesDb.FirstOrDefault(x => x.Name == "Protetor Diário")?.Id,
                "Roupa Íntima Descartável" => categoriesDb.FirstOrDefault(x => x.Name == "Roupa Íntima Descartável")?.Id,
                "Sabonete Íntimo" => categoriesDb.FirstOrDefault(x => x.Name == "Sabonete Íntimo")?.Id,
                "Preservativos" => categoriesDb.FirstOrDefault(x => x.Name == "Preservativos")?.Id,
                "Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,
                "Base" => categoriesDb.FirstOrDefault(x => x.Name == "Base")?.Id,
                "Batom" => categoriesDb.FirstOrDefault(x => x.Name == "Batom")?.Id,
                "Blush" => categoriesDb.FirstOrDefault(x => x.Name == "Blush")?.Id,
                "Corretivo" => categoriesDb.FirstOrDefault(x => x.Name == "Corretivo")?.Id,
                "Delineador" => categoriesDb.FirstOrDefault(x => x.Name == "Delineador")?.Id,
                "Demaquilante" => categoriesDb.FirstOrDefault(x => x.Name == "Demaquilante")?.Id,
                "Esponja" => categoriesDb.FirstOrDefault(x => x.Name == "Esponja")?.Id,
                "Iluminador" => categoriesDb.FirstOrDefault(x => x.Name == "Iluminador")?.Id,
                "Kits Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Kits Maquiagem")?.Id,
                "Maletas" => categoriesDb.FirstOrDefault(x => x.Name == "Maletas")?.Id,
                "Perfumes" => categoriesDb.FirstOrDefault(x => x.Name == "Perfumes")?.Id,
                "Feminino" => categoriesDb.FirstOrDefault(x => x.Name == "Feminino")?.Id,
                "Masculino" => categoriesDb.FirstOrDefault(x => x.Name == "Masculino")?.Id,
                "Unissex" => categoriesDb.FirstOrDefault(x => x.Name == "Unissex")?.Id,
                "Presentes" => categoriesDb.FirstOrDefault(x => x.Name == "Presentes")?.Id,
                "Tratamento e Dermocosméticos" => categoriesDb.FirstOrDefault(x => x.Name == "Tratamento e Dermocosméticos")?.Id,
                "Anti-idade e Antirrugas" => categoriesDb.FirstOrDefault(x => x.Name == "Anti-idade e Antirrugas")?.Id,
                "Antiacne" => categoriesDb.FirstOrDefault(x => x.Name == "Antiacne")?.Id,
                "Anticelulite" => categoriesDb.FirstOrDefault(x => x.Name == "Anticelulite")?.Id,
                "Bronzeador" => categoriesDb.FirstOrDefault(x => x.Name == "Bronzeador")?.Id,
                "Esfoliante Corporal" => categoriesDb.FirstOrDefault(x => x.Name == "Esfoliante Corporal")?.Id,
                "Esfoliante Facial" => categoriesDb.FirstOrDefault(x => x.Name == "Esfoliante Facial")?.Id,
                "Hidratante Corporal" => categoriesDb.FirstOrDefault(x => x.Name == "Hidratante Corporal")?.Id,
                "Hidratante Facial" => categoriesDb.FirstOrDefault(x => x.Name == "Hidratante Facial")?.Id,
                "Hidratante para as Mãos" => categoriesDb.FirstOrDefault(x => x.Name == "Hidratante para as Mãos")?.Id,
                "Hidratante para os Pés" => categoriesDb.FirstOrDefault(x => x.Name == "Hidratante para os Pés")?.Id,
                "Limpeza Facial" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza Facial")?.Id,
                "Óleo Corporal" => categoriesDb.FirstOrDefault(x => x.Name == "Óleo Corporal")?.Id,
                "Protetor Labial" => categoriesDb.FirstOrDefault(x => x.Name == "Protetor Labial")?.Id,
                "Protetor Solar" => categoriesDb.FirstOrDefault(x => x.Name == "Protetor Solar")?.Id,
                "Unha" => categoriesDb.FirstOrDefault(x => x.Name == "Unha")?.Id,
                "Esmaltes" => categoriesDb.FirstOrDefault(x => x.Name == "Esmaltes")?.Id,
                "Kit Manicure" => categoriesDb.FirstOrDefault(x => x.Name == "Kit Manicure")?.Id,
                "Tratamento para Unhas" => categoriesDb.FirstOrDefault(x => x.Name == "Tratamento para Unhas")?.Id,
                "Pet Shop" => categoriesDb.FirstOrDefault(x => x.Name == "Pet Shop")?.Id,
                "Cachorro" => categoriesDb.FirstOrDefault(x => x.Name == "Cachorro")?.Id,
                "Camas e Almofadas" => categoriesDb.FirstOrDefault(x => x.Name == "Camas e Almofadas")?.Id,
                "Higiene e Beleza" => categoriesDb.FirstOrDefault(x => x.Name == "Higiene e Beleza")?.Id,
                "Tapetes Higiênicos" => categoriesDb.FirstOrDefault(x => x.Name == "Tapetes Higiênicos")?.Id,
                "Equipamentos para Pet Shop" => categoriesDb.FirstOrDefault(x => x.Name == "Equipamentos para Pet Shop")?.Id,
                "Máquinas de Tosa e Lâminas" => categoriesDb.FirstOrDefault(x => x.Name == "Máquinas de Tosa e Lâminas")?.Id,
                "Areias e Granulados" => categoriesDb.FirstOrDefault(x => x.Name == "Areias e Granulados")?.Id,
                "Limpeza de Ambientes" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza de Ambientes")?.Id,
                "Desinfetantes para Pets" => categoriesDb.FirstOrDefault(x => x.Name == "Desinfetantes para Pets")?.Id,
                "Limpadores para Pets" => categoriesDb.FirstOrDefault(x => x.Name == "Limpadores para Pets")?.Id,
                "Produtos de Limpeza" => categoriesDb.FirstOrDefault(x => x.Name == "Produtos de Limpeza")?.Id,
                "Acessórios de Limpeza" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Limpeza")?.Id,
                "Luvas para Limpeza" => categoriesDb.FirstOrDefault(x => x.Name == "Luvas para Limpeza")?.Id,
                "MOP" => categoriesDb.FirstOrDefault(x => x.Name == "MOP")?.Id,
                "Outros acessórios para Limpeza" => categoriesDb.FirstOrDefault(x => x.Name == "Outros acessórios para Limpeza")?.Id,
                "Panos e Flanelas" => categoriesDb.FirstOrDefault(x => x.Name == "Panos e Flanelas")?.Id,
                "Rodos" => categoriesDb.FirstOrDefault(x => x.Name == "Rodos")?.Id,
                "Vassouras e Pás" => categoriesDb.FirstOrDefault(x => x.Name == "Vassouras e Pás")?.Id,
                "Aromatizador" => categoriesDb.FirstOrDefault(x => x.Name == "Aromatizador")?.Id,
                "Aromatizador de Ambiente" => categoriesDb.FirstOrDefault(x => x.Name == "Aromatizador de Ambiente")?.Id,
                "Limpeza da Casa" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza da Casa")?.Id,
                "Abrasivos" => categoriesDb.FirstOrDefault(x => x.Name == "Abrasivos")?.Id,
                "Álcool, Alvejantes e Cia." => categoriesDb.FirstOrDefault(x => x.Name == "Álcool, Alvejantes e Cia.")?.Id,
                "Aromatizantes" => categoriesDb.FirstOrDefault(x => x.Name == "Aromatizantes")?.Id,
                "Cloro Gel" => categoriesDb.FirstOrDefault(x => x.Name == "Cloro Gel")?.Id,
                "Desengordurantes" => categoriesDb.FirstOrDefault(x => x.Name == "Desengordurantes")?.Id,
                "Desinfetantes" => categoriesDb.FirstOrDefault(x => x.Name == "Desinfetantes")?.Id,
                "Desodorizadores" => categoriesDb.FirstOrDefault(x => x.Name == "Desodorizadores")?.Id,
                "Detergentes" => categoriesDb.FirstOrDefault(x => x.Name == "Detergentes")?.Id,
                "Dispenseres" => categoriesDb.FirstOrDefault(x => x.Name == "Dispenseres")?.Id,
                "Multiuso e Cia." => categoriesDb.FirstOrDefault(x => x.Name == "Multiuso e Cia.")?.Id,
                "Limpeza de Roupa" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza de Roupa")?.Id,
                "Amaciantes" => categoriesDb.FirstOrDefault(x => x.Name == "Amaciantes")?.Id,
                "Lava Roupas" => categoriesDb.FirstOrDefault(x => x.Name == "Lava Roupas")?.Id,
                "Tira Manchas" => categoriesDb.FirstOrDefault(x => x.Name == "Tira Manchas")?.Id,
                "Relógios" => categoriesDb.FirstOrDefault(x => x.Name == "Relógios")?.Id,
                "Relógio Anadigi" => categoriesDb.FirstOrDefault(x => x.Name == "Relógio Anadigi")?.Id,
                "Relógio Analógico" => categoriesDb.FirstOrDefault(x => x.Name == "Relógio Analógico")?.Id,
                "Relógio Digital" => categoriesDb.FirstOrDefault(x => x.Name == "Relógio Digital")?.Id,
                "Tablets" => categoriesDb.FirstOrDefault(x => x.Name == "Tablets")?.Id,
                "Acessórios Tablet" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios Tablet")?.Id,
                "Adaptadores" => categoriesDb.FirstOrDefault(x => x.Name == "Adaptadores")?.Id,
                "Capas" => categoriesDb.FirstOrDefault(x => x.Name == "Capas")?.Id,
                "Películas" => categoriesDb.FirstOrDefault(x => x.Name == "Películas")?.Id,
                "Suportes" => categoriesDb.FirstOrDefault(x => x.Name == "Suportes")?.Id,
                "Tablet" => categoriesDb.FirstOrDefault(x => x.Name == "Tablet")?.Id,
                "iPad" => categoriesDb.FirstOrDefault(x => x.Name == "iPad")?.Id,
                "Tablet Android" => categoriesDb.FirstOrDefault(x => x.Name == "Tablet Android")?.Id,
                "Tablet Infantil" => categoriesDb.FirstOrDefault(x => x.Name == "Tablet Infantil")?.Id,
                "Tablet Windows" => categoriesDb.FirstOrDefault(x => x.Name == "Tablet Windows")?.Id,
                "Telefones e Celulares" => categoriesDb.FirstOrDefault(x => x.Name == "Telefones e Celulares")?.Id,
                "Celulares" => categoriesDb.FirstOrDefault(x => x.Name == "Celulares")?.Id,
                "Chips GSM" => categoriesDb.FirstOrDefault(x => x.Name == "Chips GSM")?.Id,
                "Smartphones" => categoriesDb.FirstOrDefault(x => x.Name == "Smartphones")?.Id,
                "Android" => categoriesDb.FirstOrDefault(x => x.Name == "Android")?.Id,
                "iPhone" => categoriesDb.FirstOrDefault(x => x.Name == "iPhone")?.Id,
                "Telefonia Fixa" => categoriesDb.FirstOrDefault(x => x.Name == "Telefonia Fixa")?.Id,
                "Celular Fixo" => categoriesDb.FirstOrDefault(x => x.Name == "Celular Fixo")?.Id,
                "Fax" => categoriesDb.FirstOrDefault(x => x.Name == "Fax")?.Id,
                "Identificadores de Chamada" => categoriesDb.FirstOrDefault(x => x.Name == "Identificadores de Chamada")?.Id,
                "PABX" => categoriesDb.FirstOrDefault(x => x.Name == "PABX")?.Id,
                "Rádio Comunicador" => categoriesDb.FirstOrDefault(x => x.Name == "Rádio Comunicador")?.Id,
                "Ramais" => categoriesDb.FirstOrDefault(x => x.Name == "Ramais")?.Id,
                "Suprimentos para Telefonia" => categoriesDb.FirstOrDefault(x => x.Name == "Suprimentos para Telefonia")?.Id,
                "Telefone Retrô" => categoriesDb.FirstOrDefault(x => x.Name == "Telefone Retrô")?.Id,
                "Telefones com fio" => categoriesDb.FirstOrDefault(x => x.Name == "Telefones com fio")?.Id,
                "Telefones sem fio" => categoriesDb.FirstOrDefault(x => x.Name == "Telefones sem fio")?.Id,
                "VoIP" => categoriesDb.FirstOrDefault(x => x.Name == "VoIP")?.Id,
                "TV e Vídeo" => categoriesDb.FirstOrDefault(x => x.Name == "TV e Vídeo")?.Id,
                "DVD e Blu-Ray Players" => categoriesDb.FirstOrDefault(x => x.Name == "DVD e Blu-Ray Players")?.Id,
                "Blu-Ray" => categoriesDb.FirstOrDefault(x => x.Name == "Blu-Ray")?.Id,
                "DVD Player Portátil com LCD" => categoriesDb.FirstOrDefault(x => x.Name == "DVD Player Portátil com LCD")?.Id,
                "DVD Player" => categoriesDb.FirstOrDefault(x => x.Name == "DVD Player")?.Id,
                "Gravadores de DVD" => categoriesDb.FirstOrDefault(x => x.Name == "Gravadores de DVD")?.Id,
                "Home Theater" => categoriesDb.FirstOrDefault(x => x.Name == "Home Theater")?.Id,
                "Receiver" => categoriesDb.FirstOrDefault(x => x.Name == "Receiver")?.Id,
                "Soundbar" => categoriesDb.FirstOrDefault(x => x.Name == "Soundbar")?.Id,
                "Wireless" => categoriesDb.FirstOrDefault(x => x.Name == "Wireless")?.Id,
                "Televisores" => categoriesDb.FirstOrDefault(x => x.Name == "Televisores")?.Id,
                "Smart TV" => categoriesDb.FirstOrDefault(x => x.Name == "Smart TV")?.Id,
                "TV 4K" => categoriesDb.FirstOrDefault(x => x.Name == "TV 4K")?.Id,
                "TV 8K" => categoriesDb.FirstOrDefault(x => x.Name == "TV 8K")?.Id,
                "TV de Plasma" => categoriesDb.FirstOrDefault(x => x.Name == "TV de Plasma")?.Id,
                "TV LED" => categoriesDb.FirstOrDefault(x => x.Name == "TV LED")?.Id,
                "TV Monitor" => categoriesDb.FirstOrDefault(x => x.Name == "TV Monitor")?.Id,
                "TV Portátil" => categoriesDb.FirstOrDefault(x => x.Name == "TV Portátil")?.Id,
                "Utilidades Domésticas" => categoriesDb.FirstOrDefault(x => x.Name == "Utilidades Domésticas")?.Id,
                "Acessórios e Utensílios" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios e Utensílios")?.Id,
                "Argola para Guardanapo" => categoriesDb.FirstOrDefault(x => x.Name == "Argola para Guardanapo")?.Id,
                "Cortadores, Moedores e Raladores" => categoriesDb.FirstOrDefault(x => x.Name == "Cortadores, Moedores e Raladores")?.Id,
                "Escorredor de Louça" => categoriesDb.FirstOrDefault(x => x.Name == "Escorredor de Louça")?.Id,
                "Fruteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Fruteiras")?.Id,
                "Galheteiros" => categoriesDb.FirstOrDefault(x => x.Name == "Galheteiros")?.Id,
                "Marmita" => categoriesDb.FirstOrDefault(x => x.Name == "Marmita")?.Id,
                "Petisqueiras" => categoriesDb.FirstOrDefault(x => x.Name == "Petisqueiras")?.Id,
                "Porta Condimentos" => categoriesDb.FirstOrDefault(x => x.Name == "Porta Condimentos")?.Id,
                "Porta-guardanapo" => categoriesDb.FirstOrDefault(x => x.Name == "Porta-guardanapo")?.Id,
                "Acessórios para Bar" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Bar")?.Id,
                "Baldes de Gelo" => categoriesDb.FirstOrDefault(x => x.Name == "Baldes de Gelo")?.Id,
                "Chopeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Chopeiras")?.Id,
                "Coqueteleiras" => categoriesDb.FirstOrDefault(x => x.Name == "Coqueteleiras")?.Id,
                "Decantadores" => categoriesDb.FirstOrDefault(x => x.Name == "Decantadores")?.Id,
                "Saca-rolhas" => categoriesDb.FirstOrDefault(x => x.Name == "Saca-rolhas")?.Id,
                "Ambiente" => categoriesDb.FirstOrDefault(x => x.Name == "Ambiente")?.Id,
                "Aparelhos de Jantar" => categoriesDb.FirstOrDefault(x => x.Name == "Aparelhos de Jantar")?.Id,
                "20 peças" => categoriesDb.FirstOrDefault(x => x.Name == "20 peças")?.Id,
                "30 peças" => categoriesDb.FirstOrDefault(x => x.Name == "30 peças")?.Id,
                "42 peças" => categoriesDb.FirstOrDefault(x => x.Name == "42 peças")?.Id,
                "Acima de 42 peças" => categoriesDb.FirstOrDefault(x => x.Name == "Acima de 42 peças")?.Id,
                "Conjunto de Pratos" => categoriesDb.FirstOrDefault(x => x.Name == "Conjunto de Pratos")?.Id,
                "Pratos Avulsos" => categoriesDb.FirstOrDefault(x => x.Name == "Pratos Avulsos")?.Id,
                "Baixelas e Travessas" => categoriesDb.FirstOrDefault(x => x.Name == "Baixelas e Travessas")?.Id,
                "Baixelas" => categoriesDb.FirstOrDefault(x => x.Name == "Baixelas")?.Id,
                "Bowls" => categoriesDb.FirstOrDefault(x => x.Name == "Bowls")?.Id,
                "Saladeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Saladeiras")?.Id,
                "Travessas" => categoriesDb.FirstOrDefault(x => x.Name == "Travessas")?.Id,
                "Bandejas" => categoriesDb.FirstOrDefault(x => x.Name == "Bandejas")?.Id,
                "Conjuntos para Pia" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos para Pia")?.Id,
                "Escova para Vaso Sanitário" => categoriesDb.FirstOrDefault(x => x.Name == "Escova para Vaso Sanitário")?.Id,
                "Porta Algodão e Cotonete" => categoriesDb.FirstOrDefault(x => x.Name == "Porta Algodão e Cotonete")?.Id,
                "Porta Escova de Dente" => categoriesDb.FirstOrDefault(x => x.Name == "Porta Escova de Dente")?.Id,
                "Saboneteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Saboneteiras")?.Id,
                "Carrinho de Compras" => categoriesDb.FirstOrDefault(x => x.Name == "Carrinho de Compras")?.Id,
                "Churrasqueiras e Acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Churrasqueiras e Acessórios")?.Id,
                "Acessórios para Churrasco" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Churrasco")?.Id,
                "Churrasqueiras" => categoriesDb.FirstOrDefault(x => x.Name == "Churrasqueiras")?.Id,
                "Conjunto para Churrasco" => categoriesDb.FirstOrDefault(x => x.Name == "Conjunto para Churrasco")?.Id,
                "Cooler para Bebidas" => categoriesDb.FirstOrDefault(x => x.Name == "Cooler para Bebidas")?.Id,
                "Faqueiros" => categoriesDb.FirstOrDefault(x => x.Name == "Faqueiros")?.Id,
                "Até 130 peças" => categoriesDb.FirstOrDefault(x => x.Name == "Até 130 peças")?.Id,
                "Até 30 peças" => categoriesDb.FirstOrDefault(x => x.Name == "Até 30 peças")?.Id,
                "Até 75 peças" => categoriesDb.FirstOrDefault(x => x.Name == "Até 75 peças")?.Id,
                "Cepos" => categoriesDb.FirstOrDefault(x => x.Name == "Cepos")?.Id,
                "Facas Avulsas" => categoriesDb.FirstOrDefault(x => x.Name == "Facas Avulsas")?.Id,
                "Talheres Avulsos" => categoriesDb.FirstOrDefault(x => x.Name == "Talheres Avulsos")?.Id,
                "Formas e Assadeiras" => categoriesDb.FirstOrDefault(x => x.Name == "Formas e Assadeiras")?.Id,
                "Garrafas Térmicas e Jarras" => categoriesDb.FirstOrDefault(x => x.Name == "Garrafas Térmicas e Jarras")?.Id,
                "Garrafas Térmicas" => categoriesDb.FirstOrDefault(x => x.Name == "Garrafas Térmicas")?.Id,
                "Jarras" => categoriesDb.FirstOrDefault(x => x.Name == "Jarras")?.Id,
                "Lavanderia" => categoriesDb.FirstOrDefault(x => x.Name == "Lavanderia")?.Id,
                "Baldes" => categoriesDb.FirstOrDefault(x => x.Name == "Baldes")?.Id,
                "Cabides" => categoriesDb.FirstOrDefault(x => x.Name == "Cabides")?.Id,
                "Capas e protetores" => categoriesDb.FirstOrDefault(x => x.Name == "Capas e protetores")?.Id,
                "Cesto para Roupa" => categoriesDb.FirstOrDefault(x => x.Name == "Cesto para Roupa")?.Id,
                "Tábua de Passar" => categoriesDb.FirstOrDefault(x => x.Name == "Tábua de Passar")?.Id,
                "Varal" => categoriesDb.FirstOrDefault(x => x.Name == "Varal")?.Id,
                "Lixeira" => categoriesDb.FirstOrDefault(x => x.Name == "Lixeira")?.Id,
                "Para Banheiro" => categoriesDb.FirstOrDefault(x => x.Name == "Para Banheiro")?.Id,
                "Para Cozinha" => categoriesDb.FirstOrDefault(x => x.Name == "Para Cozinha")?.Id,
                "Para Lavanderia" => categoriesDb.FirstOrDefault(x => x.Name == "Para Lavanderia")?.Id,
                "Organização" => categoriesDb.FirstOrDefault(x => x.Name == "Organização")?.Id,
                "Panelas" => categoriesDb.FirstOrDefault(x => x.Name == "Panelas")?.Id,
                "Caçarolas e Caldeirões" => categoriesDb.FirstOrDefault(x => x.Name == "Caçarolas e Caldeirões")?.Id,
                "Chaleiras" => categoriesDb.FirstOrDefault(x => x.Name == "Chaleiras")?.Id,
                "Conjuntos de Panela" => categoriesDb.FirstOrDefault(x => x.Name == "Conjuntos de Panela")?.Id,
                "Frigideiras" => categoriesDb.FirstOrDefault(x => x.Name == "Frigideiras")?.Id,
                "Leiteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Leiteiras")?.Id,
                "Panelas Avulsas" => categoriesDb.FirstOrDefault(x => x.Name == "Panelas Avulsas")?.Id,
                "Panelas de Pressão" => categoriesDb.FirstOrDefault(x => x.Name == "Panelas de Pressão")?.Id,
                "Tampas e acessórios" => categoriesDb.FirstOrDefault(x => x.Name == "Tampas e acessórios")?.Id,
                "Potes" => categoriesDb.FirstOrDefault(x => x.Name == "Potes")?.Id,
                "Rechaud e Fondue" => categoriesDb.FirstOrDefault(x => x.Name == "Rechaud e Fondue")?.Id,
                "Aparelhos de Fondue" => categoriesDb.FirstOrDefault(x => x.Name == "Aparelhos de Fondue")?.Id,
                "Rechaud" => categoriesDb.FirstOrDefault(x => x.Name == "Rechaud")?.Id,
                "Sobremesa, Chá e Café" => categoriesDb.FirstOrDefault(x => x.Name == "Sobremesa, Chá e Café")?.Id,
                "Açucareiros" => categoriesDb.FirstOrDefault(x => x.Name == "Açucareiros")?.Id,
                "Baleiros e Bombonieres" => categoriesDb.FirstOrDefault(x => x.Name == "Baleiros e Bombonieres")?.Id,
                "Bolos" => categoriesDb.FirstOrDefault(x => x.Name == "Bolos")?.Id,
                "Bules" => categoriesDb.FirstOrDefault(x => x.Name == "Bules")?.Id,
                "Canecas" => categoriesDb.FirstOrDefault(x => x.Name == "Canecas")?.Id,
                "Conjunto de Xícaras" => categoriesDb.FirstOrDefault(x => x.Name == "Conjunto de Xícaras")?.Id,
                "Jogos para Torta" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos para Torta")?.Id,
                "Manteigueiras" => categoriesDb.FirstOrDefault(x => x.Name == "Manteigueiras")?.Id,
                "Pratos e Taças de Sobremesa" => categoriesDb.FirstOrDefault(x => x.Name == "Pratos e Taças de Sobremesa")?.Id,
                "Talheres" => categoriesDb.FirstOrDefault(x => x.Name == "Talheres")?.Id,
                "Taças" => categoriesDb.FirstOrDefault(x => x.Name == "Taças")?.Id,
                "Viagens" => categoriesDb.FirstOrDefault(x => x.Name == "Viagens")?.Id,
                "Capas para PC e Periféricos" => categoriesDb.FirstOrDefault(x => x.Name == "Capas para PC e Periféricos")?.Id,
                "Etiquetadores e Rotuladores" => categoriesDb.FirstOrDefault(x => x.Name == "Etiquetadores e Rotuladores")?.Id,
                "Leitores" => categoriesDb.FirstOrDefault(x => x.Name == "Leitores")?.Id,
                "Telas de Projeção" => categoriesDb.FirstOrDefault(x => x.Name == "Telas de Projeção")?.Id,
                "Climatizadores Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Climatizadores Industriais")?.Id,
                "Acessórios para Lojas" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Lojas")?.Id,
                "Ganchos e Suportes" => categoriesDb.FirstOrDefault(x => x.Name == "Ganchos e Suportes")?.Id,
                "Vitrines e Balcões" => categoriesDb.FirstOrDefault(x => x.Name == "Vitrines e Balcões")?.Id,
                "Batedor de Milk Shake" => categoriesDb.FirstOrDefault(x => x.Name == "Batedor de Milk Shake")?.Id,
                "Linha Chocolate" => categoriesDb.FirstOrDefault(x => x.Name == "Linha Chocolate")?.Id,
                "Máquina de Churros" => categoriesDb.FirstOrDefault(x => x.Name == "Máquina de Churros")?.Id,
                "Balcões e Vitrines Refrigeradas" => categoriesDb.FirstOrDefault(x => x.Name == "Balcões e Vitrines Refrigeradas")?.Id,
                "Chapéus" => categoriesDb.FirstOrDefault(x => x.Name == "Chapéus")?.Id,
                "Bebedouros Industriais" => categoriesDb.FirstOrDefault(x => x.Name == "Bebedouros Industriais")?.Id,
                "Instalação de Ar e Ventilação" => categoriesDb.FirstOrDefault(x => x.Name == "Instalação de Ar e Ventilação")?.Id,
                "Lareiras" => categoriesDb.FirstOrDefault(x => x.Name == "Lareiras")?.Id,
                "Ventilador de Torre" => categoriesDb.FirstOrDefault(x => x.Name == "Ventilador de Torre")?.Id,
                "Artigos Descartáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Descartáveis")?.Id, //--
                "Guardanapos Descartáveis" => categoriesDb.FirstOrDefault(x => x.Name == "Descartáveis")?.Id, //--
                "Festa a Fantasia" => categoriesDb.FirstOrDefault(x => x.Name == "Festa a Fantasia")?.Id,
                "Adereços" => categoriesDb.FirstOrDefault(x => x.Name == "Festa a Fantasia")?.Id, //--
                "Itens para Decoração" => categoriesDb.FirstOrDefault(x => x.Name == "Enfeites e Decoração")?.Id, //--
                "Decoração de Mesa" => categoriesDb.FirstOrDefault(x => x.Name == "Enfeites e Decoração")?.Id, //--
                "Acessórios de Pneus para Motos" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios de Pneus para Motos")?.Id,
                "Alimentador para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Bebês")?.Id, //--
                "Fralda de Pano " => categoriesDb.FirstOrDefault(x => x.Name == "Troca do Bebê")?.Id, //--
                "Kit Alimentação" => categoriesDb.FirstOrDefault(x => x.Name == "Kit Alimentação")?.Id,
                "Colônias" => categoriesDb.FirstOrDefault(x => x.Name == "Colônias")?.Id,
                "Perfumaria para Bebê" => categoriesDb.FirstOrDefault(x => x.Name == "Perfumaria para Bebê")?.Id,
                "Termômetro para Banho" => categoriesDb.FirstOrDefault(x => x.Name == "Termômetro para Banho")?.Id,
                "Bolsas Térmicas" => categoriesDb.FirstOrDefault(x => x.Name == "Bolsas Térmicas")?.Id, // tem 2 inativas
                "Edredom para Bebês" => categoriesDb.FirstOrDefault(x => x.Name == "Edredom para Bebês")?.Id,
                "Porta-fralda" => categoriesDb.FirstOrDefault(x => x.Name == "Porta-fralda")?.Id,
                "Bebidas Não Alcoólicas" => categoriesDb.FirstOrDefault(x => x.Name == "Bebidas Não Alcoólicas")?.Id,
                "Energéticos" => categoriesDb.FirstOrDefault(x => x.Name == "Bebidas Não Alcoólicas")?.Id, //--
                "Pneumologia e Inaloterapia" => categoriesDb.FirstOrDefault(x => x.Name == "Pneumologia e Inaloterapia")?.Id,
                "Esteiras e Assentos Massageadores" => categoriesDb.FirstOrDefault(x => x.Name == "Esteiras e Assentos Massageadores")?.Id,
                "Massageador Corporal" => categoriesDb.FirstOrDefault(x => x.Name == "Massageador Corporal")?.Id,
                "Massageador para Pés" => categoriesDb.FirstOrDefault(x => x.Name == "Massageador para Pés")?.Id,
                "Massageador para Pescoço" => categoriesDb.FirstOrDefault(x => x.Name == "Massageador para Pescoço")?.Id,
                "Poltronas Massageadoras" => categoriesDb.FirstOrDefault(x => x.Name == "Poltronas Massageadoras")?.Id,
                "Cupcake" => categoriesDb.FirstOrDefault(x => x.Name == "Cupcake")?.Id,
                "Doutora Brinquedos" => categoriesDb.FirstOrDefault(x => x.Name == "Doutora Brinquedos")?.Id,
                "Hamsters in a House" => categoriesDb.FirstOrDefault(x => x.Name == "Hamsters in a House")?.Id,
                "Lalaloopsy" => categoriesDb.FirstOrDefault(x => x.Name == "Lalaloopsy")?.Id,
                "Aquaman" => categoriesDb.FirstOrDefault(x => x.Name == "Aquaman")?.Id,
                "Como Treinar o Seu Dragão" => categoriesDb.FirstOrDefault(x => x.Name == "Como Treinar o Seu Dragão")?.Id,
                "Pokémon" => categoriesDb.FirstOrDefault(x => x.Name == "Pokémon")?.Id,
                "UglyDolls" => categoriesDb.FirstOrDefault(x => x.Name == "UglyDolls")?.Id,
                "Acessórios para Calçados" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Calçados")?.Id,
                "Pezeira" => categoriesDb.FirstOrDefault(x => x.Name == "Pezeira")?.Id,
                "Toalhas de Natal" => categoriesDb.FirstOrDefault(x => x.Name == "Toalhas de Natal")?.Id,
                "Adaptador para Câmeras, Filmadoras e Drones" => categoriesDb.FirstOrDefault(x => x.Name == "Adaptador para Câmeras, Filmadoras e Drones")?.Id,
                "Fixação e Suporte" => categoriesDb.FirstOrDefault(x => x.Name == "Fixação e Suporte")?.Id,
                "Iluminação Foto e Filmagem" => categoriesDb.FirstOrDefault(x => x.Name == "Iluminação Foto e Filmagem")?.Id,
                "Limpeza para Câmeras, Filmadoras e Drones" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza para Câmeras, Filmadoras e Drones")?.Id,
                "Microfone para Câmeras" => categoriesDb.FirstOrDefault(x => x.Name == "Microfone para Câmeras")?.Id,
                "Proteção" => categoriesDb.FirstOrDefault(x => x.Name == "Proteção")?.Id,
                "Câmeras Instantâneas" => categoriesDb.FirstOrDefault(x => x.Name == "Câmeras Instantâneas")?.Id,
                "Acessórios para Pistolas de Pintura" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Pistolas de Pintura")?.Id,
                "Acessórios para Segurança" => categoriesDb.FirstOrDefault(x => x.Name == "Acessórios para Segurança")?.Id,
                "Estátuas e Esculturas" => categoriesDb.FirstOrDefault(x => x.Name == "Estátuas e Esculturas")?.Id,
                "Porta-joias" => categoriesDb.FirstOrDefault(x => x.Name == "Porta-joias")?.Id,
                "Relógio e Despertador" => categoriesDb.FirstOrDefault(x => x.Name == "Relógio de Mesa e Despertador")?.Id,//--
                "Soul e R&amp" => categoriesDb.FirstOrDefault(x => x.Name == "Soul e R&B")?.Id,//--
                "Descolorante" => categoriesDb.FirstOrDefault(x => x.Name == "Perfumaria e Cosméticos")?.Id,//--
                "3 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "3 Bocas")?.Id,
                "Piso 3 Bocas" => categoriesDb.FirstOrDefault(x => x.Name == "Piso 3 Bocas")?.Id,
                "Vassoura Elétrica" => categoriesDb.FirstOrDefault(x => x.Name == "Vassoura Elétrica")?.Id,
                "Sorveteiras e Iogurteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Sorveteiras e Iogurteiras")?.Id,
                "Panquequeira" => categoriesDb.FirstOrDefault(x => x.Name == "Panquequeiras")?.Id,//--
                "Monitores de Atividades" => categoriesDb.FirstOrDefault(x => x.Name == "Monitores de Atividades")?.Id,
                "Vestidos e Saias" => categoriesDb.FirstOrDefault(x => x.Name == "Vestidos e Saias")?.Id,
                "Lixadeiras Pneumáticas" => categoriesDb.FirstOrDefault(x => x.Name == "Lixadeiras Pneumáticas")?.Id,
                "Politriz Pneumática" => categoriesDb.FirstOrDefault(x => x.Name == "Politriz Pneumática")?.Id,
                "Disney Infinity" => categoriesDb.FirstOrDefault(x => x.Name == "Disney Infinity")?.Id,
                "Jogos Nintendo Switch" => categoriesDb.FirstOrDefault(x => x.Name == "Jogos Nintendo Switch")?.Id,
                "Skylanders" => categoriesDb.FirstOrDefault(x => x.Name == "Skylanders")?.Id,
                "Pandeiros" => categoriesDb.FirstOrDefault(x => x.Name == "Pandeiros")?.Id,
                "Tamborim" => categoriesDb.FirstOrDefault(x => x.Name == "Tamborim")?.Id,
                "Armação" => categoriesDb.FirstOrDefault(x => x.Name == "Armação")?.Id,
                "Macacão" => categoriesDb.FirstOrDefault(x => x.Name == "Macacão")?.Id,
                "Fibra Ótica" => categoriesDb.FirstOrDefault(x => x.Name == "Fibra Ótica")?.Id,
                "Pequenas" => categoriesDb.FirstOrDefault(x => x.Name == "Pequenas")?.Id,
                "Bonecos Animados" => categoriesDb.FirstOrDefault(x => x.Name == "Bonecos Animados")?.Id,
                "Enfeites Luminosos" => categoriesDb.FirstOrDefault(x => x.Name == "Enfeites Luminosos")?.Id,
                "Estrelas e Ponteiras" => categoriesDb.FirstOrDefault(x => x.Name == "Estrelas e Ponteiras")?.Id,
                "Festões, Cordões e Colares" => categoriesDb.FirstOrDefault(x => x.Name == "Festões, Cordões e Colares")?.Id,
                "Laços e Fitas" => categoriesDb.FirstOrDefault(x => x.Name == "Laços e Fitas")?.Id,
                "Presépio" => categoriesDb.FirstOrDefault(x => x.Name == "Presépio")?.Id,
                "Saias e Botas" => categoriesDb.FirstOrDefault(x => x.Name == "Saias e Botas")?.Id,
                "Sinos e Anjos" => categoriesDb.FirstOrDefault(x => x.Name == "Sinos e Anjos")?.Id,
                "Utensílios de Natal" => categoriesDb.FirstOrDefault(x => x.Name == "Utensílios de Natal")?.Id,
                "Fragmentadoras de Papéis" => categoriesDb.FirstOrDefault(x => x.Name == "Fragmentadoras de Papéis")?.Id,
                "Guilhotinas e Refiladoras de Papel" => categoriesDb.FirstOrDefault(x => x.Name == "Guilhotinas e Refiladoras de Papel")?.Id,
                "Plastificadoras" => categoriesDb.FirstOrDefault(x => x.Name == "Plastificadoras")?.Id,
                "Kit Escolar" => categoriesDb.FirstOrDefault(x => x.Name == "Kit Escolar")?.Id,
                "Pentes e Escovas" => categoriesDb.FirstOrDefault(x => x.Name == "Escovas")?.Id,
                "Óleo e Hidratante Corporal" => categoriesDb.FirstOrDefault(x => x.Name == "Hidratantes e Óleos")?.Id,//--
                "Talco" => categoriesDb.FirstOrDefault(x => x.Name == "Talco para Bebê")?.Id,//--
                "Lubrificantes e Preservativos" => categoriesDb.FirstOrDefault(x => x.Name == "Lubrificantes e Preservativos")?.Id,
                "Lubrificante" => categoriesDb.FirstOrDefault(x => x.Name == "Lubrificante")?.Id,
                "Acessórios de Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,//--
                "Espelho de Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,//--
                "Estojo de Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,
                "Lápis" => categoriesDb.FirstOrDefault(x => x.Name == "Lápis")?.Id,
                "Máscara para Cílios" => categoriesDb.FirstOrDefault(x => x.Name == "Máscara para Cílios")?.Id,
                "Pincel de Maquiagem" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,//--
                "Pó" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,
                "Primer" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,
                "Sombra" => categoriesDb.FirstOrDefault(x => x.Name == "Maquiagem")?.Id,
                "Baby" => categoriesDb.FirstOrDefault(x => x.Name == "Bebês")?.Id,//--
                "Antiolheira" => categoriesDb.FirstOrDefault(x => x.Name == "Dermocosméticos")?.Id,//--
                "Hidratante Labial" => categoriesDb.FirstOrDefault(x => x.Name == "Dermocosméticos")?.Id,//--
                "Acessórios de Unhas" => categoriesDb.FirstOrDefault(x => x.Name == "Tratamento para Unhas")?.Id,//--
                "Alicates e Cortadores" => categoriesDb.FirstOrDefault(x => x.Name == "Kit Higiene, Tesoura e Cortador de Unhas")?.Id,//--
                "Tesoura" => categoriesDb.FirstOrDefault(x => x.Name == "Tesouras")?.Id,//--
                "Aromatizador de Roupa" => categoriesDb.FirstOrDefault(x => x.Name == "Aromatizador")?.Id,//--
                "Ceras" => categoriesDb.FirstOrDefault(x => x.Name == "Ceras, Silicone e Multiusos")?.Id,//--
                "Inseticidas e Raticidas" => categoriesDb.FirstOrDefault(x => x.Name == "Inseticidas")?.Id,//--
                "Lustra Móveis" => categoriesDb.FirstOrDefault(x => x.Name == "Limpeza de Ambientes")?.Id,//--
                "Windows Phone" => categoriesDb.FirstOrDefault(x => x.Name == "Windows Phone")?.Id,
                "Porta-copos" => categoriesDb.FirstOrDefault(x => x.Name == "Porta-copos")?.Id,
                "Acima de 130 peças" => categoriesDb.FirstOrDefault(x => x.Name == "Acima de 130 peças")?.Id,
                "Chimarrão e Tererê" => categoriesDb.FirstOrDefault(x => x.Name == "Chimarrão e Tererê")?.Id,
                _ => null,
            };
        }

    }
}
