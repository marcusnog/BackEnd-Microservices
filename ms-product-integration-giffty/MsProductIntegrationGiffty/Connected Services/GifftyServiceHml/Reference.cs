//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GifftyServiceHml
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Giftty", ConfigurationName="GifftyServiceHml.PontoDeAcessoParceirosGifttyPortType")]
    public interface PontoDeAcessoParceirosGifttyPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarProdutos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarProdutosAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarEstoque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarEstoqueAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#CalcularFrete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CalcularFreteAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#InserirPedido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InserirPedidoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarMeusPedidos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarMeusPedidosAsync(string documento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarTracking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarTrackingAsync(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarPedidosEntregues" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarPedidosEntreguesAsync(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarPedidosBounce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarPedidosBounceAsync(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#consultarPedidoParceiro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> consultarPedidoParceiroAsync(string pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#InserirPedidoRecargaCea", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InserirPedidoRecargaCeaAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#MeuCurso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MeuCursoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarMeuCurso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarMeuCursoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#CancelarMeuCurso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CancelarMeuCursoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#MeuSonho", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MeuSonhoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarMeuSonho", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarMeuSonhoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ConsultarSituacaoMeuSonho" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConsultarSituacaoMeuSonhoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#CancelarMeuSonho", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CancelarMeuSonhoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#InformarResgateSonho", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InformarResgateSonhoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#InserirPedidoSonho", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> InserirPedidoSonhoAsync(string xmlDados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#consultarLinkPedidoParcei" +
            "ro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> consultarLinkPedidoParceiroAsync(string pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#consultarDadosCartaoPedid" +
            "oParceiro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> consultarDadosCartaoPedidoParceiroAsync(string pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#liberarPedidoAntiFraude", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> liberarPedidoAntiFraudeAsync(string pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#ReenviarValeVirtual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ReenviarValeVirtualAsync(string pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.dshopdesenv.com/giftty_teste/server.php#consultarLinkPedidoParcei" +
            "ro2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> consultarLinkPedidoParceiro2Async(string pedido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface PontoDeAcessoParceirosGifttyPortTypeChannel : GifftyServiceHml.PontoDeAcessoParceirosGifttyPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class PontoDeAcessoParceirosGifttyPortTypeClient : System.ServiceModel.ClientBase<GifftyServiceHml.PontoDeAcessoParceirosGifttyPortType>, GifftyServiceHml.PontoDeAcessoParceirosGifttyPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PontoDeAcessoParceirosGifttyPortTypeClient() : 
                base(PontoDeAcessoParceirosGifttyPortTypeClient.GetDefaultBinding(), PontoDeAcessoParceirosGifttyPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.PontoDeAcessoParceirosGifttyPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PontoDeAcessoParceirosGifttyPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(PontoDeAcessoParceirosGifttyPortTypeClient.GetBindingForEndpoint(endpointConfiguration), PontoDeAcessoParceirosGifttyPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PontoDeAcessoParceirosGifttyPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PontoDeAcessoParceirosGifttyPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PontoDeAcessoParceirosGifttyPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PontoDeAcessoParceirosGifttyPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PontoDeAcessoParceirosGifttyPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> ConsultarProdutosAsync(string xmlDados)
        {
            return base.Channel.ConsultarProdutosAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarEstoqueAsync(string xmlDados)
        {
            return base.Channel.ConsultarEstoqueAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> CalcularFreteAsync(string xmlDados)
        {
            return base.Channel.CalcularFreteAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> InserirPedidoAsync(string xmlDados)
        {
            return base.Channel.InserirPedidoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarMeusPedidosAsync(string documento)
        {
            return base.Channel.ConsultarMeusPedidosAsync(documento);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarTrackingAsync(string codigo)
        {
            return base.Channel.ConsultarTrackingAsync(codigo);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarPedidosEntreguesAsync(string codigo)
        {
            return base.Channel.ConsultarPedidosEntreguesAsync(codigo);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarPedidosBounceAsync(string codigo)
        {
            return base.Channel.ConsultarPedidosBounceAsync(codigo);
        }
        
        public System.Threading.Tasks.Task<string> consultarPedidoParceiroAsync(string pedido)
        {
            return base.Channel.consultarPedidoParceiroAsync(pedido);
        }
        
        public System.Threading.Tasks.Task<string> InserirPedidoRecargaCeaAsync(string xmlDados)
        {
            return base.Channel.InserirPedidoRecargaCeaAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> MeuCursoAsync(string xmlDados)
        {
            return base.Channel.MeuCursoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarMeuCursoAsync(string xmlDados)
        {
            return base.Channel.ConsultarMeuCursoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> CancelarMeuCursoAsync(string xmlDados)
        {
            return base.Channel.CancelarMeuCursoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> MeuSonhoAsync(string xmlDados)
        {
            return base.Channel.MeuSonhoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarMeuSonhoAsync(string xmlDados)
        {
            return base.Channel.ConsultarMeuSonhoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarSituacaoMeuSonhoAsync(string xmlDados)
        {
            return base.Channel.ConsultarSituacaoMeuSonhoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> CancelarMeuSonhoAsync(string xmlDados)
        {
            return base.Channel.CancelarMeuSonhoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> InformarResgateSonhoAsync(string xmlDados)
        {
            return base.Channel.InformarResgateSonhoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> InserirPedidoSonhoAsync(string xmlDados)
        {
            return base.Channel.InserirPedidoSonhoAsync(xmlDados);
        }
        
        public System.Threading.Tasks.Task<string> consultarLinkPedidoParceiroAsync(string pedido)
        {
            return base.Channel.consultarLinkPedidoParceiroAsync(pedido);
        }
        
        public System.Threading.Tasks.Task<string> consultarDadosCartaoPedidoParceiroAsync(string pedido)
        {
            return base.Channel.consultarDadosCartaoPedidoParceiroAsync(pedido);
        }
        
        public System.Threading.Tasks.Task<string> liberarPedidoAntiFraudeAsync(string pedido)
        {
            return base.Channel.liberarPedidoAntiFraudeAsync(pedido);
        }
        
        public System.Threading.Tasks.Task<string> ReenviarValeVirtualAsync(string pedido)
        {
            return base.Channel.ReenviarValeVirtualAsync(pedido);
        }
        
        public System.Threading.Tasks.Task<string> consultarLinkPedidoParceiro2Async(string pedido)
        {
            return base.Channel.consultarLinkPedidoParceiro2Async(pedido);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PontoDeAcessoParceirosGifttyPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PontoDeAcessoParceirosGifttyPort))
            {
                return new System.ServiceModel.EndpointAddress("http://services.dshopdesenv.com/giftty_teste/server.php");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PontoDeAcessoParceirosGifttyPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.PontoDeAcessoParceirosGifttyPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PontoDeAcessoParceirosGifttyPortTypeClient.GetEndpointAddress(EndpointConfiguration.PontoDeAcessoParceirosGifttyPort);
        }
        
        public enum EndpointConfiguration
        {
            
            PontoDeAcessoParceirosGifttyPort,
        }
    }
}
